[{"D:\\c# Project\\axon-archive\\src\\index.js":"1","D:\\c# Project\\axon-archive\\src\\reportWebVitals.js":"2","D:\\c# Project\\axon-archive\\src\\App.js":"3","D:\\c# Project\\axon-archive\\src\\store\\index.js":"4","D:\\c# Project\\axon-archive\\src\\components\\login\\index.js":"5","D:\\c# Project\\axon-archive\\src\\store\\actions\\LoginActions.js":"6","D:\\c# Project\\axon-archive\\src\\store\\reducers\\index.js":"7","D:\\c# Project\\axon-archive\\src\\store\\reducers\\LoginReducer.js":"8","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ValidationTextField.js":"9","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\index.js":"10","D:\\c# Project\\axon-archive\\src\\components\\404\\index.js":"11","D:\\c# Project\\axon-archive\\src\\store\\reducers\\AuthUserReducer.js":"12","D:\\c# Project\\axon-archive\\src\\store\\actions\\AuthUserActions.js":"13","D:\\c# Project\\axon-archive\\src\\router\\ProtectedRoute.js":"14","D:\\c# Project\\axon-archive\\src\\auth\\PanelType.js":"15","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\index.js":"16","D:\\c# Project\\axon-archive\\src\\auth\\LocalStorage.js":"17","D:\\c# Project\\axon-archive\\src\\store\\reducers\\OtherReducer.js":"18","D:\\c# Project\\axon-archive\\src\\store\\actions\\OtherActions.js":"19","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\ProfileMenu.js":"20","D:\\c# Project\\axon-archive\\src\\store\\actions\\EditProfileModalActions.js":"21","D:\\c# Project\\axon-archive\\src\\components\\profileEditModal\\index.js":"22","D:\\c# Project\\axon-archive\\src\\components\\profileEditModal\\ImageCropper.js":"23","D:\\c# Project\\axon-archive\\src\\store\\actions\\CropImageModalActions.js":"24","D:\\c# Project\\axon-archive\\src\\components\\profileEditModal\\GetCroppedImage.js":"25","D:\\c# Project\\axon-archive\\src\\store\\reducers\\EditProfileModalReducer.js":"26","D:\\c# Project\\axon-archive\\src\\store\\reducers\\CropImageModalReducer.js":"27","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ValidationMobileField.js":"28","D:\\c# Project\\axon-archive\\src\\components\\context\\DialogContext.js":"29","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\PagesContainer.js":"30","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\CustomTable.js":"31","D:\\c# Project\\axon-archive\\src\\store\\actions\\AddEditUserModalActions.js":"32","D:\\c# Project\\axon-archive\\src\\store\\reducers\\AddEditUserModalReducer.js":"33","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ValidationSelectField.js":"34","D:\\c# Project\\axon-archive\\src\\components\\resolvesettings.js":"35","D:\\c# Project\\axon-archive\\src\\store\\actions\\AddEditDesignationModalActions.js":"36","D:\\c# Project\\axon-archive\\src\\store\\reducers\\AddEditDesignationModalReducer.js":"37","D:\\c# Project\\axon-archive\\src\\store\\actions\\AddEditFoldersPathModalActions.js":"38","D:\\c# Project\\axon-archive\\src\\store\\reducers\\AddEditFoldersPathModalReducer.js":"39","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\PagesContainer.js":"40","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\ProfileMenu.js":"41","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\NavigationList.js":"42","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\Navigation.js":"43","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminFoldersPath\\index.js":"44","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsers\\index.js":"45","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsers\\AddEditUserModal.js":"46","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminFoldersPath\\AddEditFoldersPathModal.js":"47","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\ResizableDrawer.js":"48","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AppBarWithHeight.js":"49","D:\\c# Project\\axon-archive\\src\\store\\reducers\\FilesListAndEditorReducer.js":"50","D:\\c# Project\\axon-archive\\src\\store\\actions\\FilesListAndEditorActions.js":"51","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsers\\FoldersList.js":"52","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\floatingMenu\\ResponsiveMenu.js":"53","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\floatingMenu\\ListMenu.js":"54","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\NavigationDrawer.js":"55","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\NavigationDrawerList.js":"56","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FoldersMenuBottomWithHeight.js":"57","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ScrollToTopButton.js":"58","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\AppBarWithHeightAndWindowHeight.js":"59","D:\\c# Project\\axon-archive\\src\\store\\reducers\\FolderFilesModalReducer.js":"60","D:\\c# Project\\axon-archive\\src\\store\\actions\\FolderFilesModalActions.js":"61","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminFoldersPath\\FolderFilesModal.js":"62","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FilesList\\FilesList.js":"63","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FilesList\\resolveExtensions.js":"64","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\PreviewFile\\PreviewFile.js":"65","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\PDFViewer.js":"66","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\DownloadButton.js":"67","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\SearchWithDelay.js":"68","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ConditionalHighlightedTextTypography.js":"69","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsersHistory\\index.js":"70","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminDesignations\\index.js":"71","D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminDesignations\\AddEditDesignationModal.js":"72","D:\\c# Project\\axon-archive\\src\\store\\reducers\\ModDetailsModalReducer.js":"73","D:\\c# Project\\axon-archive\\src\\store\\actions\\ModDetailsModalActions.js":"74","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\ModDetailsModal.js":"75","D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\DateRangeModal\\DateRangeModal.js":"76","D:\\c# Project\\axon-archive\\src\\store\\actions\\FileDownloadHistoryActions.js":"77","D:\\c# Project\\axon-archive\\src\\store\\reducers\\FileDownloadHistoryReducer.js":"78","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\UserDownloadHistoryModal.js":"79","D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FileListMenu.js":"80","D:\\halalpizzabackendui\\src\\index.js":"81","D:\\halalpizzabackendui\\src\\App.js":"82","D:\\halalpizzabackendui\\src\\reportWebVitals.js":"83","D:\\halalpizzabackendui\\src\\auth\\LocalStorage.js":"84","D:\\halalpizzabackendui\\src\\store\\actions\\OtherActions.js":"85","D:\\halalpizzabackendui\\src\\store\\actions\\AuthUserActions.js":"86","D:\\halalpizzabackendui\\src\\store\\index.js":"87","D:\\halalpizzabackendui\\src\\router\\ProtectedRoute.js":"88","D:\\halalpizzabackendui\\src\\components\\context\\DialogContext.js":"89","D:\\halalpizzabackendui\\src\\components\\login\\index.js":"90","D:\\halalpizzabackendui\\src\\components\\404\\index.js":"91","D:\\halalpizzabackendui\\src\\auth\\PanelType.js":"92","D:\\halalpizzabackendui\\src\\store\\reducers\\index.js":"93","D:\\halalpizzabackendui\\src\\store\\actions\\LoginActions.js":"94","D:\\halalpizzabackendui\\src\\components\\adminpanel\\index.js":"95","D:\\halalpizzabackendui\\src\\components\\otherComponents\\ValidationTextField.js":"96","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditUserModalReducer.js":"97","D:\\halalpizzabackendui\\src\\store\\reducers\\CropImageModalReducer.js":"98","D:\\halalpizzabackendui\\src\\store\\reducers\\EditProfileModalReducer.js":"99","D:\\halalpizzabackendui\\src\\store\\reducers\\OtherReducer.js":"100","D:\\halalpizzabackendui\\src\\store\\actions\\AddEditUserModalActions.js":"101","D:\\halalpizzabackendui\\src\\store\\actions\\CropImageModalActions.js":"102","D:\\halalpizzabackendui\\src\\store\\actions\\EditProfileModalActions.js":"103","D:\\halalpizzabackendui\\src\\components\\adminpanel\\PagesContainer.js":"104","D:\\halalpizzabackendui\\src\\components\\adminpanel\\ProfileMenu.js":"105","D:\\halalpizzabackendui\\src\\components\\adminpanel\\NavigationList.js":"106","D:\\halalpizzabackendui\\src\\components\\adminpanel\\Navigation.js":"107","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AppBarWithHeight.js":"108","D:\\halalpizzabackendui\\src\\store\\reducers\\AuthUserReducer.js":"109","D:\\halalpizzabackendui\\src\\store\\reducers\\LoginReducer.js":"110","D:\\halalpizzabackendui\\src\\components\\profileEditModal\\index.js":"111","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminUsersHistory\\index.js":"112","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminUsers\\index.js":"113","D:\\halalpizzabackendui\\src\\components\\otherComponents\\ValidationMobileField.js":"114","D:\\halalpizzabackendui\\src\\components\\profileEditModal\\ImageCropper.js":"115","D:\\halalpizzabackendui\\src\\components\\otherComponents\\CustomTable.js":"116","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminUsers\\AddEditUserModal.js":"117","D:\\halalpizzabackendui\\src\\components\\profileEditModal\\GetCroppedImage.js":"118","D:\\halalpizzabackendui\\src\\components\\otherComponents\\ValidationSelectField.js":"119","D:\\halalpizzabackendui\\src\\components\\otherComponents\\DateRangeModal\\DateRangeModal.js":"120","D:\\halalpizzabackendui\\src\\components\\resolvesettings.js":"121","D:\\halalpizzabackendui\\src\\hooks\\useSwaggerHook.js":"122","D:\\halalpizzabackendui\\src\\auth\\StatusType.js":"123","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditCategoriesModalReducer.js":"124","D:\\halalpizzabackendui\\src\\store\\actions\\AddEditCategoriesModalActions.js":"125","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminCategories\\index.js":"126","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminCategories\\AddEditCategoriesModal.js":"127","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditSlidersModalReducer.js":"128","D:\\halalpizzabackendui\\src\\store\\actions\\AddEditSlidersModalActions.js":"129","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminSliders\\index.js":"130","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminSliders\\AddEditSlidersModal.js":"131","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditProductsModalReducer.js":"132","D:\\halalpizzabackendui\\src\\store\\actions\\AddEditProductsModalActions.js":"133","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\index.js":"134","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\AddEditProductsModal.js":"135","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminAddons\\index.js":"136","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminAddons\\AddEditAddonsModal.js":"137","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditAddonsModalReducer.js":"138","D:\\halalpizzabackendui\\src\\store\\actions\\AddEditAddonsModalActions.js":"139","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\AddVariationTitleModal.js":"140","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\AddVariationDataModal.js":"141","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditProductsVariationModalReducer.js":"142","D:\\halalpizzabackendui\\src\\store\\actions\\AddEditProductsVariationModalActions.js":"143"},{"size":5167,"mtime":1697230773076,"results":"144","hashOfConfig":"145"},{"size":362,"mtime":1692443025874,"results":"146","hashOfConfig":"145"},{"size":1878,"mtime":1695236621314,"results":"147","hashOfConfig":"145"},{"size":362,"mtime":1692876529624,"results":"148","hashOfConfig":"145"},{"size":10221,"mtime":1698482979598,"results":"149","hashOfConfig":"145"},{"size":1085,"mtime":1696929817295,"results":"150","hashOfConfig":"145"},{"size":1550,"mtime":1697225675739,"results":"151","hashOfConfig":"145"},{"size":1241,"mtime":1696929671736,"results":"152","hashOfConfig":"145"},{"size":4016,"mtime":1697367044602,"results":"153","hashOfConfig":"145"},{"size":5060,"mtime":1698482966079,"results":"154","hashOfConfig":"145"},{"size":1561,"mtime":1693397544059,"results":"155","hashOfConfig":"145"},{"size":2706,"mtime":1698149256475,"results":"156","hashOfConfig":"145"},{"size":2695,"mtime":1698149258262,"results":"157","hashOfConfig":"145"},{"size":1160,"mtime":1693409674924,"results":"158","hashOfConfig":"145"},{"size":87,"mtime":1693318311643,"results":"159","hashOfConfig":"145"},{"size":8092,"mtime":1698482915459,"results":"160","hashOfConfig":"145"},{"size":805,"mtime":1696929007152,"results":"161","hashOfConfig":"145"},{"size":2467,"mtime":1697625975894,"results":"162","hashOfConfig":"145"},{"size":2141,"mtime":1697625932430,"results":"163","hashOfConfig":"145"},{"size":5867,"mtime":1697396478683,"results":"164","hashOfConfig":"145"},{"size":3321,"mtime":1694542389901,"results":"165","hashOfConfig":"145"},{"size":20933,"mtime":1694551053405,"results":"166","hashOfConfig":"145"},{"size":4125,"mtime":1694052194485,"results":"167","hashOfConfig":"145"},{"size":2133,"mtime":1693917853928,"results":"168","hashOfConfig":"145"},{"size":2367,"mtime":1615647342495,"results":"169","hashOfConfig":"145"},{"size":3100,"mtime":1694542456209,"results":"170","hashOfConfig":"145"},{"size":2224,"mtime":1694021438913,"results":"171","hashOfConfig":"145"},{"size":6476,"mtime":1694463614514,"results":"172","hashOfConfig":"145"},{"size":2193,"mtime":1694251875448,"results":"173","hashOfConfig":"145"},{"size":6081,"mtime":1697626039854,"results":"174","hashOfConfig":"145"},{"size":3615,"mtime":1697254243260,"results":"175","hashOfConfig":"145"},{"size":5428,"mtime":1697366690733,"results":"176","hashOfConfig":"145"},{"size":5362,"mtime":1697366766455,"results":"177","hashOfConfig":"145"},{"size":2365,"mtime":1694546594638,"results":"178","hashOfConfig":"145"},{"size":808,"mtime":1696936889274,"results":"179","hashOfConfig":"145"},{"size":1801,"mtime":1694561933514,"results":"180","hashOfConfig":"145"},{"size":1731,"mtime":1694561692051,"results":"181","hashOfConfig":"145"},{"size":2061,"mtime":1695235256578,"results":"182","hashOfConfig":"145"},{"size":2287,"mtime":1695295337019,"results":"183","hashOfConfig":"145"},{"size":1279,"mtime":1696935133289,"results":"184","hashOfConfig":"145"},{"size":4932,"mtime":1697281084289,"results":"185","hashOfConfig":"145"},{"size":2682,"mtime":1694039273437,"results":"186","hashOfConfig":"145"},{"size":2670,"mtime":1696592511937,"results":"187","hashOfConfig":"145"},{"size":6152,"mtime":1698482945794,"results":"188","hashOfConfig":"145"},{"size":8713,"mtime":1698483267143,"results":"189","hashOfConfig":"145"},{"size":32266,"mtime":1697367405265,"results":"190","hashOfConfig":"145"},{"size":14360,"mtime":1696548514776,"results":"191","hashOfConfig":"145"},{"size":3980,"mtime":1696422511370,"results":"192","hashOfConfig":"145"},{"size":1460,"mtime":1695054641017,"results":"193","hashOfConfig":"145"},{"size":6152,"mtime":1697589003097,"results":"194","hashOfConfig":"145"},{"size":6811,"mtime":1697589024973,"results":"195","hashOfConfig":"145"},{"size":6575,"mtime":1697365876414,"results":"196","hashOfConfig":"145"},{"size":3414,"mtime":1697016330543,"results":"197","hashOfConfig":"145"},{"size":2429,"mtime":1700092987420,"results":"198","hashOfConfig":"145"},{"size":7314,"mtime":1697300013866,"results":"199","hashOfConfig":"145"},{"size":2025,"mtime":1695317146139,"results":"200","hashOfConfig":"145"},{"size":2481,"mtime":1700092524898,"results":"201","hashOfConfig":"145"},{"size":1765,"mtime":1695388439613,"results":"202","hashOfConfig":"145"},{"size":1636,"mtime":1695428636009,"results":"203","hashOfConfig":"145"},{"size":920,"mtime":1695725086270,"results":"204","hashOfConfig":"145"},{"size":704,"mtime":1695983032533,"results":"205","hashOfConfig":"145"},{"size":4184,"mtime":1695730457013,"results":"206","hashOfConfig":"145"},{"size":26421,"mtime":1700092159182,"results":"207","hashOfConfig":"145"},{"size":1264,"mtime":1697221193379,"results":"208","hashOfConfig":"145"},{"size":4255,"mtime":1698483823619,"results":"209","hashOfConfig":"145"},{"size":6254,"mtime":1696173299040,"results":"210","hashOfConfig":"145"},{"size":2141,"mtime":1697019185588,"results":"211","hashOfConfig":"145"},{"size":2294,"mtime":1697394522866,"results":"212","hashOfConfig":"145"},{"size":1769,"mtime":1699966616907,"results":"213","hashOfConfig":"145"},{"size":14930,"mtime":1699192720223,"results":"214","hashOfConfig":"145"},{"size":6204,"mtime":1698482942150,"results":"215","hashOfConfig":"145"},{"size":10043,"mtime":1694602222167,"results":"216","hashOfConfig":"145"},{"size":2033,"mtime":1696962397129,"results":"217","hashOfConfig":"145"},{"size":1812,"mtime":1696962364123,"results":"218","hashOfConfig":"145"},{"size":12671,"mtime":1696964398161,"results":"219","hashOfConfig":"145"},{"size":5115,"mtime":1698133577629,"results":"220","hashOfConfig":"145"},{"size":1838,"mtime":1697286196102,"results":"221","hashOfConfig":"145"},{"size":1793,"mtime":1697286281303,"results":"222","hashOfConfig":"145"},{"size":16707,"mtime":1700071882143,"results":"223","hashOfConfig":"145"},{"size":11511,"mtime":1699191851936,"results":"224","hashOfConfig":"145"},{"size":2855,"mtime":1703618097261,"results":"225","hashOfConfig":"226"},{"size":2062,"mtime":1704814422803,"results":"227","hashOfConfig":"226"},{"size":362,"mtime":1692443025874,"results":"228","hashOfConfig":"226"},{"size":1142,"mtime":1700400354155,"results":"229","hashOfConfig":"226"},{"size":1102,"mtime":1700140725045,"results":"230","hashOfConfig":"226"},{"size":2135,"mtime":1700399916348,"results":"231","hashOfConfig":"226"},{"size":362,"mtime":1692876529624,"results":"232","hashOfConfig":"226"},{"size":984,"mtime":1700745501654,"results":"233","hashOfConfig":"226"},{"size":2193,"mtime":1694251875448,"results":"234","hashOfConfig":"226"},{"size":9209,"mtime":1700580914714,"results":"235","hashOfConfig":"226"},{"size":1561,"mtime":1693397544059,"results":"236","hashOfConfig":"226"},{"size":319,"mtime":1700655887802,"results":"237","hashOfConfig":"226"},{"size":1469,"mtime":1704835901519,"results":"238","hashOfConfig":"226"},{"size":1085,"mtime":1696929817295,"results":"239","hashOfConfig":"226"},{"size":8098,"mtime":1704814678611,"results":"240","hashOfConfig":"226"},{"size":4083,"mtime":1704851917198,"results":"241","hashOfConfig":"226"},{"size":3996,"mtime":1700648197367,"results":"242","hashOfConfig":"226"},{"size":2224,"mtime":1694021438913,"results":"243","hashOfConfig":"226"},{"size":3100,"mtime":1694542456209,"results":"244","hashOfConfig":"226"},{"size":1431,"mtime":1700328093310,"results":"245","hashOfConfig":"226"},{"size":3902,"mtime":1700648182257,"results":"246","hashOfConfig":"226"},{"size":2133,"mtime":1693917853928,"results":"247","hashOfConfig":"226"},{"size":3321,"mtime":1694542389901,"results":"248","hashOfConfig":"226"},{"size":1567,"mtime":1704814529112,"results":"249","hashOfConfig":"226"},{"size":5033,"mtime":1700644349823,"results":"250","hashOfConfig":"226"},{"size":2981,"mtime":1704814576114,"results":"251","hashOfConfig":"226"},{"size":2833,"mtime":1704814551955,"results":"252","hashOfConfig":"226"},{"size":1460,"mtime":1695054641017,"results":"253","hashOfConfig":"226"},{"size":2211,"mtime":1700399944030,"results":"254","hashOfConfig":"226"},{"size":1241,"mtime":1696929671736,"results":"255","hashOfConfig":"226"},{"size":18954,"mtime":1700644846575,"results":"256","hashOfConfig":"226"},{"size":11572,"mtime":1700334077756,"results":"257","hashOfConfig":"258"},{"size":7697,"mtime":1700747416639,"results":"259","hashOfConfig":"226"},{"size":6476,"mtime":1694463614514,"results":"260","hashOfConfig":"226"},{"size":4125,"mtime":1694052194485,"results":"261","hashOfConfig":"226"},{"size":3615,"mtime":1697254243260,"results":"262","hashOfConfig":"226"},{"size":23877,"mtime":1701382528338,"results":"263","hashOfConfig":"226"},{"size":2367,"mtime":1615647342495,"results":"264","hashOfConfig":"226"},{"size":2365,"mtime":1694546594638,"results":"265","hashOfConfig":"226"},{"size":5115,"mtime":1698133577629,"results":"266","hashOfConfig":"258"},{"size":808,"mtime":1696936889274,"results":"267","hashOfConfig":"226"},{"size":1658,"mtime":1701392057072,"results":"268","hashOfConfig":"226"},{"size":343,"mtime":1700655917946,"results":"269","hashOfConfig":"226"},{"size":1686,"mtime":1700733619873,"results":"270","hashOfConfig":"226"},{"size":1744,"mtime":1700733594394,"results":"271","hashOfConfig":"226"},{"size":5078,"mtime":1700743285888,"results":"272","hashOfConfig":"226"},{"size":8518,"mtime":1700746769272,"results":"273","hashOfConfig":"226"},{"size":2414,"mtime":1701432144770,"results":"274","hashOfConfig":"226"},{"size":2561,"mtime":1702900959926,"results":"275","hashOfConfig":"226"},{"size":6316,"mtime":1703505807212,"results":"276","hashOfConfig":"226"},{"size":14847,"mtime":1703157139691,"results":"277","hashOfConfig":"226"},{"size":5658,"mtime":1704850592509,"results":"278","hashOfConfig":"226"},{"size":6562,"mtime":1704832435278,"results":"279","hashOfConfig":"226"},{"size":8364,"mtime":1705350251821,"results":"280","hashOfConfig":"226"},{"size":49627,"mtime":1704908137471,"results":"281","hashOfConfig":"226"},{"size":6557,"mtime":1704839375349,"results":"282","hashOfConfig":"226"},{"size":18284,"mtime":1704906950584,"results":"283","hashOfConfig":"226"},{"size":2684,"mtime":1704817559880,"results":"284","hashOfConfig":"226"},{"size":2943,"mtime":1704817515516,"results":"285","hashOfConfig":"226"},{"size":5477,"mtime":1704836004486,"results":"286","hashOfConfig":"226"},{"size":13270,"mtime":1704906714408,"results":"287","hashOfConfig":"226"},{"size":3305,"mtime":1704905371154,"results":"288","hashOfConfig":"226"},{"size":3681,"mtime":1704906304257,"results":"289","hashOfConfig":"226"},{"filePath":"290","messages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1jwe4vq",{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"336","messages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"352","messages":"353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"358","messages":"359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"370","messages":"371","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"374","messages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"376","messages":"377","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"380","messages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"382","messages":"383","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"386","messages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"388","messages":"389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"394","messages":"395","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"396","messages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"398","messages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"402","messages":"403","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"408","messages":"409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"414","messages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"416","messages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"420","messages":"421","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"426","messages":"427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"428","messages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"430","messages":"431","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"438","messages":"439","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"442","messages":"443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"446","messages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452"},"10ij3lq",{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"468"},{"filePath":"469","messages":"470","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"471"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"474"},{"filePath":"475","messages":"476","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"477"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"506"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"509"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"515"},{"filePath":"516","messages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"525"},{"filePath":"526","messages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1geicsw",{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"533"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"536"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"539"},{"filePath":"540","messages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"551"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556"},{"filePath":"557","messages":"558","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"559","messages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568"},{"filePath":"569","messages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"573","messages":"574","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578"},{"filePath":"579","messages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":1,"source":"590"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600"},{"filePath":"601","messages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\c# Project\\axon-archive\\src\\index.js",["608","609","610","611"],"D:\\c# Project\\axon-archive\\src\\reportWebVitals.js",[],"D:\\c# Project\\axon-archive\\src\\App.js",[],"D:\\c# Project\\axon-archive\\src\\store\\index.js",[],"D:\\c# Project\\axon-archive\\src\\components\\login\\index.js",["612","613","614","615","616","617","618","619"],"D:\\c# Project\\axon-archive\\src\\store\\actions\\LoginActions.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\index.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\LoginReducer.js",[],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ValidationTextField.js",["620","621","622"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\index.js",["623","624","625","626"],"D:\\c# Project\\axon-archive\\src\\components\\404\\index.js",["627","628"],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\AuthUserReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\AuthUserActions.js",[],"D:\\c# Project\\axon-archive\\src\\router\\ProtectedRoute.js",["629","630"],"D:\\c# Project\\axon-archive\\src\\auth\\PanelType.js",[],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\index.js",["631","632"],"D:\\c# Project\\axon-archive\\src\\auth\\LocalStorage.js",["633"],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\OtherReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\OtherActions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\ProfileMenu.js",["634"],"D:\\c# Project\\axon-archive\\src\\store\\actions\\EditProfileModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\profileEditModal\\index.js",["635","636","637","638","639","640"],"D:\\c# Project\\axon-archive\\src\\components\\profileEditModal\\ImageCropper.js",["641","642","643","644","645"],"D:\\c# Project\\axon-archive\\src\\store\\actions\\CropImageModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\profileEditModal\\GetCroppedImage.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\EditProfileModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\CropImageModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ValidationMobileField.js",["646","647","648","649"],"D:\\c# Project\\axon-archive\\src\\components\\context\\DialogContext.js",["650"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\PagesContainer.js",["651","652","653","654","655","656"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\CustomTable.js",["657","658","659","660"],"D:\\c# Project\\axon-archive\\src\\store\\actions\\AddEditUserModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\AddEditUserModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ValidationSelectField.js",["661","662"],"D:\\c# Project\\axon-archive\\src\\components\\resolvesettings.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\AddEditDesignationModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\AddEditDesignationModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\AddEditFoldersPathModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\AddEditFoldersPathModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\PagesContainer.js",["663","664"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\ProfileMenu.js",["665","666"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\NavigationList.js",["667","668","669","670"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\Navigation.js",["671","672"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminFoldersPath\\index.js",["673","674","675","676","677","678","679"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsers\\index.js",["680","681","682","683","684","685","686","687","688","689","690","691","692"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsers\\AddEditUserModal.js",["693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminFoldersPath\\AddEditFoldersPathModal.js",["711","712","713","714","715","716","717","718","719","720","721","722","723","724"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\ResizableDrawer.js",["725","726"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AppBarWithHeight.js",["727","728","729","730"],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\FilesListAndEditorReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\FilesListAndEditorActions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsers\\FoldersList.js",["731","732","733","734","735","736","737","738","739","740"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\floatingMenu\\ResponsiveMenu.js",["741","742","743"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\floatingMenu\\ListMenu.js",["744","745","746","747"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\NavigationDrawer.js",["748","749","750"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\NavigationDrawerList.js",["751","752","753","754","755"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FoldersMenuBottomWithHeight.js",["756","757","758","759"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ScrollToTopButton.js",[],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\AppBarWithHeightAndWindowHeight.js",["760","761","762","763"],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\FolderFilesModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\FolderFilesModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminFoldersPath\\FolderFilesModal.js",["764","765"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FilesList\\FilesList.js",["766","767","768","769","770","771","772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FilesList\\resolveExtensions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\PreviewFile\\PreviewFile.js",["796","797"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\PDFViewer.js",["798","799"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\DownloadButton.js",["800"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\SearchWithDelay.js",["801"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\ConditionalHighlightedTextTypography.js",[],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminUsersHistory\\index.js",["802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminDesignations\\index.js",["825","826","827","828","829","830","831","832"],"D:\\c# Project\\axon-archive\\src\\components\\adminpanel\\AdminDesignations\\AddEditDesignationModal.js",["833","834","835","836","837","838","839","840","841","842"],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\ModDetailsModalReducer.js",[],"D:\\c# Project\\axon-archive\\src\\store\\actions\\ModDetailsModalActions.js",[],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\ModDetailsModal.js",["843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862"],"D:\\c# Project\\axon-archive\\src\\components\\otherComponents\\DateRangeModal\\DateRangeModal.js",["863"],"D:\\c# Project\\axon-archive\\src\\store\\actions\\FileDownloadHistoryActions.js",[],"D:\\c# Project\\axon-archive\\src\\store\\reducers\\FileDownloadHistoryReducer.js",[],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\UserDownloadHistoryModal.js",["864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885"],"D:\\c# Project\\axon-archive\\src\\components\\userpanel\\FileListMenu.js",["886","887","888","889","890","891","892","893","894"],"D:\\halalpizzabackendui\\src\\index.js",["895"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { SnackbarProvider } from 'notistack';\nimport LocalStorage from './auth/LocalStorage';\nimport store from './store';\n\nimport {\n  setAuthUserUsername,\n  setAuthUserId,\n  setAuthUserRole,\n  setAuthUserName,\n  setAuthUserAvatar,\n  setAuthUserSettingsJson,\n  resetAuthUser,\n} from './store/actions/AuthUserActions';\nimport { setConfigData } from './store/actions/OtherActions';\nimport { createRoot } from 'react-dom/client';\n\n// Function to render the React app\nconst render = () => {\n  const root = createRoot(document.getElementById('root'));\n  root.render(\n\n    <SnackbarProvider maxSnack={3}>\n      <App reduxStore={store} />\n    </SnackbarProvider>\n\n  );\n};\n\n\nfetch(process.env.PUBLIC_URL + '/config/config.json')\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return response.json();\n  })\n  .then((configData) => {\n    const env = process.env.NODE_ENV;\n    const config = configData[env];\n\n    store.dispatch(setConfigData(config));\n    // Create a WebSocketLink for subscriptions\n\n    const url = `${config.backend_domain}${config.backend_port !== '' ? ':' + config.backend_port : ''}`;\n\n\n    // Check if a username and password are stored in local storage\n    const username = LocalStorage.getUsername();\n    const password = LocalStorage.getPassword();\n\n    if (username !== null && password !== null) {\n\n      const postData = {\n        username: username,\n        password: password,\n      };\n\n      fetch(url + \"/api/users/login\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(postData),\n      })\n        .then(async (response) => {\n          if (!response.ok) {\n            const errorMessage = await response.json();\n            throw new Error(errorMessage.message || 'Login failed');\n          }\n\n          const user = await response.json();\n\n          // Check user status and handle accordingly\n\n          store.dispatch(setAuthUserUsername(user.name));\n          store.dispatch(setAuthUserId(user.id));\n\n          store.dispatch(setAuthUserRole(user.role));\n          store.dispatch(setAuthUserName(user.username));\n          store.dispatch(setAuthUserAvatar(user.avatar));\n\n          store.dispatch(setAuthUserSettingsJson(user.settingsJSON));\n          \n          render();\n        })\n        .catch((error) => {\n          console.error(error)\n          store.dispatch(resetAuthUser());\n          render(); // Rethrow the error to keep the promise rejected\n        });\n\n    } else {\n      // No stored credentials, render the app\n      render();\n    }\n  });\n\n// Measure performance in your app (optional)\nreportWebVitals();\n","D:\\halalpizzabackendui\\src\\App.js",[],"D:\\halalpizzabackendui\\src\\reportWebVitals.js",[],"D:\\halalpizzabackendui\\src\\auth\\LocalStorage.js",["896"],"export default   {\r\n  setUsername(value) {\r\n\r\n    localStorage.setItem(\"username\", value);\r\n  },\r\n  setPassword(value) {\r\n\r\n    localStorage.setItem(\"password\", value);\r\n  },\r\n  removeUsername() {\r\n   \r\n    return localStorage.removeItem(\"username\");\r\n   \r\n  },\r\n  removePassword() {\r\n   \r\n    return localStorage.removeItem(\"password\") ;\r\n   \r\n  }, \r\n  getUsername() {\r\n   \r\n    return localStorage.getItem(\"username\");\r\n   \r\n  },\r\n  getPassword() {\r\n   \r\n    return localStorage.getItem(\"password\") ;\r\n   \r\n  } ,\r\n\r\n   setRememberMeChecked(isChecked) {\r\n    localStorage.setItem(\"axonarchive\", isChecked ? \"true\" : \"false\");\r\n  },\r\n  setRememberUsername(value) {\r\n\r\n    localStorage.setItem(\"rememberusername\", value);\r\n  },\r\n  setRememberPassword(value) {\r\n\r\n    localStorage.setItem(\"rememberpassword\", value);\r\n  },\r\n  getRememberUsername() {\r\n\r\n    return localStorage.getItem(\"rememberusername\");\r\n  },\r\n getRememberPassword() {\r\n\r\n  return localStorage.getItem(\"rememberpassword\");\r\n  },\r\n   getRememberMeChecked() {\r\n    const rememberMeValue = localStorage.getItem(\"axonarchive\");\r\n    return rememberMeValue === \"true\";\r\n  }\r\n\r\n}\r\n","D:\\halalpizzabackendui\\src\\store\\actions\\OtherActions.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AuthUserActions.js",[],"D:\\halalpizzabackendui\\src\\store\\index.js",[],"D:\\halalpizzabackendui\\src\\router\\ProtectedRoute.js",["897","898"],"import React, { useEffect } from \"react\";\r\nimport { Navigate, Route } from \"react-router-dom\";\r\nimport PanelType from \"../auth/PanelType\";\r\nimport Adminpanel from \"../components/adminpanel\";\r\nimport {\r\n  setAuthUserUsername,\r\n  setAuthUserPassword,\r\n  setAuthUserId,\r\n  setAuthUserRole,\r\n  setAuthUserName,\r\n  setAuthUserAvatar,\r\n  resetAuthUser\r\n} from \"../store/actions/AuthUserActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst ProtectedRoute = (props, { ...rest }) => {\r\n\r\n  if (!props.authUserId) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n\r\n const componentToRender =  props.authUserRole === PanelType.Admin ? <Adminpanel /> : <></>;\r\n\r\n\r\n  return componentToRender;\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.AuthUserReducer };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  setAuthUserUsername,\r\n  setAuthUserPassword,\r\n  setAuthUserId,\r\n  setAuthUserRole,\r\n  setAuthUserName,\r\n  setAuthUserAvatar,\r\n  resetAuthUser\r\n})(ProtectedRoute);\r\n","D:\\halalpizzabackendui\\src\\components\\context\\DialogContext.js",["899"],"import React, { createContext, useContext, useState } from \"react\";\r\nimport { Button, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from \"@mui/material\";\r\n\r\nexport const DialogContext = createContext({ openContextDialog: null });\r\n\r\nexport const DialogProvider = ({ children }) => {\r\n  const [isContextDialogOpen, setContextDialogOpen] = useState(false);\r\n  const [contextDialogAgreeButtonText, setContextDialogAgreeButtonText] = useState(\"Agree\");\r\n  const [contextDialogDisagreeButtonText, setContextDialogDisagreeButtonText] = useState(\"Disagree\");\r\n  const [contextDialogContentText, setContextDialogContentText] = useState(\"\");\r\n  const [contextDialogTitle, setContextDialogTitle] = useState(\"\");\r\n  const handleContextDialogAgree = React.useRef(null); // Initialize as null\r\n  const handleContextDialogDisagree = React.useRef(null);\r\n\r\n  const openContextDialog = (agreeText, disagreeText, contentText, title, handleAgreeFn, handleDisagreeFn) => {\r\n    setContextDialogAgreeButtonText(agreeText);\r\n    setContextDialogDisagreeButtonText(disagreeText);\r\n    setContextDialogContentText(contentText);\r\n    setContextDialogTitle(title);\r\n    handleContextDialogAgree.current =() => {\r\n      handleAgreeFn();\r\n      setContextDialogOpen(false);\r\n    };\r\n    handleContextDialogDisagree.current=() => {\r\n      handleDisagreeFn();\r\n      setContextDialogOpen(false);\r\n    };\r\n    setContextDialogOpen(true);\r\n  };\r\n\r\n  return (\r\n    <DialogContext.Provider\r\n      value={{\r\n\r\n        openContextDialog,\r\n\r\n      }}\r\n    >\r\n      {children}\r\n      <Dialog open={isContextDialogOpen} onClose={() => setContextDialogOpen(false)}>\r\n        <DialogTitle>{contextDialogTitle}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>{contextDialogContentText}</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleContextDialogDisagree.current}>{contextDialogDisagreeButtonText}</Button>\r\n          <Button onClick={handleContextDialogAgree.current} autoFocus>\r\n            {contextDialogAgreeButtonText}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </DialogContext.Provider>\r\n  );\r\n};\r\n","D:\\halalpizzabackendui\\src\\components\\login\\index.js",["900","901","902","903","904"],"import React, { useEffect, useRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport ValidationTextField from \"../otherComponents/ValidationTextField\";\r\nimport {\r\n  setLoginUsernameText,\r\n  setLoginPasswordText,\r\n  setLoginIsLoading,\r\n  setLoginRememberMe,\r\n  resetLogin,\r\n} from \"../../store/actions/LoginActions\";\r\nimport {\r\n  setAuthUserUsername,\r\n  setAuthUserId,\r\n\r\n  setAuthUserRole,\r\n  setAuthUserName,\r\n  setAuthUserAvatar,\r\n  setAuthUserSettingsJson,\r\n  resetAuthUser\r\n\r\n} from \"../../store/actions/AuthUserActions\";\r\nimport clsx from \"clsx\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { motion } from \"framer-motion/dist/framer-motion\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport PanelType from \"../../auth/PanelType\";\r\nimport LocalStorage from \"../../auth/LocalStorage\";\r\nimport useSwaggerRequest from \"../../hooks/useSwaggerHook\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  animatedBackground: {\r\n    // background: `url('${process.env.PUBLIC_URL}/background.gif')`,\r\n\r\n    position: \"absolute\",\r\n    opacity: \"0.2\",\r\n    zIndex: -1,\r\n    width: \"100%\",\r\n  },\r\n  submitButton: {\r\n    fontSize: \"17px!important\",\r\n    width: \"100%\",\r\n    color: \"#FFFFFF!important\",\r\n    marginTop: 3, marginBottom: 2\r\n  },\r\n  container: {\r\n    background: \"#ffffffad\",\r\n    padding: \"0px 10px 0px 10px\",\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgb(175 175 175 / 1%), 0px 4px 5px 0px rgb(195 195 195 / 18%), 0px 1px 10px 0px rgb(48 48 48 / 13%)\",\r\n    marginTop: 30,\r\n    marginBottom: 30,\r\n  },\r\n  logo: {\r\n    marginTop: 34,\r\n    height: 40,\r\n  },\r\n  copyrightText: {\r\n    marginTop: \"40px !important\"\r\n  }\r\n}));\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography\r\n      variant=\"body1\"\r\n      color=\"text.secondary\"\r\n      align=\"center\"\r\n      {...props}\r\n    >\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href={window.location.origin + \"/login\"}>\r\n        Halal Pizza\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n\r\n    const rememberMeFromLocalStorage = LocalStorage.getRememberMeChecked();\r\n\r\n    props.setLoginRememberMe(rememberMeFromLocalStorage);\r\n\r\n    if (rememberMeFromLocalStorage) {\r\n\r\n      props.setLoginUsernameText(LocalStorage.getRememberUsername());\r\n      props.setLoginPasswordText(LocalStorage.getRememberPassword());\r\n\r\n    } else {\r\n\r\n      props.setLoginUsernameText(\"\");\r\n      props.setLoginPasswordText(\"\");\r\n\r\n\r\n    }\r\n  }, []);\r\n\r\n  const usernameValidationFieldRef = useRef(null);\r\n  const passwordValidationFieldRef = useRef(null);\r\n  const submitButtonRef = useRef(null);\r\n\r\n  const { loading: loginLoading, error: loginError, data: loginDataResult, makeRequest: login } = useSwaggerRequest('/api/users/login');\r\n\r\n\r\n  useEffect(() => {\r\n    if (loginError) {\r\n\r\n      enqueueSnackbar(loginError.message, { variant: \"error\" });\r\n\r\n    }\r\n  }, [loginError]);\r\n\r\n  useEffect(() => {\r\n    if (loginDataResult) {\r\n\r\n\r\n      props.setAuthUserUsername(props.loginUsernameText);\r\n      props.setAuthUserId(loginDataResult.id);\r\n      props.setAuthUserRole(loginDataResult.role);\r\n      props.setAuthUserName(loginDataResult.name);\r\n      props.setAuthUserAvatar(loginDataResult.avatar);\r\n\r\n      props.setAuthUserSettingsJson(loginDataResult.settingsJSON);\r\n\r\n      LocalStorage.setUsername(props.loginUsernameText);\r\n      LocalStorage.setPassword(props.loginPasswordText);\r\n\r\n      if (props.loginRememberMe) {\r\n        LocalStorage.setRememberUsername(props.loginUsernameText);\r\n        LocalStorage.setRememberPassword(props.loginPasswordText);\r\n      }\r\n\r\n      // Redirect to appropriate panel\r\n      if (loginDataResult.role === PanelType.Admin) {\r\n        navigate(\"/adminpanel\");\r\n      } else {\r\n        navigate(\"/userpanel\");\r\n      }\r\n\r\n      props.resetLogin();\r\n    }\r\n  }, [loginDataResult]);\r\n\r\n  const handleSubmit = (event) => {\r\n   \r\n    event.preventDefault();\r\n\r\n    let isValid = true;\r\n    if (!usernameValidationFieldRef.current.validateValue()) {\r\n      isValid = false;\r\n    }\r\n    if (!passwordValidationFieldRef.current.validateValue()) {\r\n      isValid = false;\r\n    }\r\n\r\n    if (!isValid) return;\r\n\r\n    login({\r\n      method: 'POST',\r\n      requestData: {\r\n        username: props.loginUsernameText,\r\n        password: props.loginPasswordText,\r\n      },\r\n    })\r\n  };\r\n\r\n  // Handle \"Remember Me\" checkbox change\r\n  const handleRememberMeChange = (event) => {\r\n    const isChecked = event.target.checked;\r\n    props.setLoginRememberMe(isChecked);\r\n\r\n    LocalStorage.setRememberMeChecked(isChecked);\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <Container maxWidth={\"lg\"} disableGutters={true}>\r\n        <div className={classes.animatedBackground}></div>\r\n        <Box display={\"flex\"} minHeight={\"100vh\"} alignItems={\"center\"}>\r\n          <Container component=\"main\" className={classes.container} maxWidth=\"xs\">\r\n            <Box display={\"flex\"} justifyContent={\"center\"}>\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/halalpizzalogolarge.png`}\r\n                alt=\"Logo\"\r\n                className={classes.logo}\r\n              />\r\n            </Box>\r\n\r\n            <CssBaseline />\r\n            <Box mx={4} my={4} display={\"flex\"} flexDirection={\"column\"} alignItems={\"flex-start\"}>\r\n              <Typography\r\n                component=\"h1\"\r\n                fontSize={35}\r\n                fontWeight={\"bold\"}\r\n                textAlign={\"left\"}\r\n                variant=\"h5\"\r\n                color={\"#777777\"}\r\n              >\r\n                Log in\r\n              </Typography>\r\n              <Box component=\"form\" onSubmit={handleSubmit} mt={1}>\r\n                <ValidationTextField\r\n                  onInput={(e) => props.setLoginUsernameText(e.target.value)}\r\n                  value={props.loginUsernameText}\r\n                  ref={usernameValidationFieldRef}\r\n                  disabled={loginLoading}\r\n                  autoFocus={true}\r\n                  tabIndex={0}\r\n                  margin=\"normal\"\r\n                  required\r\n                  InputProps={{\r\n                    classes: {},\r\n                  }}\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name={`username${Math.random()}`}\r\n                  variant=\"outlined\"\r\n                />\r\n                <ValidationTextField\r\n                  onInput={(e) => props.setLoginPasswordText(e.target.value)}\r\n                  value={props.loginPasswordText}\r\n                  disabled={loginLoading}\r\n                  ref={passwordValidationFieldRef}\r\n                  margin=\"normal\"\r\n                  required\r\n                  InputProps={{\r\n                    classes: {},\r\n                  }}\r\n                  tabIndex={1}\r\n                  fullWidth\r\n                  name={`password${Math.random()}`}\r\n                  label=\"Password\"\r\n                  type=\"password\"\r\n                  id=\"password2\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      tabIndex={-1}\r\n                      value=\"remember\"\r\n                      color=\"primary\"\r\n                      checked={props.loginRememberMe}\r\n                      onChange={handleRememberMeChange}\r\n                    />\r\n                  }\r\n                  label=\"Remember me\"\r\n                />\r\n                <Button\r\n                  disabled={loginLoading}\r\n                  ref={submitButtonRef}\r\n                  className={classes.submitButton}\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                >\r\n                  {loginLoading && <CircularProgress size={25} />}\r\n                  {!loginLoading && \"Login\"}\r\n                </Button>\r\n                <Copyright className={classes.copyrightText} />\r\n              </Box>\r\n            </Box>\r\n          </Container>\r\n        </Box>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.LoginReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setLoginUsernameText,\r\n  setLoginPasswordText,\r\n  resetLogin,\r\n  setLoginRememberMe,\r\n  setAuthUserUsername,\r\n  setAuthUserId,\r\n\r\n  setAuthUserRole,\r\n  setAuthUserName,\r\n  setAuthUserAvatar,\r\n  setAuthUserSettingsJson,\r\n  resetAuthUser\r\n})(Login);\r\n","D:\\halalpizzabackendui\\src\\components\\404\\index.js",["905","906"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { motion } from \"framer-motion\";\r\nimport Lottie from \"react-lottie\"; // Import Lottie\r\nimport animationData from \"./404.json\"; // Import your 404.json animation file\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: \"flex!important\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    height: \"100vh\",\r\n    flexDirection: \"column\"\r\n  },\r\n  backButton: {\r\n    fontSize: \"17px!important\",\r\n\r\n    \r\n  },\r\n}));\r\n\r\nconst NotFound = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Lottie options\r\n  const lottieOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: animationData,\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n    >\r\n      <Container\r\n        maxWidth=\"md\"\r\n        disableGutters={true}\r\n        className={classes.container}\r\n      >\r\n\r\n        <Lottie options={lottieOptions} height={300} width={300} />\r\n        <Button className={classes.backButton} variant=\"text\" onClick={() => {\r\n          navigate(\"/\");\r\n        }}>Back to home</Button>\r\n      </Container>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\n\r\nexport default NotFound;\r\n","D:\\halalpizzabackendui\\src\\auth\\PanelType.js",[],"D:\\halalpizzabackendui\\src\\store\\reducers\\index.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\LoginActions.js",[],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\index.js",["907","908"],"import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Container from \"@mui/material/Container\";\r\nimport AppBarWithHeight from \"./AppBarWithHeight\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Drawer from \"@mui/material/Drawer\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport CloseIcon from \"@mui/icons-material/Close\"; // Added CloseIcon\r\nimport Box from \"@mui/material/Box\";\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@mui/styles\";\r\nimport clsx from \"clsx\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport { motion } from \"framer-motion/dist/framer-motion\";\r\nimport Navigation from \"./Navigation\";\r\nimport NavigationList from \"./NavigationList\";\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport {\r\n  setDrawerToggle,\r\n  setProfilePictureMenuAnchorEl\r\n} from \"../../store/actions/OtherActions\";\r\nimport {\r\n  resetAuthUser\r\n} from \"../../store/actions/AuthUserActions\";\r\nimport {\r\n  setEditProfileModalToggle\r\n} from \"../../store/actions/EditProfileModalActions\";\r\nimport ProfileMenu from \"./ProfileMenu\";\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport ProfileEditModal from \"../profileEditModal\";\r\nimport { DialogContext } from \"../context/DialogContext\";\r\nimport PagesContainer from \"./PagesContainer\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {},\r\n  drawerContainer: {\r\n    display: \"flex!important\",\r\n    flex: 1,\r\n    flexDirection: \"column\"\r\n  },\r\n  appBar: {\r\n    background: \"white!important\",\r\n    boxShadow:\r\n      \"0px 2px 4px -1px rgb(135 132 132 / 20%), 0px 4px 5px 0px rgb(173 169 169 / 14%), 0px 1px 10px 0px rgb(143 135 135 / 12%)!important\",\r\n  },\r\n  logo: {\r\n    height: 24,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n  },\r\n  logoContainer: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      flex: 1\r\n    },\r\n  },\r\n  toolbar: {\r\n    minHeight: \"50px!important\",\r\n    height: \"61px !important\",\r\n  },\r\n  menuButtonContainer: {\r\n\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 66,\r\n    },\r\n  },\r\n  drawerAvatar: {\r\n    width: \"55px!important\",\r\n    height: \"55px!important\"\r\n  },\r\n  avatarContainer: {\r\n\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      width: 66,\r\n      flex: \"0!important\"\r\n    },\r\n  },\r\n\r\n  drawerNavigationList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flex: 1\r\n  },\r\n  drawerCloseButtonContainer: {\r\n    position: \"absolute\",\r\n    right: 0,\r\n  },\r\n  drawerCloseButtonIcon: {\r\n    width: \"20px!important\",\r\n    height: \"20px!important\"\r\n  },\r\n  drawerCloseButton: {\r\n    paddingTop: \"10px!important\",\r\n    paddingBottom: \"10px!important\",\r\n    paddingRight: \"10px!important\",\r\n    paddingLeft: \"10px!important\",\r\n  },\r\n  logoutButton: {\r\n    width: \"100%\",\r\n    backgroundColor: \"#E14425!important\",\r\n    borderRadius: \"0!important\",\r\n    color: \"white!important\",\r\n    display: \"flex!important\",\r\n    justifyContent: \"space-between!important\",\r\n    paddingTop: \"6px!important\",\r\n    paddingBottom: \"6px!important\"\r\n  },\r\n  editProfileDrawerButton: {\r\n    textTransform: \"capitalize\"\r\n  },\r\n  editProfileDrawerIcon: {\r\n    width: \"15px!important\",\r\n    height: \"15px!important\",\r\n    marginRight: \"5px\"\r\n  },\r\n  menuButtonIcon:{\r\n    color:\"black\"\r\n  }\r\n}));\r\n\r\nconst Adminpanel = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    openContextDialog\r\n  } = React.useContext(DialogContext)\r\n\r\n\r\n\r\n  const isSmall = useMediaQuery(theme.breakpoints.down('md'));\r\n  return (\r\n    <>\r\n      {isSmall &&\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          style={{ width: 260 }}\r\n          anchor={\"left\"}\r\n          open={props.drawerToggle}\r\n          onClose={() => {\r\n            props.setDrawerToggle(false); // Close the drawer when clicking backdrop\r\n          }}\r\n        >\r\n          <Container disableGutters={true} className={classes.drawerContainer}>\r\n            <Box className={classes.drawerCloseButtonContainer}>\r\n              <IconButton\r\n                className={classes.drawerCloseButton}\r\n                size=\"large\"\r\n                color=\"inherit\"\r\n                onClick={() => {\r\n                  props.setDrawerToggle(false); // Close the drawer when clicking close button\r\n                }}\r\n              >\r\n                <CloseIcon className={classes.drawerCloseButtonIcon} />\r\n              </IconButton>\r\n            </Box>\r\n            <Box p={2} display={\"flex\"} alignItems={\"center\"} flexDirection={\"column\"}>\r\n              <Avatar\r\n                className={classes.drawerAvatar}\r\n                alt=\"User Avatar\"\r\n                src={props.authUserAvatar}\r\n              />\r\n              <IconButton className={classes.editProfileDrawerButton} onClick={() => {\r\n                props.setEditProfileModalToggle(true);\r\n              }}>\r\n                <DriveFileRenameOutlineIcon className={classes.editProfileDrawerIcon} />\r\n                {props.authUserUsername}\r\n              </IconButton>\r\n            </Box>\r\n            <NavigationList />\r\n            <Box mt=\"auto\" textAlign=\"center\">\r\n              <Tooltip title=\"Logout\">\r\n                <IconButton className={classes.logoutButton} onClick={() => {\r\n                  openContextDialog(\"Yes\", \"No\", \"Are you sure you want to logout?\", \"Confirm\", () => {\r\n                    props.resetAuthUser();\r\n                    navigate(\"/login\");\r\n                  }, () => {\r\n\r\n                  });\r\n\r\n\r\n                }}>\r\n                  <Typography variant=\"h6\">Logout</Typography>\r\n                  <ExitToAppIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n          </Container>\r\n        </Drawer>\r\n      }\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        transition={{ duration: 0.5 }}\r\n      >\r\n        <Container maxWidth={\"lg\"} disableGutters={true}>\r\n          <AppBarWithHeight\r\n         \r\n          >\r\n            <Toolbar className={clsx(classes.toolbar)} disableGutters={true}>\r\n              <Box className={classes.menuButtonContainer}>\r\n                <IconButton\r\n                \r\n                  size=\"large\"\r\n                  color=\"inherit\"\r\n                  onClick={() => {\r\n                    props.setDrawerToggle(!props.drawerToggle)\r\n                  }}\r\n                >\r\n                  <MenuIcon className={classes.menuButtonIcon}/>\r\n                </IconButton>\r\n              </Box>\r\n              <Box className={classes.logoContainer}>\r\n                <img\r\n                  src={`${process.env.PUBLIC_URL}/halalpizzalogolarge.png`}\r\n                  alt=\"Logo\"\r\n                  className={classes.logo}\r\n                />\r\n              </Box>\r\n              <Box className={classes.avatarContainer}\r\n                flex={1}\r\n                display={\"flex\"}\r\n                justifyContent={\"flex-end\"}\r\n                alignItems={\"center\"}\r\n              >\r\n                <Navigation />\r\n                <ProfileMenu />\r\n                {props.editProfileModalToggle && <ProfileEditModal />}\r\n              </Box>\r\n            </Toolbar>\r\n          </AppBarWithHeight>\r\n        </Container>\r\n        <PagesContainer />\r\n      </motion.div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.AuthUserReducer, ...state.OtherReducer, ...state.EditProfileModalReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setDrawerToggle,\r\n  setProfilePictureMenuAnchorEl,\r\n  setEditProfileModalToggle,\r\n  resetAuthUser\r\n})(Adminpanel);\r\n","D:\\halalpizzabackendui\\src\\components\\otherComponents\\ValidationTextField.js",["909","910","911"],"import React, { useState, useEffect, forwardRef, useRef } from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport validator from \"validator\";\r\nimport MaskedInput from \"react-text-mask\";\r\nimport clsx from \"clsx\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport RuleFolderIcon from '@mui/icons-material/RuleFolder';\r\nimport Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\n\r\nconst ValidationTextField = forwardRef((props, refProp) => {\r\n  const valueDefault = props.value ? props.value : \"\";\r\n  \r\n  const [value, setValue] = useState(valueDefault);\r\n  const [error, setError] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const inputRef = useRef();\r\n\r\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (refProp) {\r\n      refProp.current = {\r\n        validateValue: () => validate_(value),\r\n        setEmpty: () => setValue(\"\"),\r\n        inputRef: inputRef,\r\n      };\r\n    }\r\n  }, [refProp, value]);\r\n\r\n  useEffect(() => {\r\n \r\n    setValue(props.value || \"\"); // Reset to an empty string if props.value is falsy\r\n  }, [props.value]);\r\n\r\n  useEffect(() => {\r\n    var timeout = null;\r\n    props.focus &&\r\n      props.focus(() => {\r\n        timeout = setTimeout(() => {\r\n          inputRef.current.focus();\r\n        }, 1000);\r\n      });\r\n    return () => {\r\n      props.focus && clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  function validate_(value) {\r\n    let valid = true;\r\n    if (props.required) {\r\n   \r\n      if (value.length < props.minValue) {\r\n        setError(props.minValueErrorText);\r\n        valid = false;\r\n      }\r\n      if (value === \"\") {\r\n        setError(\"This field is required.\");\r\n        valid = false;\r\n      }\r\n      if (valid) {\r\n        setError(\"\");\r\n      }\r\n    }\r\n    if(valid && props.emailtext){\r\n    if (value.length > 0) {\r\n      if (!validator.isEmail(value)) {\r\n        setError(\"Invalid email address.\");\r\n      } else {\r\n        setError(\"\");\r\n\r\n      }\r\n    }else\r\n      setError(\"\");\r\n      \r\n    }\r\n    return valid;\r\n  }\r\n\r\n  function onInput(e) {\r\n   \r\n    setValue(e.target.value);\r\n    validate_(e.target.value);\r\n    props.onInput && props.onInput(e);\r\n  }\r\n\r\n  return (\r\n    <TextField\r\n     \r\n      ref={inputRef}\r\n      {...props}\r\n      value={value} // Use the local value state here\r\n      onInput={onInput}\r\n      error={error !== \"\"}\r\n      helperText={error}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }}\r\n      type={props.type === \"password\" ? (showPassword ? \"text\" : \"password\") : props.type}\r\n      InputProps={{\r\n        autoComplete: \"new-password\",\r\n       \r\n        inputProps: { mask: props.mask, min:0 },\r\n        classes: {\r\n          ...props.InputProps.classes,\r\n       \r\n          root: clsx({\r\n            [props.onErrorInputRootClass]: error,\r\n            [props.InputProps.classes.root]: !error,\r\n          }),\r\n        },\r\n        endAdornment:\r\n          props.type === \"password\" ? (\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                aria-label=\"toggle password visibility\"\r\n                onClick={handleClickShowPassword}\r\n                onMouseDown={handleMouseDownPassword}\r\n                edge=\"end\"\r\n              >\r\n                {showPassword ? <Visibility /> : <VisibilityOff /> }\r\n              </IconButton>\r\n            </InputAdornment>\r\n          ) :  props.dirInput ? <InputAdornment position=\"end\">\r\n          <IconButton\r\n            disabled={props.dirInputDisabled}\r\n            aria-label=\"toggle password visibility\"\r\n            onClick={props.handleDirInput}\r\n            onMouseDown={props.handleDirInput}\r\n            edge=\"end\"\r\n          >\r\n            <RuleFolderIcon/>\r\n          </IconButton>\r\n        </InputAdornment> : null,\r\n      }}\r\n    />\r\n  );\r\n});\r\n\r\nexport default ValidationTextField;\r\n","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditUserModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\reducers\\CropImageModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\reducers\\EditProfileModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\reducers\\OtherReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AddEditUserModalActions.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\CropImageModalActions.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\EditProfileModalActions.js",[],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\PagesContainer.js",["912","913"],"import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container } from \"@mui/material\"; // Change import\r\nimport { makeStyles } from \"@mui/styles\"; // Change import\r\nimport clsx from \"clsx\";\r\nimport AdminUsers from \"./AdminUsers\";\r\nimport AdminCategories from \"./AdminCategories\";\r\nimport AdminSliders from \"./AdminSliders\";\r\nimport AdminAddons from \"./AdminAddons\";\r\nimport AdminProducts from \"./AdminProducts\";\r\n//import AdminUsersHistory from \"./AdminUsersHistory\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    mainContainer: {\r\n\r\n    },\r\n}));\r\n\r\nconst PagesContainer = (props) => {\r\n    const classes = useStyles();\r\n    const location = useLocation();\r\n    return (\r\n        <Container maxWidth={false}>\r\n            {(location.pathname === \"/admin\"  ||  \r\n            location.pathname === \"/\" || \r\n            location.pathname === \"/adminpanel\" || \r\n            location.pathname === \"/adminusers\") && <AdminUsers />}\r\n            {\r\n            location.pathname === \"/admincategories\" && <AdminCategories/>\r\n            }\r\n            {\r\n            location.pathname === \"/adminsliders\" && <AdminSliders/>\r\n            }\r\n            {\r\n            location.pathname === \"/adminaddons\" && <AdminAddons/>\r\n            }\r\n            {\r\n            location.pathname === \"/adminproducts\" && <AdminProducts/>\r\n            }\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {};\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PagesContainer);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\ProfileMenu.js",["914"],"import React from \"react\";\r\n\r\nimport {\r\n  IconButton,\r\n  MenuList,\r\n  MenuItem,\r\n  ClickAwayListener,\r\n  Paper,\r\n  Popover,\r\n  Avatar,\r\n  Tooltip,\r\n  Typography\r\n} from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles, useTheme } from \"@mui/styles\";\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport ExitToAppIcon from \"@mui/icons-material/ExitToApp\";\r\nimport {\r\n  setProfilePictureMenuAnchorEl\r\n} from \"../../store/actions/OtherActions\";\r\nimport {\r\n  setEditProfileModalToggle\r\n} from \"../../store/actions/EditProfileModalActions\";\r\nimport {\r\n  resetAuthUser\r\n} from \"../../store/actions/AuthUserActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport clsx from \"clsx\";\r\nimport { DialogContext } from \"../context/DialogContext\";\r\nimport LocalStorage from \"../../auth/LocalStorage\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  settingsIcon: {\r\n    fontSize: 30,\r\n    color: \"gray\",\r\n  },\r\n  menuPaper: {\r\n    background: \"rgb(26 39 51 / 73%)\",\r\n    borderRadius: 0,\r\n  },\r\n  editProfileMenuItem: {\r\n    color: \"white\",\r\n    cursor: \"pointer\",\r\n    pointerEvents: \"auto\",\r\n  },\r\n  editProfileMenu: {\r\n    padding: \"0px!important\"\r\n  },\r\n  popover: {\r\n    pointerEvents: \"none\",\r\n  },\r\n  avatarTooltip: {\r\n\r\n  },\r\n  avatarButton: {\r\n    padding: 0,\r\n    marginRight: 10,\r\n  },\r\n  avatar: {\r\n    width: \"45px!important\",\r\n    height: \"45px!important\",\r\n  },\r\n  editProfileIcon: {\r\n    width: \"20px!important\",\r\n    height: \"20px!important\",\r\n    marginRight: \"10px\",\r\n    color: \"gray\",\r\n  },\r\n  logoutIcon: {\r\n    width: \"20px!important\",\r\n    height: \"20px!important\",\r\n    color: \"white!important\",\r\n  },\r\n  logouteMenuItem: {\r\n    backgroundColor: \"#E14425!important\",\r\n    color: \"white!important\",\r\n    display: \"flex!important\",\r\n    justifyContent: \"space-between!important\"\r\n  }\r\n}));\r\n\r\nconst ProfileMenu = (props) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    openContextDialog\r\n  } = React.useContext(DialogContext)\r\n\r\n  const handleMenuClick = (event) => {\r\n    props.setProfilePictureMenuAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    props.setProfilePictureMenuAnchorEl(null);\r\n  };\r\n  const isMedium = useMediaQuery(theme.breakpoints.down('md'));\r\n  return (\r\n    <div >\r\n\r\n      <IconButton onClick={handleMenuClick} disabled={isMedium} className={classes.avatarButton}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          alt=\"User Avatar\"\r\n          src={props.authUserAvatar}\r\n        />\r\n      </IconButton>\r\n\r\n\r\n      {!isMedium && <Popover\r\n\r\n        classes={{ root: classes.popover }}\r\n        disableEnforceFocus={true}\r\n        open={Boolean(props.profilePictureMenuAnchorEl)}\r\n        anchorEl={\r\n          props.profilePictureMenuAnchorEl\r\n        }\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n\r\n        <Paper className={classes.menuPaper}>\r\n          <ClickAwayListener onClickAway={handleMenuClose}>\r\n            <MenuList\r\n              autoFocusItem={Boolean(props.profilePictureMenuAnchorEl)}\r\n              id=\"menu-list-grow\"\r\n              keepMounted\r\n              className={classes.editProfileMenu}\r\n            >\r\n              <MenuItem\r\n                className={classes.editProfileMenuItem}\r\n                onClick={async () => {\r\n                  handleMenuClose();\r\n                  props.setEditProfileModalToggle(true);\r\n\r\n                }}\r\n              >\r\n                <DriveFileRenameOutlineIcon className={classes.editProfileIcon} />\r\n                Edit Profile\r\n              </MenuItem>\r\n           \r\n              <MenuItem\r\n                className={clsx(classes.editProfileMenuItem, classes.logouteMenuItem)}\r\n                onClick={async () => {\r\n\r\n                  openContextDialog(\"Yes\", \"No\", \"Are you sure you want to logout?\", \"Confirm\", () => {\r\n                    handleMenuClose();\r\n                    props.resetAuthUser();\r\n                    LocalStorage.removeUsername();\r\n                    LocalStorage.removePassword();\r\n                    navigate(\"/login\");\r\n\r\n                  }, () => {\r\n\r\n                  });\r\n                }}\r\n              >\r\n\r\n                <Typography>Logout</Typography>\r\n                <ExitToAppIcon className={classes.logoutIcon} />\r\n              </MenuItem>\r\n            </MenuList>\r\n          </ClickAwayListener>\r\n        </Paper>\r\n\r\n      </Popover>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.OtherReducer, ...state.EditProfileModalReducer,...state.AuthUserReducer };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  setProfilePictureMenuAnchorEl,\r\n  setEditProfileModalToggle,\r\n  resetAuthUser\r\n})(ProfileMenu);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\NavigationList.js",["915","916","917","918"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { List, ListItem, ListItemIcon, ListItemText, SvgIcon } from \"@mui/material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport GroupAdd from \"@mui/icons-material/GroupAdd\";\r\nimport InventoryIcon from '@mui/icons-material/Inventory';\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DiscountIcon from '@mui/icons-material/Discount';\r\nimport ViewCarouselIcon from '@mui/icons-material/ViewCarousel';\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerNavigationList: {\r\n    flex: 1\r\n  },\r\n  linksButton: {\r\n\r\n    cursor: \"pointer\",\r\n    borderBottom: \"1px solid #d5cfcf!important\",\r\n\r\n    backgroundColor: \"#ebebeb!important\",\r\n    fontWeight: \"bold!important\",\r\n    textTransform: \"capitalize!important\",\r\n\r\n  },\r\n  linksButtonSelected: {\r\n    background: \"white!important\",\r\n    color: \"#505050!important\",\r\n    //border: \"1px solid #505050!important\",\r\n  },\r\n  linkBorderTop:{\r\n    borderTop: \"1px solid #d5cfcf!important\"\r\n  }\r\n}));\r\n\r\nconst pages = [\r\n  { text: \"Users\", link: \"adminusers\", icon: <GroupAdd /> },\r\n  { text: \"Categories\", link: \"admincategories\", icon: <CategoryIcon /> },\r\n  { text: \"Addons\", link: \"adminaddons\", icon: <DiscountIcon /> },\r\n  { text: \"Products\", link: \"adminproducts\", icon: <InventoryIcon /> },\r\n  { text: \"Sliders\", link: \"adminsliders\", icon: <ViewCarouselIcon /> },\r\n];\r\n\r\nconst NavigationList = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  return (\r\n    <List className={classes.drawerNavigationList}>\r\n      {pages.map((page, index) => {\r\n     \r\n        return <ListItem key={page.link} \r\n          className={clsx(classes.linksButton, {\r\n            [classes.linksButtonSelected]:\r\n              ((location.pathname === \"/admin\" ||\r\n              location.pathname === \"/\" ||\r\n                location.pathname === \"/userpanel\" ||\r\n                location.pathname === \"/adminusers\") &&\r\n                page.link === \"adminusers\" ||\r\n                (location.pathname === \"/admincategories\" &&\r\n                    page.link === \"admincategories\") ||\r\n                  (location.pathname === \"/adminaddons\" &&\r\n                    page.link === \"adminaddons\") ||\r\n                  (location.pathname === \"/adminproducts\" &&\r\n                    page.link === \"adminproducts\") ||\r\n                  (location.pathname === \"/adminsliders\" &&\r\n                    page.link === \"adminsliders\")),\r\n                  [classes.linkBorderTop]:index == 0\r\n          })}\r\n          onClick={() => {\r\n            navigate(\"/\" + page.link);\r\n          }}>\r\n          <ListItemIcon>\r\n            {page.icon}\r\n          </ListItemIcon>\r\n          <ListItemText primary={page.text} />\r\n        </ListItem>\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default connect(null)(NavigationList);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\Navigation.js",["919","920"],"import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container, Box, Button } from \"@mui/material\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  linksContainer: {\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      display: \"none!important\",\r\n    },\r\n    marginRight: 20,\r\n  },\r\n  linksButton: {\r\n    background: \"#505050!important\",\r\n    border: \"0px!important\",\r\n    marginRight: \"5px!important\",\r\n    width: \"130px!important\",\r\n    color: \"white!important\",\r\n    fontWeight: \"bold!important\",\r\n    textTransform: \"capitalize!important\",\r\n    \"&:hover\": {\r\n      background: \"white!important\",\r\n      color: \"#505050!important\",\r\n      border: \"1px solid #505050!important\",\r\n    },\r\n  },\r\n  linksButtonSelected: {\r\n    background: \"white!important\",\r\n    color: \"#505050!important\",\r\n    border: \"1px solid #505050!important\",\r\n  },\r\n}));\r\n\r\nconst pages = [\r\n  { text: \"Users\", link: \"adminusers\" },\r\n  { text: \"Categories\", link: \"admincategories\" },\r\n  { text: \"Addons\", link: \"adminaddons\" },\r\n  { text: \"Products\", link: \"adminproducts\" },\r\n  { text: \"Sliders\", link: \"adminsliders\" },\r\n];\r\n\r\nconst NavigationList = () => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Container disableGutters={true} maxWidth=\"lg\">\r\n      <Box\r\n        className={classes.linksContainer}\r\n        display=\"flex\"\r\n        flex={1}\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        {pages.map((page) => (\r\n          <Button\r\n            variant=\"outlined\"\r\n            key={page.text}\r\n            onClick={() => {\r\n              navigate(\"/\" + page.link);\r\n            }}\r\n            className={clsx(classes.linksButton, {\r\n              [classes.linksButtonSelected]:\r\n                ((location.pathname === \"/admin\" || \r\n                location.pathname === \"/\" || \r\n                location.pathname === \"/adminpanel\" ||\r\n                  location.pathname === \"/adminusers\") &&\r\n                    page.link === \"adminusers\" ||\r\n                  (location.pathname === \"/admincategories\" &&\r\n                    page.link === \"admincategories\") ||\r\n                  (location.pathname === \"/adminaddons\" &&\r\n                    page.link === \"adminaddons\") ||\r\n                  (location.pathname === \"/adminproducts\" &&\r\n                    page.link === \"adminproducts\") ||\r\n                  (location.pathname === \"/adminsliders\" &&\r\n                    page.link === \"adminsliders\")),\r\n            })}\r\n          >\r\n            {page.text}\r\n          </Button>\r\n        ))}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(null)(NavigationList);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AppBarWithHeight.js",["921","922","923","924"],"import React, { createContext, useContext, useState, useEffect, useRef } from 'react';\r\nimport { makeStyles } from '@mui/styles';\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n setAppBarHeight\r\n} from \"../../store/actions/OtherActions\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    appBar: {\r\n        background: \"white!important\",\r\n        boxShadow:\r\n          \"0px 2px 4px -1px rgb(135 132 132 / 20%), 0px 4px 5px 0px rgb(173 169 169 / 14%), 0px 1px 10px 0px rgb(143 135 135 / 12%)!important\",\r\n      },\r\n}));\r\n\r\n\r\n const AppBarWithHeight = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const appBarRef = useRef(null);\r\n\r\n  const updateAppBarHeight = () => {\r\n    if (appBarRef.current) {\r\n      props.setAppBarHeight(appBarRef.current.offsetHeight);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    updateAppBarHeight(); // Initial height on mount\r\n\r\n    // Update height on resize\r\n    window.addEventListener('resize', updateAppBarHeight);\r\n\r\n    // Cleanup on component unmount\r\n    return () => {\r\n      window.removeEventListener('resize', updateAppBarHeight);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n      <AppBar\r\n        position=\"fixed\"\r\n        ref={appBarRef}\r\n        className={classes.appBar}\r\n      >\r\n        {props.children}\r\n      </AppBar>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n setAppBarHeight\r\n})(AppBarWithHeight);\r\n","D:\\halalpizzabackendui\\src\\store\\reducers\\AuthUserReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\reducers\\LoginReducer.js",[],"D:\\halalpizzabackendui\\src\\components\\profileEditModal\\index.js",["925","926","927","928","929"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n    CircularProgress,\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../otherComponents/ValidationTextField\";\r\n\r\nimport {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n} from \"../../store/actions/CropImageModalActions\";\r\nimport {\r\n    setAuthUserUsername,\r\n    setAuthUserPassword,\r\n    setAuthUserName,\r\n    setAuthUserAvatar,\r\n    resetAuthUser\r\n} from \"../../store/actions/AuthUserActions\";\r\nimport {\r\n    setEditProfileModalToggle,\r\n    setEditProfileModalAvatar,\r\n    setEditProfileModalName,\r\n    setEditProfileModalEmail,\r\n    setEditProfileModalUsername,\r\n    setEditProfileModalCountryRegion,\r\n    setEditProfileModalContactNumber,\r\n    setEditProfileModalCurrentPassword,\r\n    setEditProfileModalNewPassword,\r\n    setEditProfileModalReset\r\n} from \"../../store/actions/EditProfileModalActions\";\r\nimport ImageCropper from \"./ImageCropper\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ValidationMobileField from \"../otherComponents/ValidationMobileField\";\r\nimport clsx from \"clsx\";\r\nimport { PhoneNumberUtil } from 'google-libphonenumber';\r\nimport useSwaggerRequest from \"../../hooks/useSwaggerHook\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButtonContainer:{\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n   \r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\"\r\n    },\r\n    profilePicAddButton: {\r\n        border: \"1px dashed gray\",\r\n        borderRadius: \"50%\",\r\n        padding: \"0px!important\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n    },\r\n    profilePicAddButtonContainer: {\r\n        display: \"flex!important\"\r\n    },\r\n    profilePictureAddImage: {\r\n        width: \"100px\",\r\n        borderRadius: \"50%\",\r\n        height: \"100px\",\r\n        marginRight: 5,\r\n    },\r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n    newPasswordTextField: {\r\n        background: \"#e3ffe5\",\r\n    },\r\n    avatar: {\r\n        width: \"55px!important\",\r\n        height: \"55px!important\",\r\n        marginRight: \"7px\"\r\n    }\r\n}));\r\n\r\nconst ProfileEditModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const nameValidationFieldRef = useRef(null);\r\n    const emailValidationFieldRef = useRef(null);\r\n    const mobileValidationFieldRef = useRef(null);\r\n    const usernameValidationFieldRef = useRef(null);\r\n    const currentPasswordValidationFieldRef = useRef(null);\r\n    const newPasswordValidationFieldRef = useRef(null);\r\n\r\n    const profilePicAddButtonRef = useRef(null);\r\n    const handleClose = () => {\r\n        props.setEditProfileModalToggle();\r\n        props.setEditProfileModalReset();\r\n    };\r\n\r\n    const { loading: getUserLoading, error: getUserError, data: getUserResult, makeRequest: getUser } = useSwaggerRequest(`/api/users/${props.authUserId}`);\r\n\r\n    useEffect(() => {\r\n        if (props.editProfileModalToggle) {\r\n\r\n            getUser({\r\n                method: 'GET',\r\n                \r\n            }      \r\n            );\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (getUserResult) {\r\n\r\n            props.setEditProfileModalName(getUserResult.name);\r\n            props.setEditProfileModalAvatar(getUserResult.avatar);\r\n            props.setEditProfileModalEmail(getUserResult.email);\r\n\r\n            const countryCode = getUserResult.countryCode || \"\";\r\n            const contactNumber = getUserResult.mobileNumber || \"\";\r\n            const defaultCountryCode = \"+92\";\r\n\r\n            const formattedContactNumber = (countryCode.toString() + contactNumber) || defaultCountryCode;\r\n\r\n            props.setEditProfileModalContactNumber(formattedContactNumber)\r\n            props.setEditProfileModalUsername(getUserResult.username);\r\n        }\r\n    }, [getUserResult]);\r\n\r\n    const { loading: editUserLoading, error: editUserError,data: editUserResult, makeRequest: editUser } = useSwaggerRequest(`/api/users/editme/${props.authUserId}`);\r\n\r\n    useEffect(() => {\r\n        if (editUserError) {\r\n           \r\n                enqueueSnackbar(editUserError.message, { variant: \"error\" });\r\n        \r\n        }\r\n    }, [editUserError]);\r\n\r\n    useEffect(() => {\r\n        if (editUserResult) {\r\n           \r\n                enqueueSnackbar(\"User updated successfully.\", { variant: \"success\" });\r\n\r\n                handleClose();\r\n\r\n                props.setAuthUserName(props.editProfileModalUsername);\r\n                props.setAuthUserAvatar(props.editProfileModalAvatar);\r\n                props.setAuthUserUsername(props.editProfileModalUsername);\r\n\r\n                if(props.editProfileModalNewPassword.length > 0)\r\n                props.setAuthUserPassword(props.editProfileModalNewPassword);\r\n           \r\n        }\r\n    }, [editUserResult]);\r\n\r\n    let isLoading = editUserLoading || getUserLoading;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoading) return;\r\n\r\n        let isValid = true;\r\n\r\n        if (!nameValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!emailValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!mobileValidationFieldRef.current.validatePhoneNumber()) {\r\n            isValid = false;\r\n        }\r\n        if (!usernameValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!currentPasswordValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!newPasswordValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        const phoneUtil = PhoneNumberUtil.getInstance();\r\n\r\n        // Replace 'pk' with the ISO 3166-1 alpha-2 country code of your choice\r\n        const country = props.editProfileModalCountryRegion;\r\n\r\n\r\n        const countryCode = phoneUtil.getCountryCodeForRegion(country);\r\n\r\n        // Prepend '+' to the dial code\r\n        const formattedDialCode = `+${countryCode}`;\r\n\r\n        const phoneWithoutCode = props.editProfileModalContactNumber.replace(/\\s/g, '').replace(formattedDialCode, '');\r\n\r\n        if (isValid) {\r\n            try {\r\n                await editUser({\r\n                    method: 'PUT',\r\n                    requestData: {\r\n                        id: props.authUserId,\r\n                        name: props.editProfileModalName,\r\n                        avatar: props.editProfileModalAvatar,\r\n                        email: props.editProfileModalEmail,\r\n                        username: props.editProfileModalUsername,\r\n                        countryCode: phoneWithoutCode.length > 0 ? formattedDialCode : undefined,\r\n                        mobileNumber: phoneWithoutCode.length > 0 ? phoneWithoutCode : undefined,\r\n                        password: props.editProfileModalCurrentPassword,\r\n                        newPassword: props.editProfileModalNewPassword.length > 0 ? props.editProfileModalNewPassword : undefined,\r\n\r\n                    },\r\n                });\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.editProfileModalToggle}\r\n            onClose={handleClose}\r\n\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    Edit Profile\r\n                </Typography>\r\n\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Container disableGutters={true} className={classes.profilePicAddButtonContainer}>\r\n                                <input\r\n                                    onChange={(event) => {\r\n                                        if (event.target.files.length > 0) {\r\n                                            let reader = new FileReader();\r\n                                            reader.readAsDataURL(event.target.files[0]);\r\n                                            reader.onload = function () {\r\n                                                props.setCropImageModalImage(reader.result);\r\n                                                props.setCropImageModalToggle(true);\r\n                                            };\r\n                                            reader.onerror = function (error) {\r\n                                                alert(\"Error: \", error);\r\n                                            };\r\n                                        }\r\n                                    }}\r\n                                    ref={profilePicAddButtonRef}\r\n                                    accept=\"image/*\"\r\n                                    disabled={isLoading}\r\n                                    className={classes.profilePicAddButton}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"raised-button-file\"\r\n                                    name=\"raised-button-file\"\r\n                                    multiple={false}\r\n                                    type=\"file\"\r\n                                />\r\n\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        profilePicAddButtonRef.current.click();\r\n                                    }}\r\n                                    className={classes.profilePicAddButton}\r\n                                >\r\n                                    <Avatar\r\n                                        className={classes.avatar}\r\n                                        alt=\"User Avatar\"\r\n                                        src={props.editProfileModalAvatar ? props.editProfileModalAvatar : null}\r\n                                    />\r\n                                </Button>\r\n                                <ImageCropper\r\n                                    onImageCropCompleted={(croppedImage) => {\r\n\r\n                                        props.setEditProfileModalAvatar(croppedImage);\r\n                                    }}\r\n                                />\r\n\r\n                                <ValidationTextField\r\n                                    type=\"text\"\r\n                                    className={classes.textField}\r\n                                    InputProps={{\r\n                                        classes: {},\r\n                                    }}\r\n                                    ref={nameValidationFieldRef}\r\n                                    value={props.editProfileModalName}\r\n                                    required\r\n                                    disabled={isLoading}\r\n                                    onInput={(e) =>\r\n                                        props.setEditProfileModalName(e.target.value)\r\n                                    }\r\n                                    label=\"Full Name\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                emailtext={true}\r\n                                className={classes.textField}\r\n                                value={props.editProfileModalEmail}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={emailValidationFieldRef}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setEditProfileModalEmail(e.target.value)\r\n                                }\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationMobileField\r\n                                value={props.editProfileModalContactNumber}\r\n                                refProp={mobileValidationFieldRef}\r\n                                disabled={isLoading}\r\n                                onChange={(value) => {\r\n                                    props.setEditProfileModalCountryRegion(value.country);\r\n                                    props.setEditProfileModalContactNumber(value.phone);\r\n                                }\r\n                                }\r\n                                className={classes.textField}\r\n                                id=\"mobileTextField\"\r\n                                label=\"Mobile\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                value={props.editProfileModalUsername}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={usernameValidationFieldRef}\r\n                                required\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setEditProfileModalUsername(e.target.value)\r\n                                }\r\n                                label=\"Username\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"currentpassword\"\r\n                                className={classes.textField}\r\n                                value={props.editProfileModalCurrentPassword}\r\n                                ref={currentPasswordValidationFieldRef}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                required\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setEditProfileModalCurrentPassword(\r\n                                        e.target.value\r\n                                    )\r\n                                }\r\n                                label={\"Current Password\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"newpassword\"\r\n                                className={clsx(classes.textField, classes.newPasswordTextField)}\r\n                                value={props.editProfileModalNewPassword}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={newPasswordValidationFieldRef}\r\n\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setEditProfileModalNewPassword(e.target.value)\r\n                                }\r\n                                label={\"New Password\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        {isLoading && <CircularProgress size={25} />}\r\n                        {!isLoading && \"Save\"}\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.EditProfileModalReducer, ...state.AuthUserReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n    setEditProfileModalToggle,\r\n    setEditProfileModalAvatar,\r\n    setEditProfileModalName,\r\n    setEditProfileModalEmail,\r\n    setEditProfileModalUsername,\r\n    setEditProfileModalCountryRegion,\r\n    setEditProfileModalContactNumber,\r\n    setEditProfileModalCurrentPassword,\r\n    setEditProfileModalNewPassword,\r\n    setEditProfileModalReset,\r\n    setAuthUserUsername,\r\n    setAuthUserPassword,\r\n    setAuthUserName,\r\n    setAuthUserAvatar,\r\n    resetAuthUser\r\n})(ProfileEditModal);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminUsersHistory\\index.js",["930","931","932","933","934","935","936","937","938","939","940","941","942","943","944","945","946","947","948","949","950","951"],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminUsers\\index.js",["952","953","954","955","956","957","958","959","960","961","962","963"],"import React, { Component, useEffect, useRef, useMemo } from \"react\";\r\nimport { IconButton, Tooltip, Container, Box, Avatar } from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomTable from \"../../otherComponents/CustomTable\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport _ from \"lodash\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport { DialogContext } from \"../../context/DialogContext\";\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport AddEditUserModal from \"./AddEditUserModal\";\r\nimport {\r\n  setAddEditUserModalToggle,\r\n  setAddEditUserModalType,\r\n  setAddEditUserModalRowData,\r\n\r\n} from \"../../../store/actions/AddEditUserModalActions\";\r\nimport { getPanelTypeString } from \"../../../auth/PanelType\";\r\nimport { getStatusTypeString } from \"../../../auth/StatusType\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    marginTop: (state) => state.appBarHeight + 15\r\n  }\r\n}));\r\n\r\nconst AddUsers = (props) => {\r\n  const classes = useStyles({ appBarHeight: props.appBarHeight });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const {\r\n    openContextDialog\r\n  } = React.useContext(DialogContext)\r\n\r\n\r\n  const { loading: deleteUserLoading, error: deleteUserError, data: deleteUserResult, makeRequest: deleteUser } = useSwaggerRequest('/api/users/delete');\r\n\r\n  useEffect(() => {\r\n    if (deleteUserResult) {\r\n\r\n      getUsers(\r\n        {\r\n          method: 'GET',\r\n\r\n        }\r\n      );\r\n      enqueueSnackbar(\"User deleted successfully.\", { variant: \"success\" });\r\n\r\n\r\n    }\r\n  }, [deleteUserResult]);\r\n\r\n  useEffect(() => {\r\n    if (deleteUserError) {\r\n\r\n      enqueueSnackbar(deleteUserError.message, { variant: \"error\" });\r\n\r\n    }\r\n  }, [deleteUserError]);\r\n\r\n  const { loading: getUsersLoading, error: getUsersError, data: getUsersResult, makeRequest: getUsers } = useSwaggerRequest('/api/users/all');\r\n  useEffect(() => {\r\n\r\n    getUsers(\r\n      {\r\n        method: 'GET',\r\n\r\n      }\r\n    );\r\n\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'name',\r\n        header: 'Name',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, //disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n\r\n          return <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '1rem',\r\n            }}\r\n          >\r\n            <Avatar\r\n              alt=\"avatar\"\r\n              height={30}\r\n              src={row.original.avatar}\r\n              loading=\"lazy\"\r\n              style={{ borderRadius: '50%' }}\r\n            />\r\n            {/* using renderedCellValue instead of cell.getValue() preserves filter match highlighting */}\r\n            <span>{renderedCellValue}</span>\r\n          </Box>\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'username',\r\n        header: 'Username',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, //disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n      },\r\n      {\r\n        accessorKey: 'mobileNumber',\r\n        header: 'Contact no',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, //disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n          return <span>{`${row.original.countryCode || \"\"}${renderedCellValue || \"\"}`}</span>\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'role',\r\n        header: 'Role',\r\n        enableColumnFilter:false,\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, //disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n          return getPanelTypeString(row.original.role)\r\n        }\r\n      },\r\n      {\r\n        accessorKey: 'status',\r\n        header: 'Status',\r\n        enableColumnFilter:false,\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, //disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n          return <span style={{ color: getStatusTypeString(row.original.status) == \"Blocked\" ? \"red\" : \"green\" }}>{`${getStatusTypeString(row.original.status)}`}</span>\r\n        }\r\n      },\r\n      {\r\n\r\n        accessorKey: 'blockComments',\r\n        header: 'Block Comments',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, //disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n          return <span style={{ color: row.original.status == \"Block\" ? \"red\" : \"black\" }}>{`${row.original.blockComments ? row.original.blockComments : \"\"}`}</span>\r\n        }\r\n      }\r\n    ]\r\n  );\r\n\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className={classes.mainContainer}\r\n        maxWidth={false}\r\n        disableGutters={true}\r\n      >\r\n        <CustomTable\r\n          exportFilename={\"users\"}\r\n          addDataText={\"Add Users\"}\r\n\r\n          addDataAction={() => {\r\n\r\n            props.setAddEditUserModalType(\"Add\");\r\n            props.setAddEditUserModalToggle(true);\r\n\r\n          }}\r\n\r\n          muiTablePaginationProps={{\r\n            rowsPerPageOptions: _.sortBy([40, 80, 160, getUsersResult ? getUsersResult.length : 250]),\r\n          }}\r\n          renderRowActions={({ row, table }) => (\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n                <IconButton disabled={row.original.id == props.authUserId} onClick={() => {\r\n                  props.setAddEditUserModalRowData(row.original);\r\n                  props.setAddEditUserModalType(\"Edit\");\r\n                  props.setAddEditUserModalToggle(true);\r\n                }} >\r\n                  <Edit />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n                <IconButton disabled={row.original.id == props.authUserId} color=\"error\" onClick={() => {\r\n                  openContextDialog(\"Yes\", \"No\", `Are you sure you want to delete ${row.original.name}?`, \"Confirm\", () => {\r\n\r\n                    deleteUser(\r\n                      {\r\n                        method: 'DELETE',\r\n                        additionalUrl: `/${row.original.id}`\r\n                      }\r\n                    );\r\n\r\n\r\n                  }, () => {\r\n\r\n                  });\r\n                }}>\r\n                  <Delete />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n          )}\r\n          enableStickyHeader\r\n          columns={columns}\r\n          enableDensityToggle={false}\r\n\r\n          state={{\r\n            isLoading: getUsersLoading,\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            pagination: { pageSize: 40 },\r\n            isLoading: true,\r\n          }}\r\n          data={getUsersResult ? getUsersResult : []}\r\n        />\r\n        {\r\n          props.addEditUserModalToggle && <AddEditUserModal getUsersCallback={() => {\r\n            getUsers(\r\n              {\r\n                method: 'GET',\r\n\r\n              }\r\n            );\r\n          }} modalType={props.addEditUserModalType} />\r\n        }\r\n      </Container>\r\n\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.AuthUserReducer, ...state.OtherReducer, ...state.AddEditUserModalReducer };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  setAddEditUserModalToggle,\r\n  setAddEditUserModalType,\r\n  setAddEditUserModalRowData,\r\n})(AddUsers);\r\n","D:\\halalpizzabackendui\\src\\components\\otherComponents\\ValidationMobileField.js",["964","965","966","967"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport {\r\n    BaseTextFieldProps,\r\n    InputAdornment,\r\n    MenuItem,\r\n    Select,\r\n    TextField,\r\n    Typography,\r\n} from \"@mui/material\";\r\nimport {\r\n    defaultCountries,\r\n    FlagEmoji,\r\n    parseCountry,\r\n    usePhoneInput,\r\n} from \"react-international-phone\";\r\nimport { PhoneNumberUtil } from \"google-libphonenumber\";\r\n\r\nconst ValidationMobileField = ({ value, onChange, refProp, ...restProps }) => {\r\n    const {\r\n        phone,\r\n        handlePhoneValueChange,\r\n        inputRef,\r\n        country,\r\n        setCountry,\r\n    } = usePhoneInput({\r\n        defaultCountry: \"pk\",\r\n        value,\r\n        countries: defaultCountries,\r\n        onChange: (data) => {\r\n\r\n            isPhoneValid(data.phone, data.country);\r\n            onChange(data);\r\n        },\r\n    });\r\n    const [error, setError] = useState(\"\");\r\n    const phoneUtil = PhoneNumberUtil.getInstance();\r\n    const inputRefFromParent = useRef(null);\r\n\r\n    // Use a ref to access the input field from the parent component\r\n    useEffect(() => {\r\n        if (refProp) {\r\n            refProp.current = {\r\n                validatePhoneNumber: () => isPhoneValid(phone, country),\r\n            };\r\n        }\r\n    }, [refProp, phone]);\r\n\r\n    const isPhoneValid = (phone, country) => {\r\n        try {\r\n\r\n\r\n\r\n            const phoneUtil = PhoneNumberUtil.getInstance();\r\n            const countryCode = \"+\" + phoneUtil.getCountryCodeForRegion(country);\r\n\r\n            const phoneWithoutCode = phone.replace(/\\s/g, '').replace(countryCode, '');\r\n\r\n            if (phoneWithoutCode.length == 0 && restProps.required) {\r\n                setError(\"This field is required.\");\r\n                return false;\r\n            }\r\n\r\n            if (phoneWithoutCode.length > 0) {\r\n                const parsedPhone = phoneUtil.parseAndKeepRawInput(phone);\r\n\r\n\r\n                if (!phoneUtil.isValidNumber(parsedPhone)) {\r\n                    setError(\"Phone number is not valid.\");\r\n                    return false;\r\n                }\r\n\r\n                // Check if the phone number is complete (e.g., contains the expected number of digits)\r\n                const isComplete = phoneUtil.isPossibleNumberWithReason(parsedPhone) === PhoneNumberUtil.ValidationResult.IS_POSSIBLE;\r\n\r\n                if (!isComplete) {\r\n                    setError(\"Phone number is incomplete.\");\r\n                    return false;\r\n                }\r\n                setError(\"\");\r\n                // Phone number is both valid and complete\r\n                return true;\r\n            }else{\r\n                setError(\"\");\r\n                return true;\r\n            }\r\n        } catch (error) {\r\n\r\n            setError(\"Phone number is not valid.\");\r\n            return false;\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <TextField\r\n            variant=\"outlined\"\r\n            label=\"Phone number\"\r\n            color=\"primary\"\r\n            placeholder=\"Phone number\"\r\n            value={phone}\r\n            error={error !== \"\"}\r\n            helperText={error}\r\n            onChange={handlePhoneValueChange}\r\n            type=\"tel\"\r\n            inputRef={(el) => {\r\n                inputRef.current = el;\r\n                inputRefFromParent.current = el;\r\n            }}\r\n            InputProps={{\r\n                startAdornment: (\r\n                    <InputAdornment\r\n                        position=\"start\"\r\n                        style={{ marginRight: \"2px\", marginLeft: \"-8px\" }}\r\n                    >\r\n                        <Select\r\n                            MenuProps={{\r\n                                style: {\r\n                                    height: \"300px\",\r\n                                    width: \"270px\",\r\n                                    top: \"10px\",\r\n                                    left: \"-34px\",\r\n                                },\r\n                                transformOrigin: {\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"left\",\r\n                                },\r\n                            }}\r\n                            sx={{\r\n                                width: \"max-content\",\r\n                                // Remove default outline (display only on focus)\r\n                                fieldset: {\r\n                                    display: \"none\",\r\n                                },\r\n                                '&.Mui-focused:has(div[aria-expanded=\"false\"])': {\r\n                                    fieldset: {\r\n                                        display: \"block\",\r\n                                    },\r\n                                },\r\n                                // Update default spacing\r\n                                \".MuiSelect-select\": {\r\n                                    padding: \"8px\",\r\n                                    paddingRight: \"24px !important\",\r\n                                },\r\n                                svg: {\r\n                                    right: 0,\r\n                                },\r\n                            }}\r\n                            value={country}\r\n                            onChange={(e) => setCountry(e.target.value)}\r\n                            renderValue={(value) => (\r\n                                <FlagEmoji iso2={value} style={{ display: \"flex\", width: 20, marginTop: 2 }} />\r\n                            )}\r\n                        >\r\n                            {defaultCountries.map((c) => {\r\n                                const country = parseCountry(c);\r\n                                return (\r\n                                    <MenuItem key={country.iso2} value={country.iso2}>\r\n                                        <FlagEmoji\r\n                                            iso2={country.iso2}\r\n                                            style={{ marginRight: \"8px\", width: 40 }}\r\n                                        />\r\n                                        <Typography marginRight=\"8px\">{country.name}</Typography>\r\n                                        <Typography color=\"gray\">+{country.dialCode}</Typography>\r\n                                    </MenuItem>\r\n                                );\r\n                            })}\r\n                        </Select>\r\n                    </InputAdornment>\r\n                ),\r\n            }}\r\n            {...restProps}\r\n        />\r\n    );\r\n};\r\n\r\nexport default ValidationMobileField;\r\n","D:\\halalpizzabackendui\\src\\components\\profileEditModal\\ImageCropper.js",["968","969","970","971","972"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n  DialogTitle,\r\n  CircularProgress,\r\n  IconButton,\r\n  Container,\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {\r\n  setCropImageModalImage,\r\n  setCropImageModalToggle,\r\n  setCropImageModalLoading,\r\n  setCropImageModalZoom,\r\n  setCropImageModalCrop,\r\n  setCropImageModalCroppedAreaPixels,\r\n  setCropImageModalReset\r\n} from \"../../store/actions/CropImageModalActions\";\r\nimport getCroppedImg from './GetCroppedImage'\r\nconst useStyles = makeStyles((theme) => ({\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: \"white\",\r\n  },\r\n\r\n  dialogTitle: {\r\n    background: \"rgb(46 62 78)\",\r\n  },\r\n  dialogTitleText: {\r\n    color: \"white\",\r\n  },\r\n  dialogActions: {\r\n    padding: 0,\r\n  },\r\n  cropContainer: {\r\n    position: \"relative!important\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n  },\r\n  dialogContent: {\r\n    padding: 0,\r\n  },\r\n  submitButton: {\r\n    fontSize: 17,\r\n    width: \"200px\",\r\n    borderRadius: 0,\r\n    margin:\"auto!important\",\r\n    color: \"white!important\",\r\n   display:\"block!important\"\r\n   \r\n  },\r\n}));\r\nconst ImageCropper = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = () => {\r\n    props.setCropImageModalReset();\r\n  };\r\n  const onCropChange = (crop) => {\r\n    props.setCropImageModalCrop( crop );\r\n  };\r\n\r\n  const onCropComplete = (croppedArea, croppedAreaPixels) => {\r\n    props.setCropImageModalCroppedAreaPixels( croppedAreaPixels);\r\n  };\r\n\r\n  const onZoomChange = (zoom) => {\r\n\r\n    props.setCropImageModalZoom(zoom);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={props.cropImageModalToggle}\r\n      onClose={handleClose}\r\n      fullScreen\r\n      style={{ margin: 20 }}\r\n    >\r\n      <DialogTitle\r\n        onClose={handleClose}\r\n        id=\"customized-dialog-title\"\r\n        className={classes.dialogTitle}\r\n      >\r\n        <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n          Crop Image\r\n        </Typography>\r\n\r\n      \r\n      </DialogTitle>\r\n      <DialogContent className={classes.dialogContent}>\r\n        <Cropper\r\n          classes={{ containerClassName: classes.cropContainer }}\r\n          image={props.cropImageModalImage}\r\n          crop={props.cropImageModalCrop}\r\n          zoom={props.cropImageModalZoom}\r\n          aspect={props.cropImageModalAspect}\r\n          onCropChange={onCropChange}\r\n          onCropComplete={onCropComplete}\r\n          onZoomChange={onZoomChange}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n        <Container maxWidth={\"xl\"} disableGutters={true} className={classes.submitButtonContainer}>\r\n          <Button\r\n          onClick={async ()=>{\r\n            props.setCropImageModalLoading(true);\r\n            const croppedImage = await getCroppedImg(\r\n              props.cropImageModalImage,\r\n              props.cropImageModalCroppedAreaPixels,\r\n              0\r\n            );\r\n            props.onImageCropCompleted(croppedImage);\r\n            props.setCropImageModalReset();\r\n          }}\r\n            variant=\"contained\"\r\n            type=\"submit\"\r\n            disabled={props.cropImageModalLoading}\r\n            className={classes.submitButton}\r\n          >\r\n            {props.cropImageModalLoading && <CircularProgress size={25} />}\r\n            {!props.cropImageModalLoading && \"Edit\"}\r\n          </Button>\r\n        </Container>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.CropImageModalReducer };\r\n};\r\nexport default connect(mapStateToProps, {\r\n  setCropImageModalImage,\r\n  setCropImageModalToggle,\r\n  setCropImageModalLoading,\r\n  setCropImageModalZoom,\r\n  setCropImageModalCrop,\r\n  setCropImageModalCroppedAreaPixels,\r\n  setCropImageModalReset\r\n})(ImageCropper);\r\n","D:\\halalpizzabackendui\\src\\components\\otherComponents\\CustomTable.js",["973","974","975","976"],"import React, { useCallback, useMemo, useState } from 'react';\r\nimport { MaterialReactTable } from 'material-react-table';\r\nimport {\r\n  Button, IconButton, Container, Tooltip\r\n} from '@mui/material';\r\nimport jspdf from \"jspdf\";\r\nimport 'jspdf-autotable';\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport * as XLSX from 'xlsx'\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  addActionButton: {\r\n    color: \"#FFFFFF!important\",\r\n    [theme.breakpoints.down(\"md\")]: {\r\n      padding: \"6px!important\"\r\n    }\r\n  },\r\n  toolbarContainer: {\r\n    display: \"flex!important\",\r\n    justifyContent: \"space-between\"\r\n  },\r\n  excelButton:{\r\n    marginLeft:\"auto\"\r\n  }\r\n}));\r\nconst CustomTable = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <MaterialReactTable\r\n   \r\n        displayColumnDefOptions={{\r\n          'mrt-row-actions': {\r\n            muiTableHeadCellProps: {\r\n              align: 'center',\r\n\r\n            },\r\n            size: 10,\r\n          },\r\n        }}\r\n        columns={props.columns}\r\n        data={props.data}\r\n        enableColumnOrdering\r\n        enableEditing={true}\r\n        renderTopToolbarCustomActions={({ table }) => {\r\n         return <Container disableGutters={true} maxWidth={false} className={classes.toolbarContainer}>\r\n           {props.addDataText && <Button\r\n              className={classes.addActionButton}\r\n              onClick={props.addDataAction}\r\n              variant=\"contained\"\r\n            >\r\n              {props.addDataText}\r\n            </Button>\r\n          }\r\n \r\n            <span className={classes.excelButton}>\r\n            <Tooltip title={\"Download Excel\"}>\r\n              <IconButton onClick={() => {\r\n               const tableData = table.getPrePaginationRowModel().rows.map((row) => {\r\n              \r\n                return props.columns.map((col) => row.getValue(col.accessorKey));\r\n              });\r\n              \r\n              const ws = XLSX.utils.aoa_to_sheet([props.columns.map((col) => col.header), ...tableData]);\r\n              const wb = XLSX.utils.book_new();\r\n              XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n              XLSX.writeFile(wb, `${props.exportFilename}.xlsx`);\r\n              }}>\r\n                <FileDownloadIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n            </span>\r\n            <Tooltip title={\"Download PDF\"}>\r\n              <IconButton onClick={() => {\r\n                 \r\n                const unit = \"pt\";\r\n                const size = \"a4\"; // use a1, a2, a3 or a4\r\n                const orientation = \"portrait\"; // portrait or landscape\r\n\r\n                const marginleft = 40;\r\n                const doc = new jspdf(orientation, unit, size);\r\n\r\n                const tableData = table.getPrePaginationRowModel().rows.map((row) => {\r\n                  \r\n                  console.log(row.getValue(\"moreInfo\"))\r\n                  return props.columns.map((col) => row.getValue(col.accessorKey));\r\n                });\r\n            \r\n                doc.autoTable({\r\n                  head: [props.columns.map((col) => col.header)],\r\n                  body: tableData,\r\n                  theme: 'striped',\r\n                });\r\n             \r\n                doc.save(`${props.exportFilename}.pdf`)\r\n              }}>\r\n                <PictureAsPdfIcon />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Container>\r\n        }}\r\n        {...props}\r\n      />\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default CustomTable;\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminUsers\\AddEditUserModal.js",["977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n    CircularProgress,\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n    FormControlLabel,\r\n    Checkbox\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\nimport ValidationSelectField from \"../../otherComponents/ValidationSelectField\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n} from \"../../../store/actions/CropImageModalActions\";\r\n\r\nimport {\r\n    setAddEditUserModalToggle,\r\n    setAddEditUserModalAvatar,\r\n    setAddEditUserModalName,\r\n    setAddEditUserModalEmail,\r\n    setAddEditUserModalRole,\r\n    setAddEditUserModalStatus,\r\n    setAddEditUserModalBlockComments,\r\n    setAddEditUserModalUsername,\r\n    setAddEditUserModalCountryRegion,\r\n    setAddEditUserModalContactNumber,\r\n    setAddEditUserModalNewPassword,\r\n    setAddEditUserModalIsLoading,\r\n    setAddEditUserModalReset\r\n} from \"../../../store/actions/AddEditUserModalActions\";\r\nimport ImageCropper from \"../../profileEditModal/ImageCropper\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport ValidationMobileField from \"../../otherComponents/ValidationMobileField\";\r\nimport clsx from \"clsx\";\r\nimport { PhoneNumberUtil } from 'google-libphonenumber';\r\nimport PanelType from \"../../../auth/PanelType\";\r\nimport StatusType from \"../../../auth/StatusType\";\r\nimport resolvesettings from \"../../resolvesettings\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\",\r\n\r\n\r\n    },\r\n    profilePicAddButton: {\r\n        border: \"1px dashed gray\",\r\n        borderRadius: \"50%\",\r\n        padding: \"0px!important\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n    },\r\n    profilePicAddButtonContainer: {\r\n        display: \"flex!important\"\r\n    },\r\n    profilePictureAddImage: {\r\n        width: \"100px\",\r\n        borderRadius: \"50%\",\r\n        height: \"100px\",\r\n        marginRight: 5,\r\n    },\r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n    newPasswordTextField: {\r\n        background: \"#e3ffe5\",\r\n    },\r\n    avatar: {\r\n        width: \"55px!important\",\r\n        height: \"55px!important\",\r\n        marginRight: \"7px\"\r\n    },\r\n    checkboxLabel: {\r\n\r\n    },\r\n    submitButtonContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n\r\n    }\r\n}));\r\n\r\nconst AddEditUserModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const nameValidationFieldRef = useRef(null);\r\n    const emailValidationFieldRef = useRef(null);\r\n    const mobileValidationFieldRef = useRef(null);\r\n    const statusValidationFieldRef = useRef(null);\r\n    const roleValidationFieldRef = useRef(null);\r\n    \r\n    const usernameValidationFieldRef = useRef(null);\r\n    const newPasswordValidationFieldRef = useRef(null);\r\n\r\n\r\n\r\n    const profilePicAddButtonRef = useRef(null);\r\n    const handleClose = () => {\r\n\r\n        props.setAddEditUserModalReset();\r\n    };\r\n   \r\n\r\n    useEffect(() => {\r\n       \r\n        const defaultCountryCode = \"+92\";\r\n        if (props.modalType == \"Edit\") {\r\n            if (props.addEditUserModalRowData) {\r\n                props.setAddEditUserModalAvatar(props.addEditUserModalRowData.avatar);\r\n                props.setAddEditUserModalName(props.addEditUserModalRowData.name);\r\n                props.setAddEditUserModalEmail(props.addEditUserModalRowData.email);\r\n                \r\n                props.setAddEditUserModalRole(props.addEditUserModalRowData.role);\r\n                props.setAddEditUserModalStatus(props.addEditUserModalRowData.status);\r\n                props.setAddEditUserModalBlockComments(props.addEditUserModalRowData.blockComments);\r\n\r\n                props.setAddEditUserModalUsername(props.addEditUserModalRowData.username);\r\n           \r\n                const countryCode = props.addEditUserModalRowData.countryCode || \"\";\r\n                const contactNumber = props.addEditUserModalRowData.mobileNumber || \"\";\r\n\r\n\r\n                const formattedContactNumber = (countryCode.toString() + contactNumber) || defaultCountryCode;\r\n\r\n                props.setAddEditUserModalContactNumber(formattedContactNumber)\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            props.setAddEditUserModalContactNumber(defaultCountryCode);\r\n            props.setAddEditUserModalRole(2);\r\n            props.setAddEditUserModalStatus(1);\r\n        }\r\n\r\n    }, []);\r\n\r\n\r\n    const { loading: editUserLoading, error: editUserError,data: editUserResult, makeRequest: editUser } = useSwaggerRequest(`/api/users/editwithnewpassword/${props.addEditUserModalRowData?.id}`);\r\n\r\n\r\n    useEffect(() => {\r\n        if (editUserError) {\r\n           \r\n                enqueueSnackbar(editUserError.message, { variant: \"error\" });\r\n           \r\n        }\r\n    }, [editUserError]);\r\n\r\n    useEffect(() => {\r\n        if (editUserResult) {\r\n           \r\n                enqueueSnackbar(\"User updated successfully.\", { variant: \"success\" });\r\n\r\n                handleClose();\r\n                props.getUsersCallback();\r\n         \r\n        }\r\n    }, [editUserResult]);\r\n\r\n\r\n    const { loading: addUserLoading, error: addUserError,data: addUserResult, makeRequest: addUser } = useSwaggerRequest(`/api/users/add`);\r\n\r\n    useEffect(() => {\r\n        if (addUserError) {\r\n         \r\n                enqueueSnackbar(addUserError.message, { variant: \"error\" });\r\n         \r\n        }\r\n    }, [addUserError]);\r\n\r\n    useEffect(() => {\r\n        if (addUserResult) {\r\n           \r\n                enqueueSnackbar(\"User added successfully.\", { variant: \"success\" });\r\n\r\n                handleClose();\r\n                props.getUsersCallback();\r\n           \r\n        }\r\n    }, [addUserResult]);\r\n\r\n\r\n    let isLoading = editUserLoading || addUserLoading;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoading) return;\r\n\r\n        let isValid = true;\r\n\r\n        if (!nameValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!emailValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!mobileValidationFieldRef.current.validatePhoneNumber()) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (!statusValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!roleValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n     \r\n        if (!usernameValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (!newPasswordValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n\r\n        const phoneUtil = PhoneNumberUtil.getInstance();\r\n\r\n        // Replace 'pk' with the ISO 3166-1 alpha-2 country code of your choice\r\n        const country = props.addEditUserModalCountryRegion;\r\n\r\n\r\n        const countryCode = phoneUtil.getCountryCodeForRegion(country);\r\n\r\n        // Prepend '+' to the dial code\r\n        const formattedDialCode = `+${countryCode}`;\r\n\r\n        const phoneWithoutCode = props.addEditUserModalContactNumber.replace(/\\s/g, '').replace(formattedDialCode, '');\r\n\r\n        if (isValid) {\r\n            try {\r\n                if (props.modalType == \"Edit\") {\r\n                    await editUser({\r\n                        method: 'PUT',\r\n                        requestData: {\r\n                            id: props.addEditUserModalRowData.id,\r\n                            name: props.addEditUserModalName,\r\n                            avatar: props.addEditUserModalAvatar,\r\n                            email: props.addEditUserModalEmail,\r\n                            countryCode: phoneWithoutCode.length > 0 ? formattedDialCode : undefined,\r\n                            mobileNumber: phoneWithoutCode.length > 0 ? phoneWithoutCode : undefined,\r\n                            status: props.addEditUserModalStatus,\r\n                            blockComments:props.addEditUserModalStatus == StatusType.Blocked ? props.addEditUserModalBlockComments: \"\",\r\n                            role: props.addEditUserModalRole,\r\n                            username: props.addEditUserModalUsername,\r\n                            newPassword: props.addEditUserModalNewPassword.length > 0 ? props.addEditUserModalNewPassword : undefined,\r\n                            settingsJSON: \"\",\r\n                           \r\n                        },\r\n                    });\r\n                } else {\r\n\r\n                    await addUser({\r\n                        method: 'POST',\r\n                        requestData: {\r\n                            name: props.addEditUserModalName,\r\n                            avatar: props.addEditUserModalAvatar,\r\n                            email: props.addEditUserModalEmail,\r\n                            countryCode: phoneWithoutCode.length > 0 ? formattedDialCode : undefined,\r\n                            mobileNumber: phoneWithoutCode.length > 0 ? phoneWithoutCode : undefined,\r\n                            status: props.addEditUserModalStatus,\r\n                            block_comments:props.addEditUserModalStatus == \"Block\" ? props.addEditUserModalBlockComments: \"\",\r\n                            role: props.addEditUserModalRole,\r\n                            username: props.addEditUserModalUsername,\r\n                            password: props.addEditUserModalNewPassword.length > 0 ? props.addEditUserModalNewPassword : undefined,\r\n                            settingsJSON: \"\",\r\n                           \r\n                        },\r\n                    });\r\n                }\r\n            } catch (e) {\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditUserModalToggle}\r\n            onClose={handleClose}\r\n\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {`${props.modalType == \"Edit\" ? \"Edit\" : \"Add\"} User`}\r\n                </Typography>\r\n\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={12}>\r\n                            <Container disableGutters={true} className={classes.profilePicAddButtonContainer}>\r\n                                <input\r\n                                    onChange={(event) => {\r\n                                        if (event.target.files.length > 0) {\r\n                                            let reader = new FileReader();\r\n                                            reader.readAsDataURL(event.target.files[0]);\r\n                                            reader.onload = function () {\r\n                                                props.setCropImageModalImage(reader.result);\r\n                                                props.setCropImageModalToggle(true);\r\n                                            };\r\n                                            reader.onerror = function (error) {\r\n                                                alert(\"Error: \", error);\r\n                                            };\r\n                                        }\r\n                                    }}\r\n                                    ref={profilePicAddButtonRef}\r\n                                    accept=\"image/*\"\r\n                                    disabled={isLoading}\r\n                                    className={classes.profilePicAddButton}\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"raised-button-file\"\r\n                                    name=\"raised-button-file\"\r\n                                    multiple={false}\r\n                                    type=\"file\"\r\n                                />\r\n\r\n                                <Button\r\n                                    onClick={() => {\r\n                                        profilePicAddButtonRef.current.click();\r\n                                    }}\r\n                                    className={classes.profilePicAddButton}\r\n                                >\r\n                                    <Avatar\r\n                                        className={classes.avatar}\r\n                                        alt=\"User Avatar\"\r\n                                        src={props.addEditUserModalAvatar ? props.addEditUserModalAvatar : null}\r\n                                    />\r\n                                </Button>\r\n                                <ImageCropper\r\n                                    onImageCropCompleted={(croppedImage) => {\r\n\r\n                                        props.setAddEditUserModalAvatar(croppedImage);\r\n                                    }}\r\n                                />\r\n\r\n                                <ValidationTextField\r\n                                    type=\"text\"\r\n                                    className={classes.textField}\r\n                                    InputProps={{\r\n                                        classes: {},\r\n                                    }}\r\n                                    ref={nameValidationFieldRef}\r\n                                    value={props.addEditUserModalName}\r\n                                    required\r\n                                    disabled={isLoading}\r\n                                    onInput={(e) =>\r\n                                        props.setAddEditUserModalName(e.target.value)\r\n                                    }\r\n                                    label=\"Full Name\"\r\n                                    variant=\"outlined\"\r\n                                />\r\n                            </Container>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                emailtext={true}\r\n                                className={classes.textField}\r\n                                value={props.addEditUserModalEmail}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={emailValidationFieldRef}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditUserModalEmail(e.target.value)\r\n                                }\r\n                                label=\"Email\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationMobileField\r\n                                value={props.addEditUserModalContactNumber}\r\n                                refProp={mobileValidationFieldRef}\r\n                                disabled={isLoading}\r\n                                onChange={(value) => {\r\n\r\n                                    props.setAddEditUserModalCountryRegion(value.country);\r\n                                    props.setAddEditUserModalContactNumber(value.phone);\r\n                                }\r\n                                }\r\n                                className={classes.textField}\r\n                                id=\"mobileTextField\"\r\n                                label=\"Mobile\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationSelectField\r\n                                className={classes.textField}\r\n                                value={\r\n                                    props.addEditUserModalStatus\r\n                                }\r\n                                ref={statusValidationFieldRef}\r\n                                values={[\r\n                                    [1, \"ACTIVE\"],\r\n                                    [2, \"BLOCKED\"],\r\n                                    [3, \"INACTIVE\"]\r\n                                    \r\n                                ]}\r\n                                disabled={isLoading}\r\n                                onChange={(e) => {\r\n\r\n                                    props.setAddEditUserModalStatus(e.target.value);\r\n                                }}\r\n                                label=\"Select Status *\"\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        { props.addEditUserModalStatus == StatusType.Blocked &&\r\n                        <Grid item xs={12} md={12}>\r\n                            <ValidationTextField\r\n                              \r\n                                multiline={true}\r\n                                className={clsx(classes.textField, classes.newBlockTextField)}\r\n                                value={props.addEditUserModalBlockComments}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={newPasswordValidationFieldRef}\r\n\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditUserModalBlockComments(e.target.value)\r\n                                }\r\n                                required={true}\r\n                                label={\"Block Comments\"}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n}\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationSelectField\r\n                                className={classes.textField}\r\n                                value={\r\n                                    props.addEditUserModalRole\r\n                                }\r\n                                ref={roleValidationFieldRef}\r\n                                values={[\r\n                                    [2, \"ADMIN\"],\r\n                                    [1, \"USER\"]\r\n                                ]}\r\n                                disabled={isLoading}\r\n                                onChange={(e) => {\r\n                                    props.setAddEditUserModalRole(e.target.value);\r\n                                }}\r\n                                label=\"Select Role *\"\r\n                                required={true}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                     \r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                value={props.addEditUserModalUsername}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={usernameValidationFieldRef}\r\n                                required\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditUserModalUsername(e.target.value)\r\n                                }\r\n                                label=\"Username\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"newpassword\"\r\n                                className={clsx(classes.textField, classes.newPasswordTextField)}\r\n                                value={props.addEditUserModalNewPassword}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={newPasswordValidationFieldRef}\r\n\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditUserModalNewPassword(e.target.value)\r\n                                }\r\n                                required={props.modalType == \"Edit\" ? false : true}\r\n                                label={`${props.modalType == \"Edit\" ? \"New\" : \"\"} Password`}\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                       \r\n                       \r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        {isLoading && <CircularProgress size={25} />}\r\n                        {!isLoading && props.modalType == \"Edit\" ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditUserModalReducer, ...state.AuthUserReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n    setAddEditUserModalToggle,\r\n    setAddEditUserModalAvatar,\r\n    setAddEditUserModalName,\r\n    setAddEditUserModalEmail,\r\n    setAddEditUserModalRole,\r\n    setAddEditUserModalStatus,\r\n    setAddEditUserModalBlockComments,\r\n    setAddEditUserModalUsername,\r\n    setAddEditUserModalCountryRegion,\r\n    setAddEditUserModalContactNumber,\r\n    setAddEditUserModalNewPassword,\r\n    setAddEditUserModalIsLoading,\r\n    setAddEditUserModalReset\r\n})(AddEditUserModal);\r\n","D:\\halalpizzabackendui\\src\\components\\profileEditModal\\GetCroppedImage.js",[],"D:\\halalpizzabackendui\\src\\components\\otherComponents\\ValidationSelectField.js",["995","996"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  Select,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    width: \"100%\",\r\n  },\r\n  formHelperText: {\r\n    color: \"#f44336\",\r\n  },\r\n}));\r\n\r\nconst ValidationSelectField = React.forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  const selectField = useRef(null);\r\n\r\n\r\n\r\n  const [value, setValue] = useState(props.value);\r\n  const [error, setError] = useState(\"\");\r\n  useEffect(() => {\r\n \r\n    setValue(props.value || \"\"); // Reset to an empty string if props.value is falsy\r\n  }, [props.value]);\r\n  useEffect(() => {\r\n    if (props.value !== value) {\r\n      setValue(props.value);\r\n    }\r\n  }, [props.value]);\r\n\r\n  useEffect(() => {\r\n    if (ref) {\r\n      ref.current = {\r\n        validateValue: () => validate_(value),\r\n      };\r\n    }\r\n  }, [ref, value]);\r\n\r\n  function validate_(value) {\r\n    let valid = true;\r\n\r\n    if (props.required) {\r\n      if (!value || value.length === 0) {\r\n        setError(\"This field is required.\");\r\n        valid = false;\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n    }\r\n    return valid;\r\n  }\r\n\r\n  function handleChange(e) {\r\n    const selectedValue = e.target.value;\r\n    setValue(selectedValue);\r\n    validate_(selectedValue);\r\n    props.onChange && props.onChange(e);\r\n  }\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.formControl}>\r\n      <InputLabel htmlFor={`native-simple-${props.label.replace(/ /g, \"-\")}`}>\r\n        {props.label}\r\n      </InputLabel>\r\n      <Select\r\n\r\n        ref={selectField}\r\n        {...props}\r\n        inputProps={{\r\n          id: `native-simple-${props.label.replace(/ /g, \"-\")}`,\r\n        }}\r\n        value={value}\r\n        onChange={handleChange}\r\n        error={error !== \"\"}\r\n      >\r\n        <MenuItem aria-label=\"None\" value=\"\" />\r\n        {props.values &&\r\n          props.values.map((values) => (\r\n            <MenuItem  key={values[0]} value={values[0]}>\r\n              {values[1]}\r\n            </MenuItem>\r\n          ))}\r\n      </Select>\r\n      {error && (\r\n        <FormHelperText className={classes.formHelperText}>{error}</FormHelperText>\r\n      )}\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default ValidationSelectField;\r\n","D:\\halalpizzabackendui\\src\\components\\otherComponents\\DateRangeModal\\DateRangeModal.js",["997"],"import React, { useState,useImperativeHandle,forwardRef } from 'react';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport dayjs from 'dayjs';\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Typography from '@mui/material/Typography';\r\nimport Container from '@mui/material/Container';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport './styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\nimport { DateRange } from 'react-date-range';\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"flex!important\",\r\n\r\n  },\r\n  closeButton: {\r\n    position: \"absolute!important\",\r\n    right: 5,\r\n    top: 6,\r\n    color: \"white!important\",\r\n  },\r\n  dialogTitle: {\r\n    background: \"#505050\",\r\n    flexDirection: \"row\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingTop: \"10px!important\",\r\n    paddingBottom: \"10px!important\",\r\n  },\r\n  dialogTitleText: {\r\n    color: \"white\",\r\n  },\r\n  dialogActions: {\r\n    padding: 0,\r\n\r\n  },\r\n  dialogContent: {\r\n    padding: \"0!important\"\r\n  },\r\n  contentContainer: {\r\n    marginTop: 10,\r\n    display: \"flex!important\",\r\n    flexDirection: \"column\"\r\n  }, searchTextField: {\r\n    marginTop: \"5px!important\",\r\n    marginLeft: \"15px!important\",\r\n    marginRight: \"15px!important\",\r\n  },\r\n  searchSubmitButton: {\r\n    paddingRight: 15\r\n  },\r\n  submitButtonContainer: {\r\n    display: \"flex!important\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n\r\n  },\r\n  searchText: {\r\n    textDecoration: \"underline\",\r\n    cursor: \"pointer\"\r\n  }\r\n}));\r\nconst DateRangeModal = forwardRef((props, ref) => {\r\n  const classes = useStyles();\r\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [dateRange, setDateRange] = useState({\r\n    startDate: new Date(),\r\n    endDate: new Date(),\r\n    key: 'selection',\r\n    color: '#ff5733',\r\n  });\r\n\r\n  // Create a ref for the DateRangeModal component\r\n  useImperativeHandle(ref, () => ({\r\n    clearSearch: () => {\r\n      setSearchText(\"\");\r\n      setDateRange({\r\n        startDate: new Date(),\r\n        endDate: new Date(),\r\n        key: 'selection',\r\n        color: '#ff5733',\r\n      });\r\n    },\r\n  }));\r\n\r\n  const handleOpenPopup = () => {\r\n    setIsPopupOpen(true);\r\n  };\r\n\r\n  const handleClosePopup = () => {\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    props.onSearch && props.onSearch(dateRange.startDate, dateRange.endDate, searchText);\r\n    setIsPopupOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.mainContainer}>\r\n      <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n        <IconButton onClick={handleOpenPopup}>\r\n          <CalendarTodayIcon />\r\n        </IconButton>\r\n        {props.searchIconText && <Typography className={classes.searchText} onClick={handleOpenPopup}>\r\n          {props.searchIconText}\r\n        </Typography>}\r\n      </Box>\r\n      <Dialog open={isPopupOpen} onClose={handleClosePopup}>\r\n        <DialogTitle\r\n          onClose={handleClosePopup}\r\n          id=\"customized-dialog-title\"\r\n          className={classes.dialogTitle}\r\n        >\r\n          <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n            {props.title}\r\n          </Typography>\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={handleClosePopup}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <DialogContent className={classes.dialogContent}>\r\n          <Container disableGutters={true} className={classes.contentContainer}>\r\n            <DateRange\r\n              moveRangeOnFirstSelection={false}\r\n              onChange={item => {\r\n                setDateRange(item.selection)\r\n              }}\r\n              maxDate={new Date()}\r\n              ranges={[dateRange]}\r\n            />\r\n            <TextField value={searchText} onChange={event => {\r\n              setSearchText(event.target.value);\r\n            }}\r\n              className={classes.searchTextField} placeholder='Search Text'></TextField>\r\n          </Container>\r\n        </DialogContent>\r\n        <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n          <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n            <Button className={classes.searchSubmitButton} variant=\"contained\" color=\"primary\" onClick={handleSearch}>\r\n              Search\r\n            </Button>\r\n          </Container>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default DateRangeModal;\r\n\r\n\r\n\r\n",["998","999"],"D:\\halalpizzabackendui\\src\\components\\resolvesettings.js",[],"D:\\halalpizzabackendui\\src\\hooks\\useSwaggerHook.js",["1000"],"import { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useSwaggerRequest = (controller,stringfy  = true,headers = 'application/json') => {\r\n  const config = useSelector((state) => state.OtherReducer.configData);\r\n  const url = `${config.backend_domain}${config.backend_port !== '' ? ':' + config.backend_port : ''}`;\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [data, setData] = useState(null);\r\n\r\n  const makeRequest = async ({ method, requestData, parameters,additionalUrl }) => {\r\n    setLoading(true);\r\nconst headerVar =  {\r\n  \r\n\r\n}\r\nif (headers != 'multipart/form-data') {\r\n  headerVar['Content-Type'] = headers;\r\n}\r\n    try {\r\n      const requestUrl = `${url}${controller}${additionalUrl ? additionalUrl : \"\"}`;\r\n      const requestOptions = {\r\n        method,\r\n        headers: headerVar,\r\n        body: requestData ? (stringfy ?  JSON.stringify(requestData) :requestData )  : undefined,\r\n      };\r\n\r\n      // Append parameters to the URL for GET requests\r\n      const finalUrl =\r\n        method === 'GET' && parameters\r\n          ? `${requestUrl}?${new URLSearchParams(parameters).toString()}`\r\n          : requestUrl;\r\n\r\n      const response = await fetch(finalUrl, requestOptions);\r\n\r\n     \r\n\r\n      const responseData = await response.json();\r\n      if (!response.ok) {\r\n\r\n        throw new Error(responseData.message);\r\n      }\r\n      setData(responseData);\r\n    } catch (error) {\r\n      setError(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { loading, error, data, makeRequest };\r\n};\r\n\r\nexport default useSwaggerRequest;\r\n","D:\\halalpizzabackendui\\src\\auth\\StatusType.js",[],"D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditCategoriesModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AddEditCategoriesModalActions.js",[],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminCategories\\index.js",["1001","1002","1003","1004","1005","1006","1007"],"import React, { useEffect, useMemo } from \"react\";\r\nimport { IconButton, Tooltip, Container, Box, Avatar } from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomTable from \"../../otherComponents/CustomTable\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport _ from \"lodash\";\r\nimport { DialogContext } from \"../../context/DialogContext\";\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport AddEditCategoriesModal from \"./AddEditCategoriesModal\";\r\nimport {\r\n  setAddEditCategoriesModalToggle,\r\n  setAddEditCategoriesModalType,\r\n  setAddEditCategoriesModalRowData,\r\n\r\n} from \"../../../store/actions/AddEditCategoriesModalActions\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    marginTop: (state) => state.appBarHeight + 15\r\n  }\r\n}));\r\n\r\nconst AdminCategories = (props) => {\r\n  const classes = useStyles({ appBarHeight: props.appBarHeight });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const {\r\n    openContextDialog\r\n  } = React.useContext(DialogContext)\r\n\r\n  const { loading: deleteCategoryLoading, error: deleteCategoryError, data: deleteCategoryResult, makeRequest: deleteCategory } = useSwaggerRequest('/api/categories/delete');\r\n\r\n  useEffect(() => {\r\n    if (deleteCategoryError) {\r\n\r\n      enqueueSnackbar(deleteCategoryError.message, { variant: \"error\" });\r\n\r\n    }\r\n  }, [deleteCategoryError]);\r\n\r\n  useEffect(() => {\r\n    if (deleteCategoryResult) {\r\n      getCategories({\r\n        method: 'GET',\r\n\r\n      });\r\n      enqueueSnackbar(\"Category deleted successfully.\", { variant: \"success\" });\r\n\r\n    }\r\n  }, [deleteCategoryResult]);\r\n\r\n  const { loading: getCategoriesLoading, error: getCategoriesError, data: getCategoriesResult, makeRequest: getCategories } = useSwaggerRequest('/api/categories/all');\r\n\r\n  useEffect(() => {\r\n\r\n    getCategories({\r\n      method: 'GET',\r\n\r\n    });\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'name',\r\n        header: 'Name',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n      },\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        className={classes.mainContainer}\r\n        maxWidth={false}\r\n        disableGutters={true}\r\n      >\r\n        <CustomTable\r\n          exportFilename={\"categories\"}\r\n          addDataText={\"Add Categories\"} // Update the text\r\n          addDataAction={() => {\r\n            props.setAddEditCategoriesModalType(\"Add\"); // Update the action\r\n            props.setAddEditCategoriesModalToggle(true); // Update the action\r\n          }}\r\n          muiTablePaginationProps={{\r\n            rowsPerPageOptions: _.sortBy([40, 80, 160, getCategoriesResult ? getCategoriesResult.length : 250]),\r\n          }}\r\n          renderRowActions={({ row, table }) => (\r\n            <Box sx={{ display: 'flex' }}>\r\n              <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n                <IconButton onClick={() => {\r\n                  props.setAddEditCategoriesModalRowData(row.original);\r\n                  props.setAddEditCategoriesModalType(\"Edit\");\r\n                  props.setAddEditCategoriesModalToggle(true);\r\n                }} >\r\n                  <Edit />\r\n                </IconButton>\r\n              </Tooltip>\r\n              <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n                <IconButton color=\"error\" onClick={() => {\r\n                  openContextDialog(\"Yes\", \"No\", `Are you sure you want to delete ${row.original.name}?`, \"Confirm\", () => {\r\n                    deleteCategory(\r\n                      {\r\n                        method: 'DELETE',\r\n                        additionalUrl: `/${row.original.id}`\r\n                      }\r\n                    );\r\n                  }, () => {\r\n\r\n                  });\r\n                }}>\r\n                  <Delete />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </Box>\r\n          )}\r\n          enableStickyHeader\r\n          columns={columns}\r\n          enableDensityToggle={false}\r\n          state={{\r\n            isLoading: getCategoriesLoading,\r\n          }}\r\n          initialState={{\r\n            density: 'comfortable',\r\n            pagination: { pageSize: 40 },\r\n            isLoading: true,\r\n          }}\r\n          data={getCategoriesResult ? getCategoriesResult : []}\r\n        />\r\n        {props.addEditCategoriesModalToggle && <AddEditCategoriesModal getDesignationsCallback={()=>{\r\n           getCategories({\r\n            method: 'GET',\r\n      \r\n          });\r\n        }} modalType={props.addEditCategoriesModalType} />}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.AuthUserReducer, ...state.OtherReducer, ...state.AddEditCategoriesModalReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAddEditCategoriesModalToggle,\r\n  setAddEditCategoriesModalType,\r\n  setAddEditCategoriesModalRowData,\r\n})(AdminCategories);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminCategories\\AddEditCategoriesModal.js",["1008","1009","1010","1011","1012","1013","1014","1015"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n    CircularProgress,\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n    FormControlLabel,\r\n    Checkbox\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n} from \"../../../store/actions/CropImageModalActions\";\r\n\r\nimport {\r\n    setAddEditCategoriesModalToggle,\r\n    setAddEditCategoriesModalType,\r\n    setAddEditCategoriesModalRowData,\r\n    setAddEditCategoriesModalCategoryName,\r\n    setAddEditCategoriesModalIsLoading,\r\n    setAddEditCategoriesModalReset\r\n} from \"../../../store/actions/AddEditCategoriesModalActions\";\r\n\r\nimport { useSnackbar } from \"notistack\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\",\r\n    },\r\n   \r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n\r\n    checkboxLabel: {\r\n\r\n    },\r\n    submitButtonContainer:{\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n   \r\n    }\r\n}));\r\n\r\nconst AddEditCategoriesModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const categoriesNameValidationFieldRef = useRef(null);\r\n\r\n    const handleClose = () => {\r\n       \r\n        props.setAddEditCategoriesModalReset();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.modalType === \"Edit\") {\r\n            if (props.addEditCategoriesModalRowData) {\r\n                props.setAddEditCategoriesModalCategoryName(props.addEditCategoriesModalRowData.name);\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const { loading: editCategoryLoading, error: editCategoryError,data: editCategoryResult, makeRequest: editCategory } = useSwaggerRequest(`/api/categories/edit/${props.addEditCategoriesModalRowData?.id}`);\r\n\r\n\r\n    useEffect(() => {\r\n        if (editCategoryError) {\r\n           \r\n                enqueueSnackbar(editCategoryError.message, { variant: \"error\" });\r\n         \r\n        }\r\n    }, [editCategoryError]);\r\n\r\n    useEffect(() => {\r\n        if (editCategoryResult) {\r\n           \r\n                enqueueSnackbar(\"Category updated successfully.\", { variant: \"success\" });\r\n                handleClose();\r\n                props.getDesignationsCallback();\r\n           \r\n        }\r\n    }, [editCategoryResult]);\r\n\r\n    const { loading: addCategoryLoading, error: addCategoryError,data: addCategoryResult, makeRequest: addCategory } = useSwaggerRequest(`/api/categories/add`);\r\n\r\n    useEffect(() => {\r\n        if (addCategoryError) {\r\n           \r\n                enqueueSnackbar(addCategoryError.message, { variant: \"error\" });\r\n         \r\n        }\r\n    }, [addCategoryError]);\r\n\r\n    useEffect(() => {\r\n        if (addCategoryResult) {\r\n         \r\n                enqueueSnackbar(\"Category added successfully.\", { variant: \"success\" });\r\n                handleClose();\r\n                props.getDesignationsCallback();\r\n            \r\n        }\r\n    }, [addCategoryResult]);\r\n\r\n    const isLoading = editCategoryLoading || addCategoryLoading;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoading) return;\r\n\r\n        let isValid = true;\r\n\r\n        if (!categoriesNameValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n\r\n        if (isValid) {\r\n            try {\r\n                if (props.modalType === \"Edit\") {\r\n                    await editCategory({\r\n                        method: 'PUT',\r\n                        requestData: {\r\n                            id: props.addEditCategoriesModalRowData.id,\r\n                            name:  props.addEditCategoriesModalCategoryName\r\n                        },\r\n                    });\r\n                } else {\r\n                    await addCategory({\r\n                        method: 'POST',\r\n                        requestData: {\r\n                            name: props.addEditCategoriesModalCategoryName,\r\n                        },\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                // Handle any errors here\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditCategoriesModalToggle}\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {`${props.modalType === \"Edit\" ? \"Edit\" : \"Add\"} Category`}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={12}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={categoriesNameValidationFieldRef}\r\n                                value={props.addEditCategoriesModalCategoryName}\r\n                                required\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditCategoriesModalCategoryName(e.target.value)\r\n                                }\r\n                                label=\"Category Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        {isLoading && <CircularProgress size={25} />}\r\n                        {!isLoading && props.modalType === \"Edit\" ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditCategoriesModalReducer, ...state.AuthUserReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n    setAddEditCategoriesModalToggle,\r\n    setAddEditCategoriesModalType,\r\n    setAddEditCategoriesModalRowData,\r\n    setAddEditCategoriesModalCategoryName,\r\n    setAddEditCategoriesModalIsLoading,\r\n    setAddEditCategoriesModalReset\r\n})(AddEditCategoriesModal);\r\n","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditSlidersModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AddEditSlidersModalActions.js",[],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminSliders\\index.js",["1016","1017","1018","1019","1020","1021","1022","1023","1024"],"import React, { useEffect, useMemo } from \"react\";\r\nimport { IconButton, Tooltip, Container, Box } from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomTable from \"../../otherComponents/CustomTable\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport _ from \"lodash\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport { DialogContext } from \"../../context/DialogContext\";\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport AddEditSlidersModal from \"./AddEditSlidersModal\";\r\nimport {\r\n  setAddEditSlidersModalToggle,\r\n  setAddEditSlidersModalType,\r\n  setAddEditSlidersModalRowData,\r\n} from \"../../../store/actions/AddEditSlidersModalActions\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    marginTop: (state) => state.appBarHeight + 15\r\n  }\r\n}));\r\n\r\nconst AdminSliders = (props) => {\r\n  const classes = useStyles({ appBarHeight: props.appBarHeight });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const url = `${props.configData.backend_domain}${props.configData.backend_port !== '' ? ':' + props.configData.backend_port : ''}`;\r\n\r\n  const {\r\n    openContextDialog\r\n  } = React.useContext(DialogContext);\r\n\r\n  const { loading: deleteSlidersSettingsLoading, error: deleteSlidersSettingsError, data: deleteSlidersSettingsResult, makeRequest: deleteSlidersSettings } = useSwaggerRequest('/api/sliders/delete');\r\n\r\n  useEffect(() => {\r\n    if (deleteSlidersSettingsResult) {\r\n      getSlidersSettings({\r\n        method: 'GET',\r\n\r\n      });\r\n      enqueueSnackbar(\"Slide deleted successfully.\", { variant: \"success\" });\r\n\r\n    }\r\n  }, [deleteSlidersSettingsResult]);\r\n\r\n  useEffect(() => {\r\n    if (deleteSlidersSettingsError) {\r\n\r\n      enqueueSnackbar(deleteSlidersSettingsError.message, { variant: \"error\" });\r\n\r\n    }\r\n  }, [deleteSlidersSettingsError]);\r\n\r\n  const { loading: getSlidersSettingsLoading, error: getSlidersSettingsError, data: getSlidersSettingsResult, makeRequest: getSlidersSettings } = useSwaggerRequest('/api/sliders/all/false');\r\n\r\n  useEffect(() => {\r\n\r\n    getSlidersSettings({\r\n      method: 'GET',\r\n\r\n    });\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'path',\r\n        header: 'Slide',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n\r\n          return <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '1rem',\r\n            }}\r\n          >\r\n            <img  src={`${url}/images/${row.original.path}`}\r\n              alt=\"slider image\"\r\n              height={100}\r\n              loading=\"lazy\"\r\n\r\n              style={{ borderRadius: '5%' }}\r\n            />\r\n\r\n          </Box>\r\n        },\r\n      },\r\n      {\r\n        accessorKey: 'link',\r\n        header: 'Link',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n      },\r\n      {\r\n        accessorKey: 'enabled',\r\n        header: 'Enabled',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n          return <span style={{ color: row.original.enabled == 1 ? \"green\" : \"red\" }}>{`${row.original.enabled == 1 ? \"true\" :\"false\"}`}</span>\r\n        }\r\n      }\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Container\r\n      className={classes.mainContainer}\r\n      maxWidth={false}\r\n      disableGutters={true}\r\n    >\r\n      <CustomTable\r\n        exportFilename={\"Sliders\"}\r\n        addDataText={\"Add Sliders\"}\r\n        addDataAction={() => {\r\n          props.setAddEditSlidersModalType(\"Add\");\r\n          props.setAddEditSlidersModalToggle(true);\r\n        }}\r\n        muiTablePaginationProps={{\r\n          rowsPerPageOptions: _.sortBy([40, 80, 160, getSlidersSettingsResult ? getSlidersSettingsResult.length : 250]),\r\n        }}\r\n        renderRowActions={({ row, table }) => (\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n              <IconButton onClick={() => {\r\n                props.setAddEditSlidersModalRowData(row.original);\r\n                props.setAddEditSlidersModalType(\"Edit\");\r\n                props.setAddEditSlidersModalToggle(true);\r\n              }} >\r\n                <Edit />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n              <IconButton color=\"error\" onClick={() => {\r\n                openContextDialog(\"Yes\", \"No\", `Are you sure you want to delete ${row.original.path}?`, \"Confirm\", () => {\r\n                  try {\r\n                    deleteSlidersSettings(\r\n                      {\r\n                        method: 'DELETE',\r\n                        additionalUrl: `/${row.original.id}`\r\n                      }\r\n                    );\r\n\r\n                  } catch (e) {\r\n\r\n                  }\r\n                }, () => {\r\n\r\n                });\r\n              }}>\r\n                <Delete />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        )}\r\n        enableStickyHeader\r\n        columns={columns}\r\n        enableDensityToggle={false}\r\n\r\n        state={{\r\n          isLoading: getSlidersSettingsLoading,\r\n        }}\r\n        initialState={{\r\n          density: 'comfortable',\r\n          pagination: { pageSize: 40 },\r\n          isLoading: true,\r\n        }}\r\n        data={getSlidersSettingsResult ? getSlidersSettingsResult : []}\r\n      />\r\n      {props.addEditSlidersModalToggle && <AddEditSlidersModal getSlidersSettingsCallback={()=>{\r\n              getSlidersSettings({\r\n                method: 'GET',\r\n        \r\n              });\r\n      }} modalType={props.addEditSlidersModalType} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.AuthUserReducer, ...state.OtherReducer, ...state.AddEditSlidersModalReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAddEditSlidersModalToggle,\r\n  setAddEditSlidersModalType,\r\n  setAddEditSlidersModalRowData,\r\n})(AdminSliders);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminSliders\\AddEditSlidersModal.js",["1025","1026","1027","1028","1029","1030","1031","1032","1033"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n    CircularProgress,\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n    FormControlLabel,\r\n    Checkbox\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\n\r\nimport {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n} from \"../../../store/actions/CropImageModalActions\";\r\n\r\nimport {\r\n    setAddEditSlidersModalToggle,\r\n    setAddEditSlidersModalType,\r\n    setAddEditSlidersModalRowData,\r\n    setAddEditSlidersModalImagePath,\r\n    setAddEditSlidersModalImagePathForComponent,\r\n    setAddEditSlidersModalSlideEnabled,\r\n    setAddEditSlidersModalLink,\r\n    setAddEditSlidersModalIsLoading,\r\n    setAddEditSlidersModalReset\r\n} from \"../../../store/actions/AddEditSlidersModalActions\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport ValidationSelectField from \"../../otherComponents/ValidationSelectField\";\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\",\r\n    },\r\n\r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n\r\n    checkboxLabel: {\r\n\r\n    },\r\n    submitButtonContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n\r\n    },\r\n    sliderImageAddButton: {\r\n        border: \"1px dashed gray\",\r\n\r\n        padding: \"0px!important\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        width: \"100%\",\r\n    },\r\n    sliderImageAddButtonIcon: {\r\n        width: \"150px!important\",\r\n        height: \"150px!important\",\r\n        color: \"gray\"\r\n    },\r\n    sliderImageAddButtonImage: {\r\n\r\n        height: \"150px!important\",\r\n        width: \"auto\"\r\n    }\r\n}));\r\n\r\nconst AddEditSlidersModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const url = `${props.configData.backend_domain}${props.configData.backend_port !== '' ? ':' + props.configData.backend_port : ''}`;\r\n\r\n    const addPicButtonRef = useRef(null);\r\n\r\n\r\n    const linkValidationFieldRef = useRef(null);\r\n    const enabledValidationFieldRef = useRef(null);\r\n\r\n    const handleClose = () => {\r\n\r\n        props.setAddEditSlidersModalReset();\r\n    };\r\n\r\n    useEffect( () => {\r\n     \r\n        if (props.modalType === \"Edit\") {\r\n          \r\n            if (props.addEditSlidersModalRowData) {\r\n                fillDataForEdit()\r\n            }\r\n        }\r\n    }, []);\r\n\r\nconst fillDataForEdit = async()=>{\r\n  \r\n    const response = await fetch(`${url}/api/image/${props.addEditSlidersModalRowData.path}`);\r\n    const arrayBuffer = await response.arrayBuffer();\r\n\r\n\r\n    const blob = new Blob([arrayBuffer]);\r\n\r\n\r\n    const simulatedFile = new File([blob], props.addEditSlidersModalRowData.path, {\r\n        lastModified: new Date().getTime(),\r\n        type: 'image/png',\r\n    });\r\n  \r\n\r\n    props.setAddEditSlidersModalImagePathForComponent(URL.createObjectURL(blob));\r\n    props.setAddEditSlidersModalImagePath(simulatedFile);\r\n    props.setAddEditSlidersModalLink(props.addEditSlidersModalRowData.link);\r\n    props.setAddEditSlidersModalSlideEnabled(props.addEditSlidersModalRowData.enabled);\r\n}\r\n    const { loading: editSlidersSettingsLoading, error: editSlidersSettingsError, data: editSlidersSettingsResult, makeRequest: editSlidersSettings } = useSwaggerRequest(`/api/sliders/edit/${props.addEditSlidersModalRowData?.id}`, false, 'multipart/form-data');\r\n    useEffect(() => {\r\n        if (editSlidersSettingsError) {\r\n\r\n            enqueueSnackbar(editSlidersSettingsError.message, { variant: \"error\" });\r\n\r\n        }\r\n    }, [editSlidersSettingsError]);\r\n\r\n    useEffect(() => {\r\n        if (editSlidersSettingsResult) {\r\n            enqueueSnackbar(\"Slide updated successfully.\", { variant: \"success\" });\r\n            handleClose();\r\n            props.getSlidersSettingsCallback();\r\n\r\n        }\r\n    }, [editSlidersSettingsResult]);\r\n\r\n    const { loading: addSlidersSettingsLoading, error: addSlidersSettingsError, data: addSlidersSettingsResult, makeRequest: addSlidersSettings } = useSwaggerRequest(`/api/sliders/add`, false, 'multipart/form-data');\r\n\r\n\r\n    useEffect(() => {\r\n        if (addSlidersSettingsError) {\r\n\r\n            enqueueSnackbar(addSlidersSettingsError.message, { variant: \"error\" });\r\n\r\n        }\r\n    }, [addSlidersSettingsError]);\r\n\r\n    useEffect(() => {\r\n        if (addSlidersSettingsResult) {\r\n            enqueueSnackbar(\"Slide added successfully.\", { variant: \"success\" });\r\n            handleClose();\r\n            props.getSlidersSettingsCallback();\r\n\r\n        }\r\n    }, [addSlidersSettingsResult]);\r\n\r\n    const isLoading = editSlidersSettingsLoading || addSlidersSettingsLoading;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoading) return;\r\n\r\n        let isValid = true;\r\n\r\n        if (props.addEditSlidersModalImagePath.length == 0) {\r\n            isValid = false;\r\n            alert(\"Image is required\");\r\n        }\r\n        if (!linkValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!enabledValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (isValid) {\r\n            try {\r\n                if (props.modalType === \"Edit\") {\r\n                  \r\n                    const formData = new FormData();\r\n                    formData.append('ImageFile', props.addEditSlidersModalImagePath);\r\n                    formData.append('SliderSettings.ID', props.addEditSlidersModalRowData.id);\r\n                    formData.append('SliderSettings.Link', props.addEditSlidersModalLink ?? \"\");\r\n                    formData.append('SliderSettings.Path', props.addEditSlidersModalImagePath.name);\r\n                    formData.append('SliderSettings.Enabled', props.addEditSlidersModalSlideEnabled);\r\n                    await editSlidersSettings({\r\n                        method: 'PUT',\r\n                        requestData: formData,\r\n                    });\r\n                } else {\r\n\r\n                    const formData = new FormData();\r\n                   \r\n                    formData.append('ImageFile', props.addEditSlidersModalImagePath);\r\n                    formData.append('SliderSettings.Link', props.addEditSlidersModalLink ?? \"\");\r\n                    formData.append('SliderSettings.Path', props.addEditSlidersModalImagePath.name);\r\n                    formData.append('SliderSettings.Enabled', props.addEditSlidersModalSlideEnabled);\r\n\r\n\r\n                    await addSlidersSettings({\r\n                        method: 'POST',\r\n                        requestData: formData,\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                // Handle any errors here\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditSlidersModalToggle}\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {`${props.modalType === \"Edit\" ? \"Edit\" : \"Add\"} Sliders Settings`}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={12}>\r\n                            <input\r\n                                onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                        let reader = new FileReader();\r\n                                        reader.readAsDataURL(event.target.files[0]);\r\n                                        reader.onload = function () {\r\n                                            //props.setCropImageModalImage(reader.result);\r\n                                            //props.setCropImageModalToggle(true);\r\n                                            props.setAddEditSlidersModalImagePathForComponent(reader.result);\r\n                                            props.setAddEditSlidersModalImagePath(event.target.files[0]);\r\n                                        };\r\n                                        reader.onerror = function (error) {\r\n                                            alert(\"Error: \", error);\r\n                                        };\r\n                                    }\r\n                                }}\r\n                                ref={addPicButtonRef}\r\n                                accept=\"image/*\"\r\n                                disabled={isLoading}\r\n\r\n                                style={{ display: \"none\" }}\r\n                                id=\"raised-button-file\"\r\n                                name=\"raised-button-file\"\r\n                                multiple={false}\r\n                                type=\"file\"\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    addPicButtonRef.current.click();\r\n                                }}\r\n                                className={classes.sliderImageAddButton}\r\n                            >\r\n                                {\r\n                                    props.addEditSlidersModalImagePathForComponent ?\r\n                                        <img\r\n                                            className={classes.sliderImageAddButtonImage}\r\n                                            alt=\"Slider Avatar\"\r\n                                            width={40}\r\n                                            src={props.addEditSlidersModalImagePathForComponent}\r\n                                        /> :\r\n                                        <AddPhotoAlternateIcon className={classes.sliderImageAddButtonIcon} />\r\n                                }\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationSelectField\r\n                                className={classes.textField}\r\n                                value={\r\n                                    props.addEditSlidersModalSlideEnabled\r\n                                }\r\n                                ref={enabledValidationFieldRef}\r\n                                values={[\r\n                                    [1, \"ENABLED\"],\r\n                                    [2, \"DISABLED\"],\r\n\r\n                                ]}\r\n                                disabled={isLoading}\r\n                                onChange={(e) => {\r\n\r\n                                    props.setAddEditSlidersModalSlideEnabled(e.target.value);\r\n                                }}\r\n                                label=\"Select Status *\"\r\n                                required\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={linkValidationFieldRef}\r\n                                value={props.addEditSlidersModalLink}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditSlidersModalLink(e.target.value)\r\n                                }\r\n                                label=\"Link\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        {isLoading && <CircularProgress size={25} />}\r\n                        {!isLoading && props.modalType === \"Edit\" ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditSlidersModalReducer, ...state.AuthUserReducer, ...state.OtherReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n    setAddEditSlidersModalToggle,\r\n    setAddEditSlidersModalType,\r\n    setAddEditSlidersModalRowData,\r\n    setAddEditSlidersModalImagePath,\r\n    setAddEditSlidersModalImagePathForComponent,\r\n    setAddEditSlidersModalSlideEnabled,\r\n    setAddEditSlidersModalLink,\r\n    setAddEditSlidersModalIsLoading,\r\n    setAddEditSlidersModalReset\r\n})(AddEditSlidersModal);\r\n","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditProductsModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AddEditProductsModalActions.js",[],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\index.js",["1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047"],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\AddEditProductsModal.js",["1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n    CircularProgress,\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n    Box,\r\n    FormControlLabel,\r\n    Checkbox,\r\n    TextField\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\n\r\nimport {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n} from \"../../../store/actions/CropImageModalActions\";\r\n\r\nimport {\r\n    setAddEditProductsModalToggle,\r\n    setAddEditProductsModalType,\r\n    setAddEditProductsModalRowData,\r\n    setAddEditProductsModalImagePath,\r\n    setAddEditProductsModalImagePathForComponent,\r\n    setAddEditProductsModalDetailsImagePath,\r\n    setAddEditProductsModalDetailsImagePathForComponent,\r\n    setAddEditProductsModalProductCategoryId,\r\n    setAddEditProductsModalProductTitle,\r\n    setAddEditProductsModalProductDetails,\r\n    setAddEditProductsModalProductPrice,\r\n    setAddEditProductsModalProductSalePrice,\r\n    setAddEditProductsModalProductVariationTitle,\r\n    setAddEditProductsModalProductVariationData,\r\n    setAddEditProductsModalProductOtherSelectionsSerializedData,\r\n    setAddEditProductsModalProductStatusEnabled,\r\n    setAddEditProductsModalProductDealStatus,\r\n    setAddEditProductsModalIsLoading,\r\n    setAddEditProductsModalReset\r\n} from \"../../../store/actions/AddEditProductsModalActions\";\r\nimport {\r\n\r\n    setAddEditProductsVariationTitleModalToggle,\r\n    setAddEditProductsVariationTitleModalId,\r\n    setAddEditProductsVariationModalToggle,\r\n    setAddEditProductsVariationModalId,\r\n    setAddEditProductsVariationTitleModalTitleText,\r\n    setAddEditProductsVariationModalReset,\r\n} from \"../../../store/actions/AddEditProductsVariationModalActions\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport ValidationSelectField from \"../../otherComponents/ValidationSelectField\";\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport EditNoteIcon from '@mui/icons-material/EditNote';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport AddVariationDataModal from \"./AddVariationDataModal\";\r\nimport AddVariationTitleModal from \"./AddVariationTitleModal\";\r\nimport DeleteSweepIcon from '@mui/icons-material/DeleteSweep';\r\nimport _ from \"lodash\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\",\r\n    },\r\n\r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n\r\n    checkboxLabel: {\r\n\r\n    },\r\n    submitButtonContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n\r\n    },\r\n    productImageAddButton: {\r\n        border: \"1px dashed gray\",\r\n\r\n        padding: \"0px!important\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        width: \"100%\",\r\n    },\r\n    productImageAddButtonIcon: {\r\n        width: \"150px!important\",\r\n        height: \"150px!important\",\r\n        color: \"gray\"\r\n    },\r\n    productImageAddButtonImage: {\r\n\r\n        height: \"150px!important\",\r\n        width: \"auto\"\r\n    },\r\n    productVariationContainer: {\r\n        display: \"flex!important\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        background: \"#DBDBDB\",\r\n        padding: \"10px 0px\",\r\n    },\r\n    productOtherSelectionContainer: {\r\n        display: \"flex!important\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        background: \"#DBDBDB\",\r\n        padding: \"10px 0px\",\r\n    },\r\n    productOtherSelectionCheckBoxContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\",\r\n    },\r\n    productVariationDeleteButtonContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\",\r\n    },\r\n    productVariationImage: {\r\n        height: 60\r\n    },\r\n    productVariationDeleteButton: {\r\n        marginRight: \"10px!important\"\r\n    },\r\n    otherSelectionTitleTextField: {\r\n        marginTop: \"30px!important\",\r\n        marginBottom: \"30px!important\"\r\n    }\r\n}));\r\n\r\nconst AddEditProductsModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const dialogContentRef = useRef(null);\r\n\r\n    const url = `${props.configData.backend_domain}${props.configData.backend_port !== '' ? ':' + props.configData.backend_port : ''}`;\r\n\r\n    const addPicButtonRef = useRef(null);\r\n    const addDetialsPicButtonRef = useRef(null);\r\n\r\n    const productTitleValidationFieldRef = useRef(null);\r\n    const productDetailsValidationFieldRef = useRef(null);\r\n    const productPriceValidationFieldRef = useRef(null);\r\n    const productSalePriceValidationFieldRef = useRef(null);\r\n    const categoryValidationFieldRef = useRef(null);\r\n    const enabledValidationFieldRef = useRef(null);\r\n\r\n    const { loading: getCategoriesLoading, error: getCategoriesError, data: getCategoriesResult, makeRequest: getCategories } = useSwaggerRequest('/api/categories/all');\r\n\r\n\r\n    const handleClose = () => {\r\n\r\n        props.setAddEditProductsModalReset();\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.modalType === \"Edit\") {\r\n\r\n            if (props.addEditProductsModalRowData) {\r\n                fillDataForEdit()\r\n            }\r\n        }\r\n        getCategories({\r\n            method: 'GET',\r\n\r\n        });\r\n        getAddons({\r\n            method: 'GET',\r\n\r\n        });\r\n    }, []);\r\n\r\n    const fillDataForEdit = async () => {\r\n\r\n        const productImageResponse = await fetch(`${url}/api/image/${props.addEditProductsModalRowData.productImagePath}`);\r\n        const productImageArrayBuffer = await productImageResponse.arrayBuffer();\r\n\r\n\r\n        const productImageblob = new Blob([productImageArrayBuffer]);\r\n\r\n\r\n        const productSimulatedFile = new File([productImageblob], props.addEditProductsModalRowData.productImagePath, {\r\n            lastModified: new Date().getTime(),\r\n            type: 'image/png',\r\n        });\r\n\r\n\r\n        const productDetailImageResponse = await fetch(`${url}/api/image/${props.addEditProductsModalRowData.productDetailsImagePath}`);\r\n        const productDetailImageArrayBuffer = await productDetailImageResponse.arrayBuffer();\r\n\r\n\r\n        const productDetailImageblob = new Blob([productDetailImageArrayBuffer]);\r\n\r\n\r\n        const productDetailSimulatedFile = new File([productDetailImageblob], props.addEditProductsModalRowData.productDetailsImagePath, {\r\n            lastModified: new Date().getTime(),\r\n            type: 'image/png',\r\n        });\r\n\r\n\r\n        props.setAddEditProductsModalImagePathForComponent(URL.createObjectURL(productImageblob));\r\n        props.setAddEditProductsModalImagePath(productSimulatedFile);\r\n        props.setAddEditProductsModalDetailsImagePathForComponent(URL.createObjectURL(productDetailImageblob));\r\n        props.setAddEditProductsModalDetailsImagePath(productDetailSimulatedFile);\r\n        props.setAddEditProductsModalProductTitle(props.addEditProductsModalRowData.productTitle);\r\n        props.setAddEditProductsModalProductDetails(props.addEditProductsModalRowData.productDetails);\r\n        props.setAddEditProductsModalProductPrice(props.addEditProductsModalRowData.productPrice);\r\n        props.setAddEditProductsModalProductSalePrice(props.addEditProductsModalRowData.productSalePrice);\r\n        props.setAddEditProductsModalProductStatusEnabled(props.addEditProductsModalRowData.enabled);\r\n\r\n        props.setAddEditProductsModalProductVariationTitle(props.addEditProductsModalRowData.variationSelectionTitle);\r\n        props.setAddEditProductsModalProductVariationData(props.addEditProductsModalRowData.variationSelectionItemsSerialized ? JSON.parse(props.addEditProductsModalRowData.variationSelectionItemsSerialized) : null);\r\n        props.setAddEditProductsModalProductOtherSelectionsSerializedData(props.addEditProductsModalRowData.otherSelectionSerialized ? JSON.parse(props.addEditProductsModalRowData.otherSelectionSerialized) : null);\r\n\r\n        props.setAddEditProductsModalProductDealStatus(props.addEditProductsModalRowData.productType);\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.modalType === \"Edit\") {\r\n\r\n            if (props.addEditProductsModalRowData) {\r\n                props.setAddEditProductsModalProductCategoryId(props.addEditProductsModalRowData.categoryID);\r\n            }\r\n        }\r\n    }, [getCategoriesResult]);\r\n    const { loading: editProductsLoading, error: editProductsError, data: editProductsResult, makeRequest: editProducts } = useSwaggerRequest(`/api/products/edit/${props.addEditProductsModalRowData?.id}`, false, 'multipart/form-data');\r\n    useEffect(() => {\r\n        if (editProductsError) {\r\n\r\n            enqueueSnackbar(editProductsError.message, { variant: \"error\" });\r\n\r\n        }\r\n    }, [editProductsError]);\r\n\r\n    useEffect(() => {\r\n        if (editProductsResult) {\r\n            enqueueSnackbar(\"Product updated successfully.\", { variant: \"success\" });\r\n            handleClose();\r\n            props.getProductsCallback();\r\n\r\n        }\r\n    }, [editProductsResult]);\r\n\r\n    const { loading: addProductsLoading, error: addProductsError, data: addProductsResult, makeRequest: addProducts } = useSwaggerRequest(`/api/products/add`, false, 'multipart/form-data');\r\n\r\n\r\n    useEffect(() => {\r\n        if (addProductsError) {\r\n\r\n            enqueueSnackbar(addProductsError.message, { variant: \"error\" });\r\n\r\n        }\r\n    }, [addProductsError]);\r\n\r\n    useEffect(() => {\r\n        if (addProductsResult) {\r\n            enqueueSnackbar(\"Product added successfully.\", { variant: \"success\" });\r\n            handleClose();\r\n            props.getProductsCallback();\r\n\r\n        }\r\n    }, [addProductsResult]);\r\n\r\n    const isLoading = editProductsLoading || addProductsLoading;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoading) return;\r\n\r\n        let isValid = true;\r\n\r\n        if (isNaN(props.addEditProductsModalProductPrice) || parseFloat(props.addEditProductsModalProductPrice) <= 0 ) {\r\n                                     \r\n            productPriceValidationFieldRef.current.setEmpty();\r\n            props.setAddEditProductsModalProductPrice(\"\");\r\n\r\n            await new Promise(resolve => setTimeout(resolve, 300));\r\n        }\r\n\r\n        if(parseFloat(props.addEditProductsModalProductSalePrice) >=  parseFloat(props.addEditProductsModalProductPrice)){\r\n            isValid = false;\r\n            alert(\"Sale price must be less than price.\")\r\n          }\r\n          \r\n        if (props.addEditProductsModalImagePath.length == 0) {\r\n            isValid = false;\r\n            alert(\"Product image is required\");\r\n        }\r\n        if (props.addEditProductsModalDetailsImagePath.length == 0) {\r\n            isValid = false;\r\n            alert(\"Product detail image is required\");\r\n        }\r\n\r\n\r\n        if (!productTitleValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!productDetailsValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!productPriceValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!productSalePriceValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!categoryValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!enabledValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        \r\n        if (isValid) {\r\n            try {\r\n\r\n                if (props.modalType === \"Edit\") {\r\n\r\n                    const formData = new FormData();\r\n                    formData.append('Products.ID', props.addEditProductsModalRowData.id);\r\n                    formData.append('ProductImagePath', props.addEditProductsModalImagePath);\r\n                    formData.append('ProductDetailsImagePath', props.addEditProductsModalDetailsImagePath);\r\n\r\n                    formData.append('Products.ProductTitle', props.addEditProductsModalProductTitle);\r\n                    formData.append('Products.ProductImagePath', props.addEditProductsModalImagePath.name);\r\n                    formData.append('Products.ProductDetailsImagePath', props.addEditProductsModalDetailsImagePath.name);\r\n                    formData.append('Products.ProductDetails', props.addEditProductsModalProductDetails);\r\n\r\n                    let price = isNaN(props.addEditProductsModalProductPrice) || props.addEditProductsModalProductPrice == 0\r\n                        ? \"\"\r\n                        : props.addEditProductsModalProductPrice;\r\n                    price = price ?? \"\";\r\n\r\n                    let salePrice = isNaN(props.addEditProductsModalProductSalePrice) || props.addEditProductsModalProductSalePrice == 0\r\n                        ? \"\"\r\n                        : props.addEditProductsModalProductSalePrice;\r\n                    salePrice = salePrice ?? \"\";\r\n\r\n                    formData.append('Products.ProductPrice', price);\r\n                    formData.append('Products.ProductSalePrice', salePrice);\r\n\r\n                    formData.append('Products.CategoryID', props.addEditProductsModalProductCategoryId);\r\n                    formData.append('Products.Enabled', props.addEditProductsModalProductStatusEnabled);\r\n\r\n                    formData.append('Products.ProductType', props.addEditProductsModalProductDealStatus);\r\n                    formData.append('Products.variationSelectionTitle', props.addEditProductsModalProductVariationTitle ?  props.addEditProductsModalProductVariationTitle : \"Variation\");\r\n                    formData.append('Products.variationSelectionItemsSerialized', props.addEditProductsModalProductVariationData && props.addEditProductsModalProductVariationData.length > 0 ? JSON.stringify(props.addEditProductsModalProductVariationData) : \"\");\r\n                    formData.append('Products.OtherSelectionSerialized', props.addEditProductsModalProductOtherSelectionsSerializedData && props.addEditProductsModalProductOtherSelectionsSerializedData.length > 0 ? JSON.stringify(props.addEditProductsModalProductOtherSelectionsSerializedData) : \"\");\r\n\r\n\r\n\r\n                    await editProducts({\r\n                        method: 'PUT',\r\n                        requestData: formData,\r\n                    });\r\n                } else {\r\n\r\n                    const formData = new FormData();\r\n                    formData.append('ProductImagePath', props.addEditProductsModalImagePath);\r\n                    formData.append('ProductDetailsImagePath', props.addEditProductsModalDetailsImagePath);\r\n                    formData.append('Products.ProductTitle', props.addEditProductsModalProductTitle);\r\n                    formData.append('Products.ProductImagePath', props.addEditProductsModalImagePath.name);\r\n                    formData.append('Products.ProductDetailsImagePath', props.addEditProductsModalDetailsImagePath.name);\r\n                    formData.append('Products.ProductDetails', props.addEditProductsModalProductDetails);\r\n\r\n                    let price = isNaN(props.addEditProductsModalProductPrice) || props.addEditProductsModalProductPrice == 0\r\n                        ? \"\"\r\n                        : props.addEditProductsModalProductPrice;\r\n                    price = price ?? \"\";\r\n\r\n                    let salePrice = isNaN(props.addEditProductsModalProductSalePrice) || props.addEditProductsModalProductSalePrice == 0\r\n                        ? \"\"\r\n                        : props.addEditProductsModalProductSalePrice;\r\n                    salePrice = salePrice ?? \"\";\r\n\r\n                    formData.append('Products.ProductPrice', price);\r\n                    formData.append('Products.ProductSalePrice', salePrice);\r\n\r\n\r\n                    formData.append('Products.CategoryID', props.addEditProductsModalProductCategoryId);\r\n                    formData.append('Products.Enabled', props.addEditProductsModalProductStatusEnabled);\r\n\r\n                    formData.append('Products.ProductType', props.addEditProductsModalProductDealStatus);\r\n                    formData.append('Products.variationSelectionTitle', props.addEditProductsModalProductVariationTitle ?  props.addEditProductsModalProductVariationTitle : \"Variation\");\r\n                    formData.append('Products.variationSelectionItemsSerialized', props.addEditProductsModalProductVariationData && props.addEditProductsModalProductVariationData.length > 0 ? JSON.stringify(props.addEditProductsModalProductVariationData) : \"\");\r\n                    formData.append('Products.OtherSelectionSerialized', props.addEditProductsModalProductOtherSelectionsSerializedData && props.addEditProductsModalProductOtherSelectionsSerializedData.length > 0 ? JSON.stringify(props.addEditProductsModalProductOtherSelectionsSerializedData) : \"\");\r\n                    await addProducts({\r\n                        method: 'POST',\r\n                        requestData: formData,\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                // Handle any errors here\r\n            }\r\n        }\r\n    };\r\n    const { loading: getAddonsLoading, error: getAddonsError, data: getAddonsResult, makeRequest: getAddons } = useSwaggerRequest('/api/addons/all');\r\n    return (\r\n        <Dialog\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditProductsModalToggle}\r\n            onClose={handleClose}\r\n\r\n            fullScreen\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {`${props.modalType === \"Edit\" ? \"Edit\" : \"Add\"} Product`}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent ref={dialogContentRef} dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography>Product Image</Typography>\r\n                            <input\r\n                                onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                        let reader = new FileReader();\r\n                                        reader.readAsDataURL(event.target.files[0]);\r\n                                        reader.onload = function () {\r\n                                            //props.setCropImageModalImage(reader.result);\r\n                                            //props.setCropImageModalToggle(true);\r\n                                            props.setAddEditProductsModalImagePathForComponent(reader.result);\r\n                                            props.setAddEditProductsModalImagePath(event.target.files[0]);\r\n                                        };\r\n                                        reader.onerror = function (error) {\r\n                                            alert(\"Error: \", error);\r\n                                        };\r\n                                    }\r\n                                }}\r\n                                ref={addPicButtonRef}\r\n                                accept=\"image/*\"\r\n                                disabled={isLoading}\r\n\r\n                                style={{ display: \"none\" }}\r\n                                id=\"raised-button-file\"\r\n                                name=\"raised-button-file\"\r\n                                multiple={false}\r\n                                type=\"file\"\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    addPicButtonRef.current.click();\r\n                                }}\r\n                                className={classes.productImageAddButton}\r\n                            >\r\n                                {\r\n                                    props.addEditProductsModalImagePathForComponent ?\r\n                                        <img\r\n                                            className={classes.productImageAddButtonImage}\r\n                                            alt=\"Product Avatar\"\r\n                                            width={40}\r\n                                            src={props.addEditProductsModalImagePathForComponent}\r\n                                        /> :\r\n                                        <AddPhotoAlternateIcon className={classes.productImageAddButtonIcon} />\r\n                                }\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <Typography>Product Detail Image</Typography>\r\n                            <input\r\n                                onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                        let reader = new FileReader();\r\n                                        reader.readAsDataURL(event.target.files[0]);\r\n                                        reader.onload = function () {\r\n                                            //props.setCropImageModalImage(reader.result);\r\n                                            //props.setCropImageModalToggle(true);\r\n                                            props.setAddEditProductsModalDetailsImagePathForComponent(reader.result);\r\n                                            props.setAddEditProductsModalDetailsImagePath(event.target.files[0]);\r\n                                        };\r\n                                        reader.onerror = function (error) {\r\n                                            alert(\"Error: \", error);\r\n                                        };\r\n                                    }\r\n                                }}\r\n                                ref={addDetialsPicButtonRef}\r\n                                accept=\"image/*\"\r\n                                disabled={isLoading}\r\n\r\n                                style={{ display: \"none\" }}\r\n                                id=\"raised-button-file\"\r\n                                name=\"raised-button-file\"\r\n                                multiple={false}\r\n                                type=\"file\"\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    addDetialsPicButtonRef.current.click();\r\n                                }}\r\n                                className={classes.productImageAddButton}\r\n                            >\r\n                                {\r\n                                    props.addEditProductsModalDetailsImagePathForComponent ?\r\n                                        <img\r\n                                            className={classes.productImageAddButtonImage}\r\n                                            alt=\"Product Detail Avatar\"\r\n                                            width={40}\r\n                                            src={props.addEditProductsModalDetailsImagePathForComponent}\r\n                                        /> :\r\n                                        <AddPhotoAlternateIcon className={classes.productImageAddButtonIcon} />\r\n                                }\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n\r\n                            <ValidationSelectField\r\n                                className={classes.textField}\r\n                                value={\r\n                                    props.addEditProductsModalProductCategoryId\r\n                                }\r\n                                ref={categoryValidationFieldRef}\r\n                                values={getCategoriesResult && getCategoriesResult.map(category => [category.id, category.name])}\r\n                                disabled={isLoading || getCategoriesLoading}\r\n                                onChange={(e) => {\r\n\r\n                                    props.setAddEditProductsModalProductCategoryId(e.target.value);\r\n                                }}\r\n                                label=\"Select Category *\"\r\n                                required\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                required\r\n                                ref={productTitleValidationFieldRef}\r\n                                value={props.addEditProductsModalProductTitle}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditProductsModalProductTitle(e.target.value)\r\n                                }\r\n                                label=\"Product Title\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={productDetailsValidationFieldRef}\r\n                                value={props.addEditProductsModalProductDetails}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditProductsModalProductDetails(e.target.value)\r\n                                }\r\n                                required\r\n                                label=\"Product Details\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"number\"\r\n                                step=\".00\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n\r\n                                }}\r\n             \r\n                                ref={productPriceValidationFieldRef}\r\n                                value={props.addEditProductsModalProductPrice}\r\n                                disabled={isLoading}\r\n                              \r\n                                onInput={(e) => {\r\n                                    var value = parseFloat(e.target.value);\r\n\r\n                                    if (value < 0) value = \"0\";\r\n\r\n                                    props.setAddEditProductsModalProductPrice(value)\r\n\r\n                                }\r\n                                }\r\n                                \r\n                                required\r\n                                label=\"Product Price\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"number\"\r\n                                step=\".00\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n\r\n                                }}\r\n                               \r\n                               \r\n                                ref={productSalePriceValidationFieldRef}\r\n                                value={props.addEditProductsModalProductSalePrice}\r\n                                disabled={isLoading}\r\n                                onInput={(e) => {\r\n                                    var value = parseFloat(e.target.value);\r\n\r\n                                    if (value < 0) value = \"0\";\r\n\r\n                                    props.setAddEditProductsModalProductSalePrice(value)\r\n\r\n                                }\r\n                                }\r\n\r\n                                label=\"Product Sale Price\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationSelectField\r\n                                className={classes.textField}\r\n                                value={\r\n                                    props.addEditProductsModalProductStatusEnabled\r\n                                }\r\n                                ref={enabledValidationFieldRef}\r\n                                values={[\r\n                                    [1, \"ENABLED\"],\r\n                                    [2, \"DISABLED\"],\r\n\r\n                                ]}\r\n                                disabled={isLoading}\r\n                                onChange={(e) => {\r\n\r\n                                    props.setAddEditProductsModalProductStatusEnabled(e.target.value);\r\n                                }}\r\n                                label=\"Select Status *\"\r\n                                required\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12}>\r\n                            <ValidationSelectField\r\n                                className={classes.textField}\r\n                                value={\r\n                                    props.addEditProductsModalProductDealStatus\r\n                                }\r\n                                ref={enabledValidationFieldRef}\r\n                                values={[\r\n                                    [2, \"DEAL\"],\r\n                                    [1, \"SIMPLE ITEM\"],\r\n\r\n                                ]}\r\n                                disabled={isLoading}\r\n                                onChange={(e) => {\r\n\r\n                                    props.setAddEditProductsModalProductDealStatus(e.target.value);\r\n                                }}\r\n                                label=\"Select Product Type *\"\r\n                                required\r\n                            />\r\n\r\n                        </Grid>\r\n                        <Grid item xl={12}>\r\n                            <Typography display={\"inline\"} fontSize={17} fontWeight={700}>{props.addEditProductsModalProductVariationTitle && props.addEditProductsModalProductVariationTitle.length > 0 ? props.addEditProductsModalProductVariationTitle : \"Variation\"}</Typography>\r\n                            <Button onClick={() => {\r\n                                props.setAddEditProductsVariationTitleModalToggle(true);\r\n                                props.setAddEditProductsVariationTitleModalId(\"variation1\");\r\n                                props.setAddEditProductsVariationTitleModalTitleText(props.addEditProductsModalProductVariationTitle && props.addEditProductsModalProductVariationTitle.length > 0 ? props.addEditProductsModalProductVariationTitle : \"Variation\");\r\n                            }}><EditNoteIcon />Edit</Button>\r\n                            <Button onClick={() => {\r\n                                props.setAddEditProductsVariationModalToggle(true);\r\n                                props.setAddEditProductsVariationModalId(\"variation1\");\r\n                            }}><AddIcon />Add</Button>\r\n                        </Grid>\r\n\r\n                        <AddVariationDataModal onSave={(image, name, id,price,salePrice) => {\r\n                            if (id == \"variation1\") {\r\n                                let data = _.cloneDeep(props.addEditProductsModalProductVariationData ?? []);\r\n                                if (_.find(data, itm => itm.name == name)) {\r\n                                    alert(\"Item already exist.\")\r\n                                } else {\r\n                                    data.push({ image: image, name: name,price:price,salePrice: salePrice});\r\n                                    props.setAddEditProductsModalProductVariationData(data);\r\n                                    props.setAddEditProductsVariationModalReset();\r\n                                }\r\n                            }\r\n\r\n                        }} />\r\n                        <AddVariationTitleModal onSave={(text, id) => {\r\n\r\n                            if (id == \"selection1\") {\r\n                                props.setAddEditProductsModalProductVariationTitle(text);\r\n                            }\r\n                            props.setAddEditProductsVariationModalReset();\r\n                        }} />\r\n                    </Grid>\r\n                    <Grid>\r\n                        {\r\n                            props.addEditProductsModalProductVariationData ?\r\n                                props.addEditProductsModalProductVariationData.map((item, index) => {\r\n                                    const { name, image,price,salePrice } = item;\r\n                                    return (\r\n                                        <Container maxWidth={false} className={classes.productVariationContainer}>\r\n                                            <div className={classes.productVariationDeleteButtonContainer}>\r\n                                                <Button onClick={() => {\r\n                                                    if (index >= 0 && index < props.addEditProductsModalProductVariationData.length) {\r\n                                                        let data = _.cloneDeep(props.addEditProductsModalProductVariationData);\r\n                                                        data.splice(index, 1);\r\n                                                        props.setAddEditProductsModalProductVariationData(data);\r\n                                                    }\r\n                                                }} className={classes.productVariationDeleteButton}><DeleteSweepIcon /></Button>\r\n                                                <Typography>{name}</Typography>\r\n                                            </div>\r\n                                           \r\n                                            <Box\r\n                                                        sx={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            gap: '1rem',\r\n                                                        }}\r\n                                                    >\r\n                                                        {image ? (\r\n                                                            <img\r\n                                                                src={image}\r\n                                                                alt=\"variation image\"\r\n                                                                height={70}\r\n                                                                loading=\"lazy\"\r\n                                                                style={{ borderRadius: '5%' }}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            \"\"\r\n                                                        )}\r\n                                                    </Box>\r\n                                                    <div>\r\n                                                        <span\r\n                                                            style={\r\n                                                               salePrice && salePrice !== \"\"\r\n                                                                    ? { color: \"red\", textDecoration: \"line-through\", marginRight: 20 }\r\n                                                                    : parseFloat(price) === 0\r\n                                                                        ? { color: \"green\" }\r\n                                                                        : null\r\n                                                            }\r\n                                                        >\r\n                                                            {parseFloat(price) === 0 ? \"Free\" : `$${price}`}\r\n                                                        </span>\r\n                                                        {salePrice && salePrice !== \"\" && (\r\n                                                            <span style={{ color: \"green\" }}>{`$${salePrice}`}</span>\r\n                                                        )}\r\n                                                    </div>\r\n                                        </Container>\r\n                                    )\r\n                                }) :\r\n                                <Typography>No items added.</Typography>\r\n                        }\r\n                        <hr />\r\n                        <br />\r\n                    </Grid>\r\n                    <>\r\n                        <Button variant=\"outlined\"\r\n                            onClick={() => {\r\n                                var data =\r\n                                    props.addEditProductsModalProductOtherSelectionsSerializedData &&\r\n                                        props.addEditProductsModalProductOtherSelectionsSerializedData.length > 0\r\n                                        ? _.cloneDeep(props.addEditProductsModalProductOtherSelectionsSerializedData)\r\n                                        : [];\r\n                                data.push({ title: \"other selection\" + (data.length + 1), data: [] });\r\n                                props.setAddEditProductsModalProductOtherSelectionsSerializedData(data);\r\n\r\n                                setTimeout(() => {\r\n                                    if (dialogContentRef.current) {\r\n                                        dialogContentRef.current.scrollTop = dialogContentRef.current.scrollHeight;\r\n                                    }\r\n                                }, 200);\r\n\r\n\r\n                            }}\r\n                        >\r\n                            Add Other Selection\r\n                        </Button>\r\n                        {props.addEditProductsModalProductOtherSelectionsSerializedData &&\r\n                            props.addEditProductsModalProductOtherSelectionsSerializedData.map(\r\n                                (otherSelectionData, index) => (\r\n                                    <div key={index}>\r\n                                        <hr />\r\n                                        <div style={{ display: \"flex\" }}>\r\n                                            <TextField className={classes.otherSelectionTitleTextField} value={otherSelectionData.title} onInput={(e) => {\r\n                                                var dataAll = _.cloneDeep(props.addEditProductsModalProductOtherSelectionsSerializedData);\r\n                                                dataAll[index].title = e.target.value;\r\n                                                props.setAddEditProductsModalProductOtherSelectionsSerializedData(dataAll);\r\n                                            }}></TextField>\r\n                                            <Button onClick={() => {\r\n                                                var dataAll = _.cloneDeep(props.addEditProductsModalProductOtherSelectionsSerializedData);\r\n                                                dataAll.splice(index, 1);\r\n                                                props.setAddEditProductsModalProductOtherSelectionsSerializedData(dataAll);\r\n                                            }}><DeleteSweepIcon /></Button>\r\n                                        </div>\r\n                                        {getAddonsResult &&\r\n                                            getAddonsResult.length > 0 &&\r\n                                            getAddonsResult.map((data, dataIndex) => (\r\n                                                <Container key={dataIndex} maxWidth={false} className={classes.productOtherSelectionContainer}>\r\n                                                    <div maxWidth={false} className={classes.productOtherSelectionCheckBoxContainer}>\r\n                                                        <Checkbox\r\n                                                            checked={props.addEditProductsModalProductOtherSelectionsSerializedData[index].data.includes(\"id-\" + data.id)}\r\n                                                            onChange={(e) => {\r\n                                                                var dataAll = _.cloneDeep(props.addEditProductsModalProductOtherSelectionsSerializedData);\r\n                                                                const itemId = \"id-\" + data.id;\r\n\r\n                                                                if (e.target.checked) {\r\n                                                                    const isItemAdded = dataAll[index].data.includes(itemId);\r\n\r\n                                                                    if (isItemAdded) {\r\n                                                                        // Item is already added, remove it\r\n\r\n                                                                    } else {\r\n\r\n                                                                        dataAll[index].data.push(itemId);\r\n                                                                        props.setAddEditProductsModalProductOtherSelectionsSerializedData(dataAll);\r\n                                                                    }\r\n                                                                } else {\r\n                                                                    dataAll[index].data = dataAll[index].data.filter((id) => id !== itemId);\r\n\r\n                                                                    props.setAddEditProductsModalProductOtherSelectionsSerializedData(dataAll);\r\n                                                                }\r\n                                                            }}\r\n                                                        />\r\n                                                        <Typography>{data.productTitle}</Typography>\r\n                                                    </div>\r\n                                                    <Box\r\n                                                        sx={{\r\n                                                            display: 'flex',\r\n                                                            alignItems: 'center',\r\n                                                            gap: '1rem',\r\n                                                        }}\r\n                                                    >\r\n                                                        {data.productImagePath ? (\r\n                                                            <img\r\n                                                                src={`${url}/images/${data.productImagePath}`}\r\n                                                                alt=\"addon image\"\r\n                                                                height={70}\r\n                                                                loading=\"lazy\"\r\n                                                                style={{ borderRadius: '5%' }}\r\n                                                            />\r\n                                                        ) : (\r\n                                                            \"\"\r\n                                                        )}\r\n                                                    </Box>\r\n                                                    <div>\r\n                                                        <span\r\n                                                            style={\r\n                                                                data.productSalePrice && data.productSalePrice !== \"\"\r\n                                                                    ? { color: \"red\", textDecoration: \"line-through\", marginRight: 20 }\r\n                                                                    : parseFloat(data.productPrice) === 0\r\n                                                                        ? { color: \"green\" }\r\n                                                                        : null\r\n                                                            }\r\n                                                        >\r\n                                                            {parseFloat(data.productPrice) === 0 ? \"Free\" : `$${data.productPrice}`}\r\n                                                        </span>\r\n                                                        {data.productSalePrice && data.productSalePrice !== \"\" && (\r\n                                                            <span style={{ color: \"green\" }}>{`$${data.productSalePrice}`}</span>\r\n                                                        )}\r\n                                                    </div>\r\n\r\n                                                </Container>\r\n                                            ))}\r\n                                    </div>\r\n                                )\r\n                            )}\r\n                    </>;\r\n\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        {isLoading && <CircularProgress size={25} />}\r\n                        {!isLoading && props.modalType === \"Edit\" ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditProductsModalReducer, ...state.AuthUserReducer, ...state.OtherReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n    setAddEditProductsModalToggle,\r\n    setAddEditProductsModalType,\r\n    setAddEditProductsModalRowData,\r\n    setAddEditProductsModalImagePath,\r\n    setAddEditProductsModalImagePathForComponent,\r\n    setAddEditProductsModalDetailsImagePath,\r\n    setAddEditProductsModalDetailsImagePathForComponent,\r\n    setAddEditProductsModalProductCategoryId,\r\n    setAddEditProductsModalProductTitle,\r\n    setAddEditProductsModalProductDetails,\r\n    setAddEditProductsModalProductPrice,\r\n    setAddEditProductsModalProductSalePrice,\r\n\r\n    setAddEditProductsModalProductVariationTitle,\r\n    setAddEditProductsModalProductVariationData,\r\n    setAddEditProductsModalProductOtherSelectionsSerializedData,\r\n    setAddEditProductsModalProductStatusEnabled,\r\n    setAddEditProductsModalProductDealStatus,\r\n    setAddEditProductsModalIsLoading,\r\n    setAddEditProductsModalReset,\r\n\r\n    setAddEditProductsVariationTitleModalToggle,\r\n    setAddEditProductsVariationTitleModalId,\r\n    setAddEditProductsVariationModalToggle,\r\n    setAddEditProductsVariationModalId,\r\n    setAddEditProductsVariationTitleModalTitleText,\r\n    setAddEditProductsVariationModalReset,\r\n})(AddEditProductsModal);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminAddons\\index.js",["1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081"],"import React, { useEffect, useMemo } from \"react\";\r\nimport { IconButton, Tooltip, Container, Box } from \"@mui/material/\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport CustomTable from \"../../otherComponents/CustomTable\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport _ from \"lodash\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport { DialogContext } from \"../../context/DialogContext\";\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport AddEditAddonsModal from \"./AddEditAddonsModal\";\r\nimport {\r\n  setAddEditAddonsModalToggle,\r\n  setAddEditAddonsModalType,\r\n  setAddEditAddonsModalRowData,\r\n} from \"../../../store/actions/AddEditAddonsModalActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    marginTop: (state) => state.appBarHeight + 15\r\n  }\r\n}));\r\n\r\nconst AdminAddons = (props) => {\r\n  const classes = useStyles({ appBarHeight: props.appBarHeight });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const url = `${props.configData.backend_domain}${props.configData.backend_port !== '' ? ':' + props.configData.backend_port : ''}`;\r\n\r\n  const {\r\n    openContextDialog\r\n  } = React.useContext(DialogContext);\r\n\r\n  const { loading: deleteAddonsLoading, error: deleteAddonsError, data: deleteAddonsResult, makeRequest: deleteAddons } = useSwaggerRequest('/api/addons/delete');\r\n\r\n  useEffect(() => {\r\n    if (deleteAddonsResult) {\r\n      getAddons({\r\n        method: 'GET',\r\n\r\n      });\r\n      enqueueSnackbar(\"Addon deleted successfully.\", { variant: \"success\" });\r\n\r\n    }\r\n  }, [deleteAddonsResult]);\r\n\r\n  useEffect(() => {\r\n    if (deleteAddonsError) {\r\n\r\n      enqueueSnackbar(deleteAddonsError.message, { variant: \"error\" });\r\n\r\n    }\r\n  }, [deleteAddonsError]);\r\n\r\n  const { loading: getAddonsLoading, error: getAddonsError, data: getAddonsResult, makeRequest: getAddons } = useSwaggerRequest('/api/addons/all');\r\n\r\n  useEffect(() => {\r\n\r\n    getAddons({\r\n      method: 'GET',\r\n\r\n    });\r\n  }, []);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        accessorKey: 'productTitle',\r\n        header: 'Addon Title',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80\r\n      },\r\n      {\r\n        accessorKey: 'productImagePath',\r\n        header: 'Addon Image',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n\r\n          return <Box\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '1rem',\r\n            }}\r\n          >\r\n            {row.original.productImagePath ?\r\n            <img  src={`${url}/images/${row.original.productImagePath}`}\r\n              alt=\"addon image\"\r\n              height={100}\r\n              loading=\"lazy\"\r\n\r\n              style={{ borderRadius: '5%' }}\r\n            /> : \"No Image\"}\r\n\r\n          </Box>\r\n        },\r\n      },\r\n  \r\n      {\r\n        accessorKey: 'productSalePrice',\r\n        header: 'Addon Price',\r\n        enableColumnOrdering: true,\r\n        enableEditing: true, // disable editing on this column\r\n        enableSorting: true,\r\n        size: 80,\r\n        Cell: ({ renderedCellValue, row }) => {\r\n          return <><span style={row.original.productSalePrice && row.original.productSalePrice != \"\" ? { color: \"red\", textDecoration: \"line-through\", marginRight: 20 } : (parseFloat(row.original.productPrice) == 0  ? {\"color\":\"green\"}: null)}>{parseFloat(row.original.productPrice) == 0 ? \"Free\" : `$${row.original.productPrice}`}</span>{row.original.productSalePrice && row.original.productSalePrice != \"\" && <span style={{ color: \"green\" }}>{`$${row.original.productSalePrice }`}</span>}</>\r\n        }\r\n      }\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Container\r\n      className={classes.mainContainer}\r\n      maxWidth={false}\r\n      disableGutters={true}\r\n    >\r\n      <CustomTable\r\n        exportFilename={\"Addons\"}\r\n        addDataText={\"Add Addons\"}\r\n        addDataAction={() => {\r\n          props.setAddEditAddonsModalType(\"Add\");\r\n          props.setAddEditAddonsModalToggle(true);\r\n        }}\r\n        muiTablePaginationProps={{\r\n          rowsPerPageOptions: _.sortBy([40, 80, 160, getAddonsResult  ? getAddonsResult .length : 250]),\r\n        }}\r\n        renderRowActions={({ row, table }) => (\r\n          <Box sx={{ display: 'flex' }}>\r\n            <Tooltip arrow placement=\"left\" title=\"Edit\">\r\n              <IconButton onClick={() => {\r\n              props.setAddEditAddonsModalRowData(row.original);\r\n              props.setAddEditAddonsModalType(\"Edit\");\r\n              props.setAddEditAddonsModalToggle(true);\r\n              }} >\r\n                <Edit />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Tooltip arrow placement=\"right\" title=\"Delete\">\r\n              <IconButton color=\"error\" onClick={() => {\r\n                openContextDialog(\"Yes\", \"No\", `Are you sure you want to delete ${row.original.productImagePath}?`, \"Confirm\", () => {\r\n                  try {\r\n                    deleteAddons(\r\n                      {\r\n                        method: 'DELETE',\r\n                        additionalUrl: `/${row.original.id}`\r\n                      }\r\n                    );\r\n\r\n                  } catch (e) {\r\n\r\n                  }\r\n                }, () => {\r\n\r\n                });\r\n              }}>\r\n                <Delete />\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Box>\r\n        )}\r\n        enableStickyHeader\r\n        columns={columns}\r\n        enableDensityToggle={false}\r\n\r\n        state={{\r\n          isLoading: getAddonsLoading,\r\n        }}\r\n        initialState={{\r\n          density: 'comfortable',\r\n          pagination: { pageSize: 40 },\r\n          isLoading: true,\r\n        }}\r\n        data={getAddonsResult  ? getAddonsResult  : []}\r\n      />\r\n      {props.addEditAddonsModalToggle && <AddEditAddonsModal getAddonsCallback={()=>{\r\n              getAddons({\r\n                method: 'GET',\r\n        \r\n              });\r\n      }} modalType={props.addEditAddonsModalType} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.AuthUserReducer, ...state.OtherReducer, ...state.AddEditAddonsModalReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  setAddEditAddonsModalToggle,\r\n  setAddEditAddonsModalType,\r\n  setAddEditAddonsModalRowData,\r\n})(AdminAddons);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminAddons\\AddEditAddonsModal.js",["1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n    CircularProgress,\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n    Avatar,\r\n    FormControlLabel,\r\n    Checkbox\r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\n\r\nimport {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n} from \"../../../store/actions/CropImageModalActions\";\r\n\r\nimport {\r\n    setAddEditAddonsModalToggle,\r\n    setAddEditAddonsModalType,\r\n    setAddEditAddonsModalRowData,\r\n    setAddEditAddonsModalImagePath,\r\n    setAddEditAddonsModalImagePathForComponent,\r\n    setAddEditAddonsModalAddonProductTitle,\r\n    setAddEditAddonsModalProductSalePrice,\r\n    setAddEditAddonsModalProductPrice,\r\n    setAddEditAddonsModalIsLoading,\r\n    setAddEditAddonsModalReset\r\n} from \"../../../store/actions/AddEditAddonsModalActions\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport useSwaggerRequest from \"../../../hooks/useSwaggerHook\";\r\nimport ValidationSelectField from \"../../otherComponents/ValidationSelectField\";\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\nimport { parse } from \"date-fns\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n      position: \"absolute!important\",\r\n      right: 5,\r\n      top: 6,\r\n      color: \"white!important\",\r\n    },\r\n    textField: {\r\n      width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n      background: \"#505050\",\r\n      flexDirection: \"row\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      paddingTop: \"10px!important\",\r\n      paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n      color: \"white\",\r\n    },\r\n    dialogActions: {\r\n      padding: 0,\r\n    },\r\n    submitButton: {\r\n      fontSize: 17,\r\n      width: \"200px\",\r\n      borderRadius: 0,\r\n      margin: \"auto!important\",\r\n      color: \"white!important\",\r\n    },\r\n  \r\n    dialogContent: {\r\n      minWidth: 220,\r\n    },\r\n  \r\n    checkboxLabel: {\r\n  \r\n    },\r\n    submitButtonContainer: {\r\n      display: \"flex!important\",\r\n      alignItems: \"center\"\r\n  \r\n    },\r\n    addonImageAddButton: {\r\n      border: \"1px dashed gray\",\r\n  \r\n      padding: \"0px!important\",\r\n      margin: \"auto\",\r\n      display: \"block\",\r\n      width: \"100%\",\r\n    },\r\n    addonImageAddButtonIcon: {\r\n      width: \"150px!important\",\r\n      height: \"150px!important\",\r\n      color: \"gray\"\r\n    },\r\n    addonImageAddButtonImage: {\r\n  \r\n      height: \"150px!important\",\r\n      width: \"auto\"\r\n    }\r\n  }));\r\n\r\nconst AddEditAddonsModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const url = `${props.configData.backend_domain}${props.configData.backend_port !== '' ? ':' + props.configData.backend_port : ''}`;\r\n\r\n    const addPicButtonRef = useRef(null);\r\n\r\n    const productTitleValidationFieldRef = useRef(null);\r\n    const productSalePriceValidationFieldRef = useRef(null);\r\n    const productPriceValidationFieldRef = useRef(null);\r\n\r\n    const handleClose = () => {\r\n        props.setAddEditAddonsModalReset();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (props.modalType === \"Edit\") {\r\n            if (props.addEditAddonsModalRowData) {\r\n                fillDataForEdit();\r\n            }\r\n        }\r\n    }, []);\r\n\r\n    const fillDataForEdit = async () => {\r\n        if(props.addEditAddonsModalRowData.productImagePath){\r\n        const response = await fetch(`${url}/api/image/${props.addEditAddonsModalRowData.productImagePath}`);\r\n        const arrayBuffer = await response.arrayBuffer();\r\n\r\n        const blob = new Blob([arrayBuffer]);\r\n\r\n        const simulatedFile = new File([blob], props.addEditAddonsModalRowData.productImagePath, {\r\n            lastModified: new Date().getTime(),\r\n            type: 'image/png',\r\n        });\r\n\r\n        props.setAddEditAddonsModalImagePathForComponent(URL.createObjectURL(blob));\r\n        props.setAddEditAddonsModalImagePath(simulatedFile);\r\n    }\r\n        props.setAddEditAddonsModalAddonProductTitle(props.addEditAddonsModalRowData.productTitle);\r\n        props.setAddEditAddonsModalProductSalePrice(props.addEditAddonsModalRowData.productSalePrice);\r\n        props.setAddEditAddonsModalProductPrice(props.addEditAddonsModalRowData.productPrice);\r\n    };\r\n\r\n    const { loading: editAddonsLoading, error: editAddonsError, data: editAddonsResult, makeRequest: editAddons } = useSwaggerRequest(`/api/addons/edit/${props.addEditAddonsModalRowData?.id}`, false, 'multipart/form-data');\r\n\r\n    useEffect(() => {\r\n        if (editAddonsError) {\r\n            enqueueSnackbar(editAddonsError.message, { variant: \"error\" });\r\n        }\r\n    }, [editAddonsError]);\r\n\r\n    useEffect(() => {\r\n        if (editAddonsResult) {\r\n            enqueueSnackbar(\"Addon updated successfully.\", { variant: \"success\" });\r\n            handleClose();\r\n            props.getAddonsCallback();\r\n        }\r\n    }, [editAddonsResult]);\r\n\r\n    const { loading: addAddonsLoading, error: addAddonsError, data: addAddonsResult, makeRequest: addAddons } = useSwaggerRequest(`/api/addons/add`, false, 'multipart/form-data');\r\n\r\n    useEffect(() => {\r\n        if (addAddonsError) {\r\n            enqueueSnackbar(addAddonsError.message, { variant: \"error\" });\r\n        }\r\n    }, [addAddonsError]);\r\n\r\n    useEffect(() => {\r\n        if (addAddonsResult) {\r\n            enqueueSnackbar(\"Addon added successfully.\", { variant: \"success\" });\r\n            handleClose();\r\n            props.getAddonsCallback();\r\n        }\r\n    }, [addAddonsResult]);\r\n\r\n    const isLoading = editAddonsLoading || addAddonsLoading;\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (isLoading) return;\r\n\r\n        let isValid = true;\r\n\r\n       // if (props.addEditAddonsModalImagePath.length === 0) {\r\n        //    isValid = false;\r\n         //   alert(\"Image is required\");\r\n     //   }\r\n        if (!productTitleValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!productSalePriceValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!productPriceValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n\r\n\r\n          if(parseFloat(props.addEditAddonsModalProductSalePrice) >=  parseFloat(props.addEditAddonsModalProductPrice)){\r\n            isValid = false;\r\n            alert(\"Sale price must be less than price.\")\r\n          }\r\n\r\n        if (isValid) {\r\n            try {\r\n              \r\n                if (props.modalType === \"Edit\") {\r\n                    const formData = new FormData();\r\n                    formData.append('ImageFile', props.addEditAddonsModalImagePath);\r\n                    formData.append('Addons.ID', props.addEditAddonsModalRowData.id);\r\n                    formData.append('Addons.ProductTitle', props.addEditAddonsModalAddonProductTitle);\r\n                    formData.append('Addons.ProductImagePath',props.addEditAddonsModalImagePath ? props.addEditAddonsModalImagePath.name : \"\");\r\n                   \r\n                    \r\n                    let price = isNaN(props.addEditAddonsModalProductPrice) || props.addEditAddonsModalProductPrice == 0\r\n                    ? 0\r\n                    : props.addEditAddonsModalProductPrice;\r\n                price = price ?? 0;\r\n\r\n                let salePrice = isNaN(props.addEditAddonsModalProductSalePrice) || props.addEditAddonsModalProductSalePrice == 0\r\n                    ? \"\"\r\n                    : props.addEditAddonsModalProductSalePrice;\r\n                salePrice = salePrice ?? \"\";\r\n                    \r\n                    formData.append('Addons.ProductPrice', price);\r\n                    formData.append('Addons.ProductSalePrice',salePrice);\r\n\r\n                    await editAddons({\r\n                        method: 'PUT',\r\n                        requestData: formData,\r\n                    });\r\n                } else {\r\n                    \r\n                    const formData = new FormData();\r\n                    formData.append('ImageFile', props.addEditAddonsModalImagePath);\r\n                    formData.append('Addons.ProductTitle', props.addEditAddonsModalAddonProductTitle);\r\n                    formData.append('Addons.ProductImagePath', props.addEditAddonsModalImagePath ? props.addEditAddonsModalImagePath.name : \"\");\r\n                    \r\n\r\n                    let price = isNaN(props.addEditAddonsModalProductPrice) || props.addEditAddonsModalProductPrice == 0\r\n                    ? 0\r\n                    : props.addEditAddonsModalProductPrice;\r\n                price = price ?? 0;\r\n\r\n                let salePrice = isNaN(props.addEditAddonsModalProductSalePrice) || props.addEditAddonsModalProductSalePrice == 0\r\n                    ? \"\"\r\n                    : props.addEditAddonsModalProductSalePrice;\r\n                salePrice = salePrice ?? \"\";\r\n                    \r\n                    formData.append('Addons.ProductPrice', price);\r\n                    formData.append('Addons.ProductSalePrice',salePrice);\r\n                    \r\n                    await addAddons({\r\n                        method: 'POST',\r\n                        requestData: formData,\r\n                    });\r\n                }\r\n            } catch (e) {\r\n                // Handle any errors here\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditAddonsModalToggle}\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {`${props.modalType === \"Edit\" ? \"Edit\" : \"Add\"} Addon`}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={12}>\r\n                            <input\r\n                                onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                        let reader = new FileReader();\r\n                                        reader.readAsDataURL(event.target.files[0]);\r\n                                        reader.onload = function () {\r\n                                            props.setAddEditAddonsModalImagePathForComponent(reader.result);\r\n                                            props.setAddEditAddonsModalImagePath(event.target.files[0]);\r\n                                        };\r\n                                        reader.onerror = function (error) {\r\n                                            alert(\"Error: \", error);\r\n                                        };\r\n                                    }\r\n                                }}\r\n                                ref={addPicButtonRef}\r\n                                accept=\"image/*\"\r\n                                disabled={isLoading}\r\n                                style={{ display: \"none\" }}\r\n                                id=\"raised-button-file\"\r\n                                name=\"raised-button-file\"\r\n                                multiple={false}\r\n                                type=\"file\"\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    addPicButtonRef.current.click();\r\n                                }}\r\n                                className={classes.addonImageAddButton}\r\n                            >\r\n                                {props.addEditAddonsModalImagePathForComponent ? (\r\n                                    <img\r\n                                        className={classes.addonImageAddButtonImage}\r\n                                        alt=\"Addon Avatar\"\r\n                                        width={40}\r\n                                        src={props.addEditAddonsModalImagePathForComponent}\r\n                                    />\r\n                                ) : (\r\n                                    <AddPhotoAlternateIcon className={classes.addonImageAddButtonIcon} />\r\n                                )}\r\n                            </Button>\r\n                            {props.addEditAddonsModalImagePath && <Button onClick={()=>{\r\n                                props.setAddEditAddonsModalImagePath(\"\");\r\n                                props.setAddEditAddonsModalImagePathForComponent(\"\");\r\n                            }}>Remove Image</Button>}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                required\r\n                                ref={productTitleValidationFieldRef}\r\n                                value={props.addEditAddonsModalAddonProductTitle}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>\r\n                                    props.setAddEditAddonsModalAddonProductTitle(e.target.value)\r\n                                }\r\n                                label=\"Addon Title\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                       \r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"number\"\r\n                                step=\".00\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={productPriceValidationFieldRef}\r\n                                value={props.addEditAddonsModalProductPrice}\r\n                                disabled={isLoading}\r\n                                onInput={(e) => {\r\n                                    var value = parseFloat(e.target.value);\r\n                                    if (value <= 0) value = 0;\r\n                                    props.setAddEditAddonsModalProductPrice(value);\r\n                                }}\r\n                                required\r\n                                label=\"Addon Price\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <Typography color={\"red\"} fontSize={11}>If the value is set to 0, the product becomes free.</Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"number\"\r\n                                step=\".00\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                ref={productSalePriceValidationFieldRef}\r\n                                value={props.addEditAddonsModalProductSalePrice}\r\n                                disabled={isLoading}\r\n                                onInput={(e) =>{\r\n                                    var value = parseFloat(e.target.value);\r\n                                    if (value <= 0) value = 0;\r\n                                    props.setAddEditAddonsModalProductSalePrice(e.target.value)\r\n                                }\r\n                            }\r\n                                label=\"Addon Sale Price\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className={classes.submitButton}\r\n                    >\r\n                        {isLoading && <CircularProgress size={25} />}\r\n                        {!isLoading && props.modalType === \"Edit\" ? \"Save\" : \"Add\"}\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditAddonsModalReducer, ...state.AuthUserReducer, ...state.OtherReducer };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setCropImageModalImage,\r\n    setCropImageModalToggle,\r\n    setCropImageModalLoading,\r\n    setAddEditAddonsModalToggle,\r\n    setAddEditAddonsModalType,\r\n    setAddEditAddonsModalRowData,\r\n    setAddEditAddonsModalImagePath,\r\n    setAddEditAddonsModalImagePathForComponent,\r\n    setAddEditAddonsModalAddonProductTitle,\r\n    setAddEditAddonsModalProductSalePrice,\r\n    setAddEditAddonsModalProductPrice,\r\n    setAddEditAddonsModalIsLoading,\r\n    setAddEditAddonsModalReset\r\n})(AddEditAddonsModal);\r\n","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditAddonsModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AddEditAddonsModalActions.js",[],"D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\AddVariationTitleModal.js",["1096","1097"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n   \r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\n\r\nimport {\r\n\r\n    setAddEditProductsVariationTitleModalToggle,\r\n    setAddEditProductsVariationTitleModalTitleText,\r\n    setAddEditProductsVariationTitleModalId\r\n} from \"../../../store/actions/AddEditProductsVariationModalActions\";\r\nimport { useSnackbar } from \"notistack\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\",\r\n    },\r\n\r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n\r\n    checkboxLabel: {\r\n\r\n    },\r\n    submitButtonContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n\r\n    }\r\n}));\r\n\r\nconst AddVariationTitleModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const titleValidationFieldRef = useRef(null);\r\n\r\n    const handleClose = () => {\r\n\r\n        props.setAddEditProductsVariationTitleModalToggle(false);\r\n        props.setAddEditProductsVariationTitleModalTitleText(\"\");\r\n        props.setAddEditProductsVariationTitleModalId(null);\r\n        \r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        let isValid = true;\r\n\r\n        if (!titleValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n       \r\n        if (isValid) {\r\n           props.onSave(props.addEditProductsVariationTitleModalTitleText,props.addEditProductsVariationTitleModalId);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditProductsVariationTitleModalToggle}\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {\"Edit Title\"}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                       \r\n                        <Grid item xs={12} md={12}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                required\r\n                                ref={titleValidationFieldRef}\r\n                                value={props.addEditProductsVariationTitleModalTitleText}\r\n                            \r\n                                onInput={(e) =>\r\n                                    props.setAddEditProductsVariationTitleModalTitleText(e.target.value)\r\n                                }\r\n                                label=\"Title\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        className={classes.submitButton}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditProductsVariationModalReducer};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setAddEditProductsVariationTitleModalToggle,\r\n    setAddEditProductsVariationTitleModalTitleText,\r\n    setAddEditProductsVariationTitleModalId\r\n\r\n})(AddVariationTitleModal);\r\n","D:\\halalpizzabackendui\\src\\components\\adminpanel\\AdminProducts\\AddVariationDataModal.js",["1098","1099","1100","1101"],"import React, { useEffect, useRef } from \"react\";\r\nimport {\r\n    Dialog,\r\n    Button,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    DialogTitle,\r\n\r\n    IconButton,\r\n    Container,\r\n    Grid,\r\n   \r\n} from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport ValidationTextField from \"../../otherComponents/ValidationTextField\";\r\n\r\nimport {\r\n\r\n    setAddEditProductsVariationModalToggle,\r\n    setAddEditProductsVariationModalItemName,\r\n    setAddEditProductsVariationModalId,\r\n    setAddEditProductsVariationModalItemImage,\r\n    setAddEditProductsVariationModalItemProductPrice,\r\n    setAddEditProductsVariationModalItemProductSalePrice\r\n} from \"../../../store/actions/AddEditProductsVariationModalActions\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport AddPhotoAlternateIcon from '@mui/icons-material/AddPhotoAlternate';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    closeButton: {\r\n        position: \"absolute!important\",\r\n        right: 5,\r\n        top: 6,\r\n        color: \"white!important\",\r\n    },\r\n    textField: {\r\n        width: \"100%\",\r\n    },\r\n    dialogTitle: {\r\n        background: \"#505050\",\r\n        flexDirection: \"row\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        paddingTop: \"10px!important\",\r\n        paddingBottom: \"10px!important\",\r\n    },\r\n    dialogTitleText: {\r\n        color: \"white\",\r\n    },\r\n    dialogActions: {\r\n        padding: 0,\r\n    },\r\n    submitButton: {\r\n        fontSize: 17,\r\n        width: \"200px\",\r\n        borderRadius: 0,\r\n        margin: \"auto!important\",\r\n        color: \"white!important\",\r\n    },\r\n\r\n    dialogContent: {\r\n        minWidth: 220,\r\n    },\r\n\r\n    checkboxLabel: {\r\n\r\n    },\r\n    submitButtonContainer: {\r\n        display: \"flex!important\",\r\n        alignItems: \"center\"\r\n\r\n    },\r\n    itemImageAddButton: {\r\n        border: \"1px dashed gray\",\r\n\r\n        padding: \"0px!important\",\r\n        margin: \"auto\",\r\n        display: \"block\",\r\n        width: \"100%\",\r\n    },\r\n    itemImageAddButtonIcon: {\r\n        width: \"150px!important\",\r\n        height: \"150px!important\",\r\n        color: \"gray\"\r\n    },\r\n    itemImageAddButtonImage: {\r\n\r\n        height: \"150px!important\",\r\n        width: \"auto\"\r\n    }\r\n}));\r\n\r\nconst AddVariationDataModal = (props) => {\r\n    const classes = useStyles();\r\n    const { enqueueSnackbar } = useSnackbar();\r\n\r\n    const addPicButtonRef = useRef(null);\r\n\r\n    const itemNameValidationFieldRef = useRef(null);\r\n    const itemPriceValidationFieldRef = useRef(null);\r\n    const itemSalePriceValidationFieldRef = useRef(null);\r\n\r\n    const handleClose = () => {\r\n\r\n        props.setAddEditProductsVariationModalToggle(false);\r\n        props.setAddEditProductsVariationModalItemName(\"\");\r\n        props.setAddEditProductsVariationModalItemImage(null);\r\n        props.setAddEditProductsVariationModalId(null);\r\n        \r\n    };\r\n\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n\r\n        let isValid = true;\r\n\r\n       // if (props.addEditProductsVariationModalItemImage.length === 0) {\r\n          //  isValid = false;\r\n         //   alert(\"Item image is required\");\r\n     //   }\r\n       \r\n     if (isNaN(props.addEditProductsVariationModalItemProductPrice) || parseFloat(props.addEditProductsVariationModalItemProductPrice) <= 0 ) {\r\n                                     \r\n        itemPriceValidationFieldRef.current.setEmpty();\r\n        props.setAddEditProductsVariationModalItemProductPrice(\"\");\r\n\r\n        await new Promise(resolve => setTimeout(resolve, 300));\r\n    }\r\n    if(parseFloat(props.addEditProductsVariationModalItemProductSalePrice) >=  parseFloat(props.addEditProductsVariationModalItemProductPrice)){\r\n        isValid = false;\r\n        alert(\"Sale price must be less than price.\")\r\n      }\r\n        if (!itemNameValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!itemPriceValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (!itemSalePriceValidationFieldRef.current.validateValue()) {\r\n            isValid = false;\r\n        }\r\n        if (isValid) {\r\n\r\n            let price = isNaN(props.addEditProductsVariationModalItemProductPrice) || props.addEditProductsVariationModalItemProductPrice == 0\r\n            ? \"\"\r\n            : props.addEditProductsVariationModalItemProductPrice;\r\n        price = price ?? \"\";\r\n\r\n        let salePrice = isNaN(props.addEditProductsVariationModalItemProductSalePrice) || props.addEditProductsVariationModalItemProductSalePrice == 0\r\n            ? \"\"\r\n            : props.addEditProductsVariationModalItemProductSalePrice;\r\n        salePrice = salePrice ?? \"\";\r\n\r\n           props.onSave(props.addEditProductsVariationModalItemImage,props.addEditProductsVariationModalItemName,props.addEditProductsVariationModalId,price,salePrice);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Dialog\r\n            aria-labelledby=\"customized-dialog-title\"\r\n            open={props.addEditProductsVariationModalToggle}\r\n            onClose={handleClose}\r\n        >\r\n            <DialogTitle\r\n                onClose={handleClose}\r\n                id=\"customized-dialog-title\"\r\n                className={classes.dialogTitle}\r\n            >\r\n                <Typography variant=\"h6\" className={classes.dialogTitleText}>\r\n                    {\"Add Variation\"}\r\n                </Typography>\r\n                <IconButton\r\n                    aria-label=\"close\"\r\n                    className={classes.closeButton}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            </DialogTitle>\r\n            <DialogContent dividers className={classes.dialogContent}>\r\n                <form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={12}>\r\n                            <Typography>Item Image</Typography>\r\n                            <input\r\n                                onChange={(event) => {\r\n                                    if (event.target.files.length > 0) {\r\n                                        let reader = new FileReader();\r\n                                        reader.readAsDataURL(event.target.files[0]);\r\n                                        reader.onload = function () {\r\n                                        \r\n                                            props.setAddEditProductsVariationModalItemImage(reader.result);\r\n                                           \r\n                                        };\r\n                                        reader.onerror = function (error) {\r\n                                            alert(\"Error: \", error);\r\n                                        };\r\n                                    }\r\n                                }}\r\n                                ref={addPicButtonRef}\r\n                                accept=\"image/*\"\r\n                        \r\n\r\n                                style={{ display: \"none\" }}\r\n                                id=\"raised-button-file\"\r\n                                name=\"raised-button-file\"\r\n                                multiple={false}\r\n                                type=\"file\"\r\n                            />\r\n                            <Button\r\n                                onClick={() => {\r\n                                    addPicButtonRef.current.click();\r\n                                }}\r\n                                className={classes.itemImageAddButton}\r\n                            >\r\n                                {\r\n                                    props.addEditProductsVariationModalItemImage ?\r\n                                        <img\r\n                                            className={classes.productImageAddButtonImage}\r\n                                            alt=\"Item Avatar\"\r\n                                            height={150}\r\n                                            src={props.addEditProductsVariationModalItemImage}\r\n                                        /> :\r\n                                        <AddPhotoAlternateIcon className={classes.itemImageAddButtonIcon} />\r\n                                }\r\n                            </Button>\r\n                            {props.addEditProductsVariationModalItemImage && <Button onClick={()=>{\r\n                                props.setAddEditProductsVariationModalItemImage(\"\");\r\n                               \r\n                            }}>Remove Image</Button>}\r\n                        </Grid>\r\n                        <Grid item xs={12} md={12}>\r\n                            <ValidationTextField\r\n                                type=\"text\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n                                }}\r\n                                required\r\n                                ref={itemNameValidationFieldRef}\r\n                                value={props.addEditProductsVariationModalItemName}\r\n                            \r\n                                onInput={(e) =>\r\n                                    props.setAddEditProductsVariationModalItemName(e.target.value)\r\n                                }\r\n                                label=\"Item Name\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"number\"\r\n                                step=\".00\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n\r\n                                }}\r\n             \r\n                                ref={itemPriceValidationFieldRef}\r\n                                value={props.addEditProductsVariationModalItemProductPrice}\r\n                               \r\n                              \r\n                                onInput={(e) => {\r\n                                    var value = parseFloat(e.target.value);\r\n\r\n                                    if (value < 0) value = \"0\";\r\n\r\n                                    props.setAddEditProductsVariationModalItemProductPrice(value)\r\n\r\n                                }\r\n                                }\r\n                                \r\n                                required\r\n                                label=\"Item Price\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <ValidationTextField\r\n                                type=\"number\"\r\n                                step=\".00\"\r\n                                className={classes.textField}\r\n                                InputProps={{\r\n                                    classes: {},\r\n\r\n                                }}\r\n                               \r\n                               \r\n                                ref={itemSalePriceValidationFieldRef}\r\n                                value={props.addEditProductsVariationModalItemProductSalePrice}\r\n                               \r\n                                onInput={(e) => {\r\n                                    var value = parseFloat(e.target.value);\r\n\r\n                                    if (value < 0) value = \"0\";\r\n\r\n                                    props.setAddEditProductsVariationModalItemProductSalePrice(value)\r\n\r\n                                }\r\n                                }\r\n\r\n                                label=\"Item Sale Price\"\r\n                                variant=\"outlined\"\r\n\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </DialogContent>\r\n            <DialogActions disableSpacing={true} className={classes.dialogActions}>\r\n                <Container disableGutters={true} className={classes.submitButtonContainer}>\r\n                    <Button\r\n                        onClick={handleSubmit}\r\n                        variant=\"contained\"\r\n                        type=\"submit\"\r\n                        className={classes.submitButton}\r\n                    >\r\n                        Add\r\n                    </Button>\r\n                </Container>\r\n            </DialogActions>\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.AddEditProductsVariationModalReducer};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    setAddEditProductsVariationModalToggle,\r\n    setAddEditProductsVariationModalItemName,\r\n    setAddEditProductsVariationModalId,\r\n    setAddEditProductsVariationModalItemImage,\r\n    setAddEditProductsVariationModalItemProductPrice,\r\n    setAddEditProductsVariationModalItemProductSalePrice\r\n})(AddVariationDataModal);\r\n","D:\\halalpizzabackendui\\src\\store\\reducers\\AddEditProductsVariationModalReducer.js",[],"D:\\halalpizzabackendui\\src\\store\\actions\\AddEditProductsVariationModalActions.js",[],{"ruleId":"1102","severity":1,"message":"1103","line":2,"column":8,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":16},{"ruleId":"1102","severity":1,"message":"1106","line":7,"column":10,"nodeType":"1104","messageId":"1105","endLine":7,"endColumn":24},{"ruleId":"1102","severity":1,"message":"1107","line":15,"column":3,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":22},{"ruleId":"1108","severity":1,"message":"1109","line":60,"column":9,"nodeType":"1110","messageId":"1111","endLine":60,"endColumn":16},{"ruleId":"1102","severity":1,"message":"1112","line":12,"column":10,"nodeType":"1104","messageId":"1105","endLine":12,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1113","line":14,"column":13,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":19},{"ruleId":"1102","severity":1,"message":"1114","line":19,"column":3,"nodeType":"1104","messageId":"1105","endLine":19,"endColumn":20},{"ruleId":"1102","severity":1,"message":"1115","line":35,"column":8,"nodeType":"1104","messageId":"1105","endLine":35,"endColumn":12},{"ruleId":"1116","severity":1,"message":"1117","line":115,"column":6,"nodeType":"1118","endLine":115,"endColumn":8,"suggestions":"1119"},{"ruleId":"1120","severity":1,"message":"1121","line":155,"column":61,"nodeType":"1122","messageId":"1123","endLine":155,"endColumn":63},{"ruleId":"1116","severity":1,"message":"1124","line":159,"column":6,"nodeType":"1118","endLine":159,"endColumn":26,"suggestions":"1125"},{"ruleId":"1116","severity":1,"message":"1126","line":189,"column":6,"nodeType":"1118","endLine":189,"endColumn":27,"suggestions":"1127"},{"ruleId":"1102","severity":1,"message":"1128","line":4,"column":8,"nodeType":"1104","messageId":"1105","endLine":4,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1129","line":32,"column":6,"nodeType":"1118","endLine":32,"endColumn":22,"suggestions":"1130"},{"ruleId":"1116","severity":1,"message":"1117","line":50,"column":6,"nodeType":"1118","endLine":50,"endColumn":8,"suggestions":"1131"},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":105,"column":11,"nodeType":"1104","messageId":"1105","endLine":105,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1134","line":106,"column":9,"nodeType":"1104","messageId":"1105","endLine":106,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1135","line":109,"column":5,"nodeType":"1104","messageId":"1105","endLine":109,"endColumn":22},{"ruleId":"1102","severity":1,"message":"1136","line":2,"column":10,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1137","line":6,"column":10,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1138","line":2,"column":20,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":25},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":132,"column":11,"nodeType":"1104","messageId":"1105","endLine":132,"endColumn":26},{"ruleId":"1139","severity":1,"message":"1140","line":1,"column":1,"nodeType":"1141","endLine":34,"endColumn":2},{"ruleId":"1102","severity":1,"message":"1142","line":11,"column":3,"nodeType":"1104","messageId":"1105","endLine":11,"endColumn":10},{"ruleId":"1102","severity":1,"message":"1143","line":149,"column":48,"nodeType":"1104","messageId":"1105","endLine":149,"endColumn":65},{"ruleId":"1116","severity":1,"message":"1144","line":163,"column":8,"nodeType":"1118","endLine":163,"endColumn":10,"suggestions":"1145"},{"ruleId":"1116","severity":1,"message":"1117","line":181,"column":8,"nodeType":"1118","endLine":181,"endColumn":28,"suggestions":"1146"},{"ruleId":"1120","severity":1,"message":"1121","line":223,"column":82,"nodeType":"1122","messageId":"1123","endLine":223,"endColumn":84},{"ruleId":"1116","severity":1,"message":"1124","line":227,"column":8,"nodeType":"1118","endLine":227,"endColumn":43,"suggestions":"1147"},{"ruleId":"1116","severity":1,"message":"1148","line":248,"column":8,"nodeType":"1118","endLine":248,"endColumn":44,"suggestions":"1149"},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":25},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":27,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":36},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":38,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":44},{"ruleId":"1102","severity":1,"message":"1152","line":11,"column":3,"nodeType":"1104","messageId":"1105","endLine":11,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1153","line":16,"column":8,"nodeType":"1104","messageId":"1105","endLine":16,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1154","line":3,"column":5,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":23},{"ruleId":"1102","severity":1,"message":"1155","line":36,"column":11,"nodeType":"1104","messageId":"1105","endLine":36,"endColumn":20},{"ruleId":"1116","severity":1,"message":"1156","line":46,"column":8,"nodeType":"1118","endLine":46,"endColumn":24,"suggestions":"1157"},{"ruleId":"1158","severity":1,"message":"1159","line":58,"column":41,"nodeType":"1160","messageId":"1111","endLine":58,"endColumn":43},{"ruleId":"1102","severity":1,"message":"1161","line":1,"column":32,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1162","line":21,"column":15,"nodeType":"1104","messageId":"1105","endLine":21,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1163","line":85,"column":16,"nodeType":"1104","messageId":"1105","endLine":85,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1164","line":86,"column":14,"nodeType":"1104","messageId":"1105","endLine":86,"endColumn":38},{"ruleId":"1120","severity":1,"message":"1121","line":98,"column":73,"nodeType":"1122","messageId":"1123","endLine":98,"endColumn":75},{"ruleId":"1116","severity":1,"message":"1117","line":112,"column":6,"nodeType":"1118","endLine":112,"endColumn":33,"suggestions":"1165"},{"ruleId":"1116","severity":1,"message":"1166","line":116,"column":6,"nodeType":"1118","endLine":116,"endColumn":8,"suggestions":"1167"},{"ruleId":"1102","severity":1,"message":"1168","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1169","line":1,"column":30,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":37},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":39,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":47},{"ruleId":"1102","severity":1,"message":"1170","line":83,"column":23,"nodeType":"1104","messageId":"1105","endLine":83,"endColumn":33},{"ruleId":"1116","severity":1,"message":"1171","line":36,"column":6,"nodeType":"1118","endLine":36,"endColumn":19,"suggestions":"1172"},{"ruleId":"1116","severity":1,"message":"1129","line":44,"column":6,"nodeType":"1118","endLine":44,"endColumn":18,"suggestions":"1173"},{"ruleId":"1102","severity":1,"message":"1115","line":6,"column":8,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":12},{"ruleId":"1102","severity":1,"message":"1174","line":18,"column":11,"nodeType":"1104","messageId":"1105","endLine":18,"endColumn":18},{"ruleId":"1102","severity":1,"message":"1142","line":11,"column":3,"nodeType":"1104","messageId":"1105","endLine":11,"endColumn":10},{"ruleId":"1102","severity":1,"message":"1175","line":31,"column":8,"nodeType":"1104","messageId":"1105","endLine":31,"endColumn":19},{"ruleId":"1102","severity":1,"message":"1176","line":3,"column":54,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":61},{"ruleId":"1177","severity":1,"message":"1178","line":58,"column":54,"nodeType":"1179","messageId":"1180","endLine":58,"endColumn":56},{"ruleId":"1177","severity":1,"message":"1178","line":59,"column":44,"nodeType":"1179","messageId":"1180","endLine":59,"endColumn":46},{"ruleId":"1158","severity":1,"message":"1159","line":66,"column":49,"nodeType":"1160","messageId":"1111","endLine":66,"endColumn":51},{"ruleId":"1177","severity":1,"message":"1178","line":69,"column":56,"nodeType":"1179","messageId":"1180","endLine":69,"endColumn":58},{"ruleId":"1177","severity":1,"message":"1178","line":70,"column":48,"nodeType":"1179","messageId":"1180","endLine":70,"endColumn":50},{"ruleId":"1102","severity":1,"message":"1181","line":49,"column":16,"nodeType":"1104","messageId":"1105","endLine":49,"endColumn":47},{"ruleId":"1120","severity":1,"message":"1121","line":57,"column":72,"nodeType":"1122","messageId":"1123","endLine":57,"endColumn":74},{"ruleId":"1116","severity":1,"message":"1124","line":61,"column":6,"nodeType":"1118","endLine":61,"endColumn":37,"suggestions":"1182"},{"ruleId":"1116","severity":1,"message":"1183","line":74,"column":6,"nodeType":"1118","endLine":74,"endColumn":38,"suggestions":"1184"},{"ruleId":"1102","severity":1,"message":"1164","line":90,"column":14,"nodeType":"1104","messageId":"1105","endLine":90,"endColumn":38},{"ruleId":"1116","severity":1,"message":"1166","line":100,"column":6,"nodeType":"1118","endLine":100,"endColumn":8,"suggestions":"1185"},{"ruleId":"1116","severity":1,"message":"1186","line":102,"column":19,"nodeType":"1104","endLine":102,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1187","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":39,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":45},{"ruleId":"1102","severity":1,"message":"1188","line":49,"column":16,"nodeType":"1104","messageId":"1105","endLine":49,"endColumn":33},{"ruleId":"1120","severity":1,"message":"1121","line":57,"column":66,"nodeType":"1122","messageId":"1123","endLine":57,"endColumn":68},{"ruleId":"1116","severity":1,"message":"1124","line":61,"column":6,"nodeType":"1118","endLine":61,"endColumn":31,"suggestions":"1189"},{"ruleId":"1116","severity":1,"message":"1190","line":74,"column":6,"nodeType":"1118","endLine":74,"endColumn":32,"suggestions":"1191"},{"ruleId":"1102","severity":1,"message":"1192","line":103,"column":14,"nodeType":"1104","messageId":"1105","endLine":103,"endColumn":32},{"ruleId":"1116","severity":1,"message":"1193","line":113,"column":6,"nodeType":"1118","endLine":113,"endColumn":8,"suggestions":"1194"},{"ruleId":"1116","severity":1,"message":"1186","line":115,"column":19,"nodeType":"1104","endLine":115,"endColumn":26},{"ruleId":"1158","severity":1,"message":"1159","line":196,"column":58,"nodeType":"1160","messageId":"1111","endLine":196,"endColumn":60},{"ruleId":"1158","severity":1,"message":"1159","line":208,"column":58,"nodeType":"1160","messageId":"1111","endLine":208,"endColumn":60},{"ruleId":"1158","severity":1,"message":"1159","line":239,"column":55,"nodeType":"1160","messageId":"1111","endLine":239,"endColumn":57},{"ruleId":"1158","severity":1,"message":"1159","line":248,"column":55,"nodeType":"1160","messageId":"1111","endLine":248,"endColumn":57},{"ruleId":"1102","severity":1,"message":"1195","line":157,"column":56,"nodeType":"1104","messageId":"1105","endLine":157,"endColumn":81},{"ruleId":"1158","severity":1,"message":"1159","line":165,"column":29,"nodeType":"1160","messageId":"1111","endLine":165,"endColumn":31},{"ruleId":"1116","severity":1,"message":"1196","line":197,"column":8,"nodeType":"1118","endLine":197,"endColumn":10,"suggestions":"1197"},{"ruleId":"1120","severity":1,"message":"1121","line":248,"column":72,"nodeType":"1122","messageId":"1123","endLine":248,"endColumn":74},{"ruleId":"1116","severity":1,"message":"1124","line":252,"column":8,"nodeType":"1118","endLine":252,"endColumn":33,"suggestions":"1198"},{"ruleId":"1116","severity":1,"message":"1148","line":267,"column":8,"nodeType":"1118","endLine":267,"endColumn":34,"suggestions":"1199"},{"ruleId":"1120","severity":1,"message":"1121","line":316,"column":69,"nodeType":"1122","messageId":"1123","endLine":316,"endColumn":71},{"ruleId":"1116","severity":1,"message":"1124","line":320,"column":8,"nodeType":"1118","endLine":320,"endColumn":30,"suggestions":"1200"},{"ruleId":"1116","severity":1,"message":"1148","line":335,"column":8,"nodeType":"1118","endLine":335,"endColumn":31,"suggestions":"1201"},{"ruleId":"1158","severity":1,"message":"1159","line":389,"column":37,"nodeType":"1160","messageId":"1111","endLine":389,"endColumn":39},{"ruleId":"1158","severity":1,"message":"1159","line":399,"column":73,"nodeType":"1160","messageId":"1111","endLine":399,"endColumn":75},{"ruleId":"1158","severity":1,"message":"1159","line":422,"column":73,"nodeType":"1160","messageId":"1111","endLine":422,"endColumn":75},{"ruleId":"1158","severity":1,"message":"1159","line":456,"column":41,"nodeType":"1160","messageId":"1111","endLine":456,"endColumn":43},{"ruleId":"1158","severity":1,"message":"1159","line":590,"column":56,"nodeType":"1160","messageId":"1111","endLine":590,"endColumn":58},{"ruleId":"1158","severity":1,"message":"1159","line":652,"column":53,"nodeType":"1160","messageId":"1111","endLine":652,"endColumn":55},{"ruleId":"1158","severity":1,"message":"1159","line":724,"column":59,"nodeType":"1160","messageId":"1111","endLine":724,"endColumn":61},{"ruleId":"1158","severity":1,"message":"1159","line":725,"column":59,"nodeType":"1160","messageId":"1111","endLine":725,"endColumn":61},{"ruleId":"1158","severity":1,"message":"1159","line":744,"column":56,"nodeType":"1160","messageId":"1111","endLine":744,"endColumn":58},{"ruleId":"1102","severity":1,"message":"1202","line":13,"column":5,"nodeType":"1104","messageId":"1105","endLine":13,"endColumn":11},{"ruleId":"1102","severity":1,"message":"1203","line":14,"column":5,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1204","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":13},{"ruleId":"1116","severity":1,"message":"1117","line":110,"column":8,"nodeType":"1118","endLine":110,"endColumn":10,"suggestions":"1205"},{"ruleId":"1120","severity":1,"message":"1121","line":147,"column":82,"nodeType":"1122","messageId":"1123","endLine":147,"endColumn":84},{"ruleId":"1116","severity":1,"message":"1124","line":152,"column":8,"nodeType":"1118","endLine":152,"endColumn":43,"suggestions":"1206"},{"ruleId":"1116","severity":1,"message":"1117","line":160,"column":8,"nodeType":"1118","endLine":160,"endColumn":44,"suggestions":"1207"},{"ruleId":"1120","severity":1,"message":"1121","line":186,"column":78,"nodeType":"1122","messageId":"1123","endLine":186,"endColumn":80},{"ruleId":"1116","severity":1,"message":"1124","line":190,"column":8,"nodeType":"1118","endLine":190,"endColumn":39,"suggestions":"1208"},{"ruleId":"1116","severity":1,"message":"1148","line":204,"column":8,"nodeType":"1118","endLine":204,"endColumn":40,"suggestions":"1209"},{"ruleId":"1120","severity":1,"message":"1121","line":227,"column":75,"nodeType":"1122","messageId":"1123","endLine":227,"endColumn":77},{"ruleId":"1116","severity":1,"message":"1124","line":231,"column":8,"nodeType":"1118","endLine":231,"endColumn":36,"suggestions":"1210"},{"ruleId":"1116","severity":1,"message":"1148","line":245,"column":8,"nodeType":"1118","endLine":245,"endColumn":37,"suggestions":"1211"},{"ruleId":"1158","severity":1,"message":"1212","line":319,"column":75,"nodeType":"1160","messageId":"1111","endLine":319,"endColumn":77},{"ruleId":"1102","severity":1,"message":"1213","line":6,"column":22,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":30},{"ruleId":"1116","severity":1,"message":"1214","line":99,"column":6,"nodeType":"1118","endLine":99,"endColumn":8,"suggestions":"1215"},{"ruleId":"1102","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":30},{"ruleId":"1102","severity":1,"message":"1161","line":1,"column":32,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":44,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":52},{"ruleId":"1116","severity":1,"message":"1217","line":38,"column":6,"nodeType":"1118","endLine":38,"endColumn":8,"suggestions":"1218"},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":28,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":34},{"ruleId":"1102","severity":1,"message":"1219","line":3,"column":61,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":70},{"ruleId":"1102","severity":1,"message":"1153","line":6,"column":8,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1115","line":14,"column":8,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":12},{"ruleId":"1102","severity":1,"message":"1220","line":15,"column":8,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":9},{"ruleId":"1102","severity":1,"message":"1133","line":42,"column":13,"nodeType":"1104","messageId":"1105","endLine":42,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1164","line":58,"column":20,"nodeType":"1104","messageId":"1105","endLine":58,"endColumn":44},{"ruleId":"1158","severity":1,"message":"1159","line":68,"column":29,"nodeType":"1160","messageId":"1111","endLine":68,"endColumn":31},{"ruleId":"1116","severity":1,"message":"1221","line":80,"column":8,"nodeType":"1118","endLine":80,"endColumn":10,"suggestions":"1222"},{"ruleId":"1102","severity":1,"message":"1223","line":82,"column":9,"nodeType":"1104","messageId":"1105","endLine":82,"endColumn":18},{"ruleId":"1158","severity":1,"message":"1159","line":44,"column":9,"nodeType":"1160","messageId":"1111","endLine":44,"endColumn":11},{"ruleId":"1158","severity":1,"message":"1159","line":61,"column":32,"nodeType":"1160","messageId":"1111","endLine":61,"endColumn":34},{"ruleId":"1158","severity":1,"message":"1212","line":115,"column":21,"nodeType":"1160","messageId":"1111","endLine":115,"endColumn":23},{"ruleId":"1102","severity":1,"message":"1224","line":7,"column":3,"nodeType":"1104","messageId":"1105","endLine":7,"endColumn":9},{"ruleId":"1102","severity":1,"message":"1142","line":8,"column":3,"nodeType":"1104","messageId":"1105","endLine":8,"endColumn":10},{"ruleId":"1102","severity":1,"message":"1225","line":12,"column":22,"nodeType":"1104","messageId":"1105","endLine":12,"endColumn":32},{"ruleId":"1158","severity":1,"message":"1159","line":71,"column":36,"nodeType":"1160","messageId":"1111","endLine":71,"endColumn":38},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":159,"column":11,"nodeType":"1104","messageId":"1105","endLine":159,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1226","line":168,"column":9,"nodeType":"1104","messageId":"1105","endLine":168,"endColumn":19},{"ruleId":"1102","severity":1,"message":"1176","line":3,"column":54,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":61},{"ruleId":"1102","severity":1,"message":"1227","line":38,"column":9,"nodeType":"1104","messageId":"1105","endLine":38,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1134","line":39,"column":9,"nodeType":"1104","messageId":"1105","endLine":39,"endColumn":17},{"ruleId":"1158","severity":1,"message":"1159","line":49,"column":57,"nodeType":"1160","messageId":"1111","endLine":49,"endColumn":59},{"ruleId":"1158","severity":1,"message":"1159","line":50,"column":49,"nodeType":"1160","messageId":"1111","endLine":50,"endColumn":51},{"ruleId":"1102","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":30},{"ruleId":"1102","severity":1,"message":"1161","line":1,"column":32,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":44,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":52},{"ruleId":"1116","severity":1,"message":"1228","line":54,"column":6,"nodeType":"1118","endLine":54,"endColumn":8,"suggestions":"1229"},{"ruleId":"1102","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":30},{"ruleId":"1102","severity":1,"message":"1161","line":1,"column":32,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":44,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":52},{"ruleId":"1116","severity":1,"message":"1230","line":40,"column":6,"nodeType":"1118","endLine":40,"endColumn":8,"suggestions":"1231"},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":28,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":34},{"ruleId":"1102","severity":1,"message":"1232","line":132,"column":13,"nodeType":"1104","messageId":"1105","endLine":132,"endColumn":20},{"ruleId":"1102","severity":1,"message":"1233","line":134,"column":11,"nodeType":"1104","messageId":"1105","endLine":134,"endColumn":16},{"ruleId":"1116","severity":1,"message":"1234","line":168,"column":8,"nodeType":"1118","endLine":168,"endColumn":52,"suggestions":"1235"},{"ruleId":"1158","severity":1,"message":"1159","line":204,"column":88,"nodeType":"1160","messageId":"1111","endLine":204,"endColumn":90},{"ruleId":"1116","severity":1,"message":"1117","line":208,"column":8,"nodeType":"1118","endLine":208,"endColumn":49,"suggestions":"1236"},{"ruleId":"1102","severity":1,"message":"1237","line":236,"column":20,"nodeType":"1104","messageId":"1105","endLine":236,"endColumn":57},{"ruleId":"1158","severity":1,"message":"1159","line":246,"column":98,"nodeType":"1160","messageId":"1111","endLine":246,"endColumn":100},{"ruleId":"1116","severity":1,"message":"1117","line":250,"column":8,"nodeType":"1118","endLine":250,"endColumn":48,"suggestions":"1238"},{"ruleId":"1102","severity":1,"message":"1239","line":269,"column":20,"nodeType":"1104","messageId":"1105","endLine":269,"endColumn":50},{"ruleId":"1158","severity":1,"message":"1159","line":281,"column":57,"nodeType":"1160","messageId":"1111","endLine":281,"endColumn":59},{"ruleId":"1116","severity":1,"message":"1117","line":287,"column":8,"nodeType":"1118","endLine":287,"endColumn":41,"suggestions":"1240"},{"ruleId":"1102","severity":1,"message":"1241","line":329,"column":22,"nodeType":"1104","messageId":"1105","endLine":329,"endColumn":69},{"ruleId":"1102","severity":1,"message":"1242","line":330,"column":20,"nodeType":"1104","messageId":"1105","endLine":330,"endColumn":65},{"ruleId":"1158","severity":1,"message":"1159","line":343,"column":116,"nodeType":"1160","messageId":"1111","endLine":343,"endColumn":118},{"ruleId":"1158","severity":1,"message":"1159","line":344,"column":118,"nodeType":"1160","messageId":"1111","endLine":344,"endColumn":120},{"ruleId":"1158","severity":1,"message":"1159","line":345,"column":148,"nodeType":"1160","messageId":"1111","endLine":345,"endColumn":150},{"ruleId":"1158","severity":1,"message":"1159","line":346,"column":146,"nodeType":"1160","messageId":"1111","endLine":346,"endColumn":148},{"ruleId":"1116","severity":1,"message":"1117","line":352,"column":8,"nodeType":"1118","endLine":352,"endColumn":56,"suggestions":"1243"},{"ruleId":"1116","severity":1,"message":"1117","line":363,"column":8,"nodeType":"1118","endLine":363,"endColumn":10,"suggestions":"1244"},{"ruleId":"1116","severity":1,"message":"1245","line":377,"column":8,"nodeType":"1118","endLine":377,"endColumn":79,"suggestions":"1246"},{"ruleId":"1116","severity":1,"message":"1117","line":387,"column":8,"nodeType":"1118","endLine":387,"endColumn":50,"suggestions":"1247"},{"ruleId":"1158","severity":1,"message":"1212","line":397,"column":52,"nodeType":"1160","messageId":"1111","endLine":397,"endColumn":54},{"ruleId":"1158","severity":1,"message":"1159","line":407,"column":93,"nodeType":"1160","messageId":"1111","endLine":407,"endColumn":95},{"ruleId":"1158","severity":1,"message":"1212","line":446,"column":30,"nodeType":"1160","messageId":"1111","endLine":446,"endColumn":32},{"ruleId":"1158","severity":1,"message":"1212","line":492,"column":75,"nodeType":"1160","messageId":"1111","endLine":492,"endColumn":77},{"ruleId":"1158","severity":1,"message":"1212","line":546,"column":114,"nodeType":"1160","messageId":"1111","endLine":546,"endColumn":116},{"ruleId":"1158","severity":1,"message":"1212","line":547,"column":116,"nodeType":"1160","messageId":"1111","endLine":547,"endColumn":118},{"ruleId":"1158","severity":1,"message":"1212","line":548,"column":116,"nodeType":"1160","messageId":"1111","endLine":548,"endColumn":118},{"ruleId":"1158","severity":1,"message":"1212","line":549,"column":116,"nodeType":"1160","messageId":"1111","endLine":549,"endColumn":118},{"ruleId":"1158","severity":1,"message":"1212","line":552,"column":82,"nodeType":"1160","messageId":"1111","endLine":552,"endColumn":84},{"ruleId":"1116","severity":1,"message":"1248","line":45,"column":8,"nodeType":"1118","endLine":45,"endColumn":50,"suggestions":"1249"},{"ruleId":"1250","severity":1,"message":"1251","line":61,"column":21,"nodeType":"1252","endLine":65,"endColumn":23},{"ruleId":"1102","severity":1,"message":"1253","line":79,"column":13,"nodeType":"1104","messageId":"1105","endLine":79,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1254","line":80,"column":13,"nodeType":"1104","messageId":"1105","endLine":80,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1213","line":2,"column":22,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":30},{"ruleId":"1116","severity":1,"message":"1255","line":56,"column":4,"nodeType":"1118","endLine":56,"endColumn":6,"suggestions":"1256"},{"ruleId":"1102","severity":1,"message":"1257","line":2,"column":42,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":45},{"ruleId":"1102","severity":1,"message":"1162","line":15,"column":15,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":48,"column":11,"nodeType":"1104","messageId":"1105","endLine":48,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1135","line":51,"column":5,"nodeType":"1104","messageId":"1105","endLine":51,"endColumn":22},{"ruleId":"1102","severity":1,"message":"1258","line":91,"column":14,"nodeType":"1104","messageId":"1105","endLine":91,"endColumn":47},{"ruleId":"1116","severity":1,"message":"1259","line":107,"column":6,"nodeType":"1118","endLine":107,"endColumn":8,"suggestions":"1260"},{"ruleId":"1116","severity":1,"message":"1117","line":112,"column":6,"nodeType":"1118","endLine":112,"endColumn":42,"suggestions":"1261"},{"ruleId":"1116","severity":1,"message":"1186","line":113,"column":19,"nodeType":"1104","endLine":113,"endColumn":26},{"ruleId":"1158","severity":1,"message":"1212","line":162,"column":46,"nodeType":"1160","messageId":"1111","endLine":162,"endColumn":48},{"ruleId":"1158","severity":1,"message":"1212","line":164,"column":24,"nodeType":"1160","messageId":"1111","endLine":164,"endColumn":26},{"ruleId":"1120","severity":1,"message":"1262","line":249,"column":48,"nodeType":"1122","messageId":"1263","endLine":249,"endColumn":50},{"ruleId":"1158","severity":1,"message":"1159","line":250,"column":40,"nodeType":"1160","messageId":"1111","endLine":250,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1159","line":252,"column":40,"nodeType":"1160","messageId":"1111","endLine":252,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1159","line":254,"column":40,"nodeType":"1160","messageId":"1111","endLine":254,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1212","line":255,"column":74,"nodeType":"1160","messageId":"1111","endLine":255,"endColumn":76},{"ruleId":"1158","severity":1,"message":"1212","line":257,"column":40,"nodeType":"1160","messageId":"1111","endLine":257,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1170","line":291,"column":25,"nodeType":"1104","messageId":"1105","endLine":291,"endColumn":35},{"ruleId":"1120","severity":1,"message":"1262","line":296,"column":46,"nodeType":"1122","messageId":"1263","endLine":296,"endColumn":48},{"ruleId":"1158","severity":1,"message":"1159","line":297,"column":38,"nodeType":"1160","messageId":"1111","endLine":297,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1159","line":299,"column":38,"nodeType":"1160","messageId":"1111","endLine":299,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1159","line":301,"column":38,"nodeType":"1160","messageId":"1111","endLine":301,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1212","line":302,"column":72,"nodeType":"1160","messageId":"1111","endLine":302,"endColumn":74},{"ruleId":"1158","severity":1,"message":"1212","line":304,"column":38,"nodeType":"1160","messageId":"1111","endLine":304,"endColumn":40},{"ruleId":"1102","severity":1,"message":"1202","line":2,"column":47,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":53},{"ruleId":"1102","severity":1,"message":"1264","line":48,"column":16,"nodeType":"1104","messageId":"1105","endLine":48,"endColumn":40},{"ruleId":"1120","severity":1,"message":"1121","line":56,"column":73,"nodeType":"1122","messageId":"1123","endLine":56,"endColumn":75},{"ruleId":"1116","severity":1,"message":"1124","line":60,"column":6,"nodeType":"1118","endLine":60,"endColumn":38,"suggestions":"1265"},{"ruleId":"1116","severity":1,"message":"1266","line":73,"column":6,"nodeType":"1118","endLine":73,"endColumn":39,"suggestions":"1267"},{"ruleId":"1102","severity":1,"message":"1195","line":88,"column":14,"nodeType":"1104","messageId":"1105","endLine":88,"endColumn":39},{"ruleId":"1116","severity":1,"message":"1268","line":98,"column":6,"nodeType":"1118","endLine":98,"endColumn":8,"suggestions":"1269"},{"ruleId":"1116","severity":1,"message":"1186","line":100,"column":19,"nodeType":"1104","endLine":100,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1202","line":13,"column":5,"nodeType":"1104","messageId":"1105","endLine":13,"endColumn":11},{"ruleId":"1102","severity":1,"message":"1203","line":14,"column":5,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1204","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":13},{"ruleId":"1116","severity":1,"message":"1117","line":104,"column":8,"nodeType":"1118","endLine":104,"endColumn":10,"suggestions":"1270"},{"ruleId":"1120","severity":1,"message":"1121","line":128,"column":79,"nodeType":"1122","messageId":"1123","endLine":128,"endColumn":81},{"ruleId":"1116","severity":1,"message":"1124","line":132,"column":8,"nodeType":"1118","endLine":132,"endColumn":40,"suggestions":"1271"},{"ruleId":"1116","severity":1,"message":"1148","line":146,"column":8,"nodeType":"1118","endLine":146,"endColumn":41,"suggestions":"1272"},{"ruleId":"1120","severity":1,"message":"1121","line":164,"column":76,"nodeType":"1122","messageId":"1123","endLine":164,"endColumn":78},{"ruleId":"1116","severity":1,"message":"1124","line":168,"column":8,"nodeType":"1118","endLine":168,"endColumn":37,"suggestions":"1273"},{"ruleId":"1116","severity":1,"message":"1148","line":182,"column":8,"nodeType":"1118","endLine":182,"endColumn":38,"suggestions":"1274"},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":28,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":34},{"ruleId":"1102","severity":1,"message":"1275","line":6,"column":5,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":18},{"ruleId":"1102","severity":1,"message":"1204","line":12,"column":5,"nodeType":"1104","messageId":"1105","endLine":12,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1162","line":17,"column":15,"nodeType":"1104","messageId":"1105","endLine":17,"endColumn":26},{"ruleId":"1108","severity":1,"message":"1276","line":119,"column":9,"nodeType":"1110","messageId":"1111","endLine":119,"endColumn":16},{"ruleId":"1158","severity":1,"message":"1159","line":150,"column":31,"nodeType":"1160","messageId":"1111","endLine":150,"endColumn":33},{"ruleId":"1158","severity":1,"message":"1159","line":169,"column":36,"nodeType":"1160","messageId":"1111","endLine":169,"endColumn":38},{"ruleId":"1158","severity":1,"message":"1159","line":170,"column":36,"nodeType":"1160","messageId":"1111","endLine":170,"endColumn":38},{"ruleId":"1120","severity":1,"message":"1121","line":174,"column":33,"nodeType":"1122","messageId":"1123","endLine":174,"endColumn":35},{"ruleId":"1158","severity":1,"message":"1159","line":175,"column":32,"nodeType":"1160","messageId":"1111","endLine":175,"endColumn":34},{"ruleId":"1102","severity":1,"message":"1277","line":177,"column":29,"nodeType":"1104","messageId":"1105","endLine":177,"endColumn":47},{"ruleId":"1158","severity":1,"message":"1159","line":178,"column":130,"nodeType":"1160","messageId":"1111","endLine":178,"endColumn":132},{"ruleId":"1158","severity":1,"message":"1159","line":184,"column":39,"nodeType":"1160","messageId":"1111","endLine":184,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1117","line":203,"column":8,"nodeType":"1118","endLine":203,"endColumn":75,"suggestions":"1278"},{"ruleId":"1120","severity":1,"message":"1121","line":234,"column":79,"nodeType":"1122","messageId":"1123","endLine":234,"endColumn":81},{"ruleId":"1116","severity":1,"message":"1124","line":239,"column":8,"nodeType":"1118","endLine":239,"endColumn":40,"suggestions":"1279"},{"ruleId":"1116","severity":1,"message":"1117","line":247,"column":8,"nodeType":"1118","endLine":247,"endColumn":41,"suggestions":"1280"},{"ruleId":"1116","severity":1,"message":"1281","line":256,"column":8,"nodeType":"1118","endLine":256,"endColumn":22,"suggestions":"1282"},{"ruleId":"1158","severity":1,"message":"1159","line":258,"column":69,"nodeType":"1160","messageId":"1111","endLine":258,"endColumn":71},{"ruleId":"1158","severity":1,"message":"1159","line":259,"column":65,"nodeType":"1160","messageId":"1111","endLine":259,"endColumn":67},{"ruleId":"1102","severity":1,"message":"1283","line":3,"column":8,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":25},{"ruleId":"1102","severity":1,"message":"1137","line":12,"column":10,"nodeType":"1104","messageId":"1105","endLine":12,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1162","line":32,"column":15,"nodeType":"1104","messageId":"1105","endLine":32,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1258","line":129,"column":14,"nodeType":"1104","messageId":"1105","endLine":129,"endColumn":47},{"ruleId":"1116","severity":1,"message":"1284","line":146,"column":6,"nodeType":"1118","endLine":146,"endColumn":8,"suggestions":"1285"},{"ruleId":"1116","severity":1,"message":"1117","line":151,"column":6,"nodeType":"1118","endLine":151,"endColumn":42,"suggestions":"1286"},{"ruleId":"1116","severity":1,"message":"1186","line":152,"column":19,"nodeType":"1104","endLine":152,"endColumn":26},{"ruleId":"1158","severity":1,"message":"1212","line":201,"column":46,"nodeType":"1160","messageId":"1111","endLine":201,"endColumn":48},{"ruleId":"1158","severity":1,"message":"1212","line":203,"column":24,"nodeType":"1160","messageId":"1111","endLine":203,"endColumn":26},{"ruleId":"1120","severity":1,"message":"1262","line":308,"column":48,"nodeType":"1122","messageId":"1263","endLine":308,"endColumn":50},{"ruleId":"1158","severity":1,"message":"1159","line":309,"column":40,"nodeType":"1160","messageId":"1111","endLine":309,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1159","line":311,"column":40,"nodeType":"1160","messageId":"1111","endLine":311,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1159","line":313,"column":40,"nodeType":"1160","messageId":"1111","endLine":313,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1212","line":314,"column":74,"nodeType":"1160","messageId":"1111","endLine":314,"endColumn":76},{"ruleId":"1158","severity":1,"message":"1212","line":316,"column":40,"nodeType":"1160","messageId":"1111","endLine":316,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1170","line":350,"column":25,"nodeType":"1104","messageId":"1105","endLine":350,"endColumn":35},{"ruleId":"1120","severity":1,"message":"1262","line":355,"column":46,"nodeType":"1122","messageId":"1263","endLine":355,"endColumn":48},{"ruleId":"1158","severity":1,"message":"1159","line":356,"column":38,"nodeType":"1160","messageId":"1111","endLine":356,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1159","line":358,"column":38,"nodeType":"1160","messageId":"1111","endLine":358,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1159","line":360,"column":38,"nodeType":"1160","messageId":"1111","endLine":360,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1212","line":361,"column":72,"nodeType":"1160","messageId":"1111","endLine":361,"endColumn":74},{"ruleId":"1158","severity":1,"message":"1212","line":363,"column":38,"nodeType":"1160","messageId":"1111","endLine":363,"endColumn":40},{"ruleId":"1102","severity":1,"message":"1213","line":15,"column":22,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":30},{"ruleId":"1102","severity":1,"message":"1115","line":16,"column":8,"nodeType":"1104","messageId":"1105","endLine":16,"endColumn":12},{"ruleId":"1102","severity":1,"message":"1287","line":136,"column":16,"nodeType":"1104","messageId":"1105","endLine":136,"endColumn":60},{"ruleId":"1120","severity":1,"message":"1262","line":147,"column":43,"nodeType":"1122","messageId":"1263","endLine":147,"endColumn":45},{"ruleId":"1102","severity":1,"message":"1170","line":190,"column":15,"nodeType":"1104","messageId":"1105","endLine":190,"endColumn":25},{"ruleId":"1116","severity":1,"message":"1288","line":205,"column":6,"nodeType":"1118","endLine":205,"endColumn":51,"suggestions":"1289"},{"ruleId":"1120","severity":1,"message":"1121","line":208,"column":85,"nodeType":"1122","messageId":"1123","endLine":208,"endColumn":87},{"ruleId":"1116","severity":1,"message":"1290","line":214,"column":6,"nodeType":"1118","endLine":214,"endColumn":50,"suggestions":"1291"},{"ruleId":"1158","severity":1,"message":"1212","line":224,"column":50,"nodeType":"1160","messageId":"1111","endLine":224,"endColumn":52},{"ruleId":"1102","severity":1,"message":"1103","line":2,"column":8,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":16},{"ruleId":"1139","severity":1,"message":"1140","line":1,"column":1,"nodeType":"1141","endLine":55,"endColumn":2},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1138","line":2,"column":20,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":25},{"ruleId":"1102","severity":1,"message":"1161","line":1,"column":32,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1114","line":19,"column":3,"nodeType":"1104","messageId":"1105","endLine":19,"endColumn":20},{"ruleId":"1102","severity":1,"message":"1115","line":34,"column":8,"nodeType":"1104","messageId":"1105","endLine":34,"endColumn":12},{"ruleId":"1116","severity":1,"message":"1117","line":115,"column":6,"nodeType":"1118","endLine":115,"endColumn":8,"suggestions":"1292"},{"ruleId":"1116","severity":1,"message":"1124","line":130,"column":6,"nodeType":"1118","endLine":130,"endColumn":18,"suggestions":"1293"},{"ruleId":"1116","severity":1,"message":"1126","line":161,"column":6,"nodeType":"1118","endLine":161,"endColumn":23,"suggestions":"1294"},{"ruleId":"1102","severity":1,"message":"1136","line":2,"column":10,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1137","line":6,"column":10,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":132,"column":11,"nodeType":"1104","messageId":"1105","endLine":132,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1128","line":4,"column":8,"nodeType":"1104","messageId":"1105","endLine":4,"endColumn":19},{"ruleId":"1116","severity":1,"message":"1129","line":33,"column":6,"nodeType":"1118","endLine":33,"endColumn":22,"suggestions":"1295"},{"ruleId":"1116","severity":1,"message":"1117","line":51,"column":6,"nodeType":"1118","endLine":51,"endColumn":8,"suggestions":"1296"},{"ruleId":"1102","severity":1,"message":"1115","line":6,"column":8,"nodeType":"1104","messageId":"1105","endLine":6,"endColumn":12},{"ruleId":"1102","severity":1,"message":"1174","line":20,"column":11,"nodeType":"1104","messageId":"1105","endLine":20,"endColumn":18},{"ruleId":"1102","severity":1,"message":"1142","line":11,"column":3,"nodeType":"1104","messageId":"1105","endLine":11,"endColumn":10},{"ruleId":"1102","severity":1,"message":"1176","line":3,"column":54,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":61},{"ruleId":"1177","severity":1,"message":"1178","line":60,"column":54,"nodeType":"1179","messageId":"1180","endLine":60,"endColumn":56},{"ruleId":"1177","severity":1,"message":"1178","line":61,"column":44,"nodeType":"1179","messageId":"1180","endLine":61,"endColumn":46},{"ruleId":"1158","severity":1,"message":"1159","line":70,"column":49,"nodeType":"1160","messageId":"1111","endLine":70,"endColumn":51},{"ruleId":"1177","severity":1,"message":"1178","line":69,"column":56,"nodeType":"1179","messageId":"1180","endLine":69,"endColumn":58},{"ruleId":"1177","severity":1,"message":"1178","line":70,"column":48,"nodeType":"1179","messageId":"1180","endLine":70,"endColumn":50},{"ruleId":"1102","severity":1,"message":"1216","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":30},{"ruleId":"1102","severity":1,"message":"1161","line":1,"column":32,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":44,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":52},{"ruleId":"1116","severity":1,"message":"1217","line":38,"column":6,"nodeType":"1118","endLine":38,"endColumn":8,"suggestions":"1297"},{"ruleId":"1102","severity":1,"message":"1298","line":133,"column":45,"nodeType":"1104","messageId":"1105","endLine":133,"endColumn":57},{"ruleId":"1116","severity":1,"message":"1299","line":144,"column":8,"nodeType":"1118","endLine":144,"endColumn":10,"suggestions":"1300"},{"ruleId":"1116","severity":1,"message":"1117","line":162,"column":8,"nodeType":"1118","endLine":162,"endColumn":23,"suggestions":"1301"},{"ruleId":"1116","severity":1,"message":"1124","line":172,"column":8,"nodeType":"1118","endLine":172,"endColumn":23,"suggestions":"1302"},{"ruleId":"1116","severity":1,"message":"1148","line":189,"column":8,"nodeType":"1118","endLine":189,"endColumn":24,"suggestions":"1303"},{"ruleId":"1102","severity":1,"message":"1257","line":2,"column":42,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":45},{"ruleId":"1102","severity":1,"message":"1304","line":2,"column":47,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":57},{"ruleId":"1102","severity":1,"message":"1162","line":15,"column":15,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":48,"column":11,"nodeType":"1104","messageId":"1105","endLine":48,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1135","line":51,"column":5,"nodeType":"1104","messageId":"1105","endLine":51,"endColumn":22},{"ruleId":"1102","severity":1,"message":"1258","line":91,"column":14,"nodeType":"1104","messageId":"1105","endLine":91,"endColumn":47},{"ruleId":"1116","severity":1,"message":"1259","line":107,"column":6,"nodeType":"1118","endLine":107,"endColumn":8,"suggestions":"1305"},{"ruleId":"1116","severity":1,"message":"1117","line":112,"column":6,"nodeType":"1118","endLine":112,"endColumn":42,"suggestions":"1306"},{"ruleId":"1116","severity":1,"message":"1186","line":113,"column":19,"nodeType":"1104","endLine":113,"endColumn":26},{"ruleId":"1120","severity":1,"message":"1262","line":235,"column":48,"nodeType":"1122","messageId":"1263","endLine":235,"endColumn":50},{"ruleId":"1158","severity":1,"message":"1159","line":236,"column":40,"nodeType":"1160","messageId":"1111","endLine":236,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1159","line":238,"column":40,"nodeType":"1160","messageId":"1111","endLine":238,"endColumn":42},{"ruleId":"1158","severity":1,"message":"1159","line":240,"column":40,"nodeType":"1160","messageId":"1111","endLine":240,"endColumn":42},{"ruleId":"1102","severity":1,"message":"1307","line":241,"column":33,"nodeType":"1104","messageId":"1105","endLine":241,"endColumn":41},{"ruleId":"1158","severity":1,"message":"1212","line":241,"column":74,"nodeType":"1160","messageId":"1111","endLine":241,"endColumn":76},{"ruleId":"1102","severity":1,"message":"1170","line":267,"column":25,"nodeType":"1104","messageId":"1105","endLine":267,"endColumn":35},{"ruleId":"1120","severity":1,"message":"1262","line":272,"column":46,"nodeType":"1122","messageId":"1263","endLine":272,"endColumn":48},{"ruleId":"1158","severity":1,"message":"1159","line":273,"column":38,"nodeType":"1160","messageId":"1111","endLine":273,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1159","line":275,"column":38,"nodeType":"1160","messageId":"1111","endLine":275,"endColumn":40},{"ruleId":"1158","severity":1,"message":"1159","line":277,"column":38,"nodeType":"1160","messageId":"1111","endLine":277,"endColumn":40},{"ruleId":"1102","severity":1,"message":"1307","line":278,"column":31,"nodeType":"1104","messageId":"1105","endLine":278,"endColumn":39},{"ruleId":"1158","severity":1,"message":"1212","line":278,"column":72,"nodeType":"1160","messageId":"1111","endLine":278,"endColumn":74},{"ruleId":"1102","severity":1,"message":"1187","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":39,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":45},{"ruleId":"1102","severity":1,"message":"1188","line":35,"column":20,"nodeType":"1104","messageId":"1105","endLine":35,"endColumn":37},{"ruleId":"1116","severity":1,"message":"1190","line":50,"column":6,"nodeType":"1118","endLine":50,"endColumn":24,"suggestions":"1308"},{"ruleId":"1116","severity":1,"message":"1124","line":58,"column":6,"nodeType":"1118","endLine":58,"endColumn":23,"suggestions":"1309"},{"ruleId":"1102","severity":1,"message":"1310","line":60,"column":44,"nodeType":"1104","messageId":"1105","endLine":60,"endColumn":57},{"ruleId":"1116","severity":1,"message":"1193","line":70,"column":6,"nodeType":"1118","endLine":70,"endColumn":8,"suggestions":"1311"},{"ruleId":"1116","severity":1,"message":"1186","line":72,"column":19,"nodeType":"1104","endLine":72,"endColumn":26},{"ruleId":"1158","severity":1,"message":"1159","line":142,"column":81,"nodeType":"1160","messageId":"1111","endLine":142,"endColumn":83},{"ruleId":"1158","severity":1,"message":"1159","line":154,"column":60,"nodeType":"1160","messageId":"1111","endLine":154,"endColumn":62},{"ruleId":"1158","severity":1,"message":"1159","line":185,"column":55,"nodeType":"1160","messageId":"1111","endLine":185,"endColumn":57},{"ruleId":"1158","severity":1,"message":"1159","line":194,"column":55,"nodeType":"1160","messageId":"1111","endLine":194,"endColumn":57},{"ruleId":"1102","severity":1,"message":"1154","line":3,"column":5,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":23},{"ruleId":"1102","severity":1,"message":"1155","line":36,"column":11,"nodeType":"1104","messageId":"1105","endLine":36,"endColumn":20},{"ruleId":"1116","severity":1,"message":"1156","line":46,"column":8,"nodeType":"1118","endLine":46,"endColumn":24,"suggestions":"1312"},{"ruleId":"1158","severity":1,"message":"1159","line":58,"column":41,"nodeType":"1160","messageId":"1111","endLine":58,"endColumn":43},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":25},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":27,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":36},{"ruleId":"1102","severity":1,"message":"1151","line":1,"column":38,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":44},{"ruleId":"1102","severity":1,"message":"1152","line":11,"column":3,"nodeType":"1104","messageId":"1105","endLine":11,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1153","line":16,"column":8,"nodeType":"1104","messageId":"1105","endLine":16,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1168","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1169","line":1,"column":30,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":37},{"ruleId":"1102","severity":1,"message":"1150","line":1,"column":39,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":47},{"ruleId":"1102","severity":1,"message":"1170","line":83,"column":23,"nodeType":"1104","messageId":"1105","endLine":83,"endColumn":33},{"ruleId":"1102","severity":1,"message":"1203","line":14,"column":5,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1204","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1313","line":49,"column":8,"nodeType":"1104","messageId":"1105","endLine":49,"endColumn":17},{"ruleId":"1102","severity":1,"message":"1314","line":51,"column":8,"nodeType":"1104","messageId":"1105","endLine":51,"endColumn":23},{"ruleId":"1158","severity":1,"message":"1159","line":149,"column":29,"nodeType":"1160","messageId":"1111","endLine":149,"endColumn":31},{"ruleId":"1116","severity":1,"message":"1117","line":178,"column":8,"nodeType":"1118","endLine":178,"endColumn":10,"suggestions":"1315"},{"ruleId":"1116","severity":1,"message":"1124","line":190,"column":8,"nodeType":"1118","endLine":190,"endColumn":23,"suggestions":"1316"},{"ruleId":"1116","severity":1,"message":"1148","line":201,"column":8,"nodeType":"1118","endLine":201,"endColumn":24,"suggestions":"1317"},{"ruleId":"1116","severity":1,"message":"1124","line":212,"column":8,"nodeType":"1118","endLine":212,"endColumn":22,"suggestions":"1318"},{"ruleId":"1116","severity":1,"message":"1148","line":223,"column":8,"nodeType":"1118","endLine":223,"endColumn":23,"suggestions":"1319"},{"ruleId":"1158","severity":1,"message":"1159","line":275,"column":37,"nodeType":"1160","messageId":"1111","endLine":275,"endColumn":39},{"ruleId":"1158","severity":1,"message":"1159","line":286,"column":72,"nodeType":"1160","messageId":"1111","endLine":286,"endColumn":74},{"ruleId":"1158","severity":1,"message":"1159","line":305,"column":73,"nodeType":"1160","messageId":"1111","endLine":305,"endColumn":75},{"ruleId":"1158","severity":1,"message":"1159","line":334,"column":41,"nodeType":"1160","messageId":"1111","endLine":334,"endColumn":43},{"ruleId":"1158","severity":1,"message":"1159","line":470,"column":56,"nodeType":"1160","messageId":"1111","endLine":470,"endColumn":58},{"ruleId":"1158","severity":1,"message":"1159","line":546,"column":59,"nodeType":"1160","messageId":"1111","endLine":546,"endColumn":61},{"ruleId":"1158","severity":1,"message":"1159","line":547,"column":59,"nodeType":"1160","messageId":"1111","endLine":547,"endColumn":61},{"ruleId":"1158","severity":1,"message":"1159","line":566,"column":56,"nodeType":"1160","messageId":"1111","endLine":566,"endColumn":58},{"ruleId":"1116","severity":1,"message":"1171","line":36,"column":6,"nodeType":"1118","endLine":36,"endColumn":19,"suggestions":"1320"},{"ruleId":"1116","severity":1,"message":"1129","line":44,"column":6,"nodeType":"1118","endLine":44,"endColumn":18,"suggestions":"1321"},{"ruleId":"1102","severity":1,"message":"1283","line":3,"column":8,"nodeType":"1104","messageId":"1105","endLine":3,"endColumn":13},{"ruleId":"1322","replacedBy":"1323"},{"ruleId":"1324","replacedBy":"1325"},{"ruleId":"1158","severity":1,"message":"1212","line":17,"column":13,"nodeType":"1160","messageId":"1111","endLine":17,"endColumn":15},{"ruleId":"1102","severity":1,"message":"1202","line":2,"column":47,"nodeType":"1104","messageId":"1105","endLine":2,"endColumn":53},{"ruleId":"1102","severity":1,"message":"1326","line":32,"column":20,"nodeType":"1104","messageId":"1105","endLine":32,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1124","line":40,"column":6,"nodeType":"1118","endLine":40,"endColumn":27,"suggestions":"1327"},{"ruleId":"1116","severity":1,"message":"1328","line":51,"column":6,"nodeType":"1118","endLine":51,"endColumn":28,"suggestions":"1329"},{"ruleId":"1102","severity":1,"message":"1330","line":53,"column":49,"nodeType":"1104","messageId":"1105","endLine":53,"endColumn":67},{"ruleId":"1116","severity":1,"message":"1331","line":61,"column":6,"nodeType":"1118","endLine":61,"endColumn":8,"suggestions":"1332"},{"ruleId":"1116","severity":1,"message":"1186","line":63,"column":19,"nodeType":"1104","endLine":63,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1202","line":13,"column":5,"nodeType":"1104","messageId":"1105","endLine":13,"endColumn":11},{"ruleId":"1102","severity":1,"message":"1203","line":14,"column":5,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1204","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":13},{"ruleId":"1116","severity":1,"message":"1117","line":104,"column":8,"nodeType":"1118","endLine":104,"endColumn":10,"suggestions":"1333"},{"ruleId":"1116","severity":1,"message":"1124","line":115,"column":8,"nodeType":"1118","endLine":115,"endColumn":27,"suggestions":"1334"},{"ruleId":"1116","severity":1,"message":"1148","line":125,"column":8,"nodeType":"1118","endLine":125,"endColumn":28,"suggestions":"1335"},{"ruleId":"1116","severity":1,"message":"1124","line":135,"column":8,"nodeType":"1118","endLine":135,"endColumn":26,"suggestions":"1336"},{"ruleId":"1116","severity":1,"message":"1148","line":145,"column":8,"nodeType":"1118","endLine":145,"endColumn":27,"suggestions":"1337"},{"ruleId":"1102","severity":1,"message":"1338","line":35,"column":20,"nodeType":"1104","messageId":"1105","endLine":35,"endColumn":48},{"ruleId":"1116","severity":1,"message":"1339","line":46,"column":6,"nodeType":"1118","endLine":46,"endColumn":35,"suggestions":"1340"},{"ruleId":"1116","severity":1,"message":"1124","line":54,"column":6,"nodeType":"1118","endLine":54,"endColumn":34,"suggestions":"1341"},{"ruleId":"1102","severity":1,"message":"1342","line":56,"column":54,"nodeType":"1104","messageId":"1105","endLine":56,"endColumn":77},{"ruleId":"1116","severity":1,"message":"1343","line":64,"column":6,"nodeType":"1118","endLine":64,"endColumn":8,"suggestions":"1344"},{"ruleId":"1116","severity":1,"message":"1186","line":66,"column":19,"nodeType":"1104","endLine":66,"endColumn":26},{"ruleId":"1250","severity":1,"message":"1251","line":84,"column":13,"nodeType":"1252","endLine":90,"endColumn":15},{"ruleId":"1158","severity":1,"message":"1159","line":111,"column":61,"nodeType":"1160","messageId":"1111","endLine":111,"endColumn":63},{"ruleId":"1158","severity":1,"message":"1159","line":111,"column":112,"nodeType":"1160","messageId":"1111","endLine":111,"endColumn":114},{"ruleId":"1102","severity":1,"message":"1202","line":13,"column":5,"nodeType":"1104","messageId":"1105","endLine":13,"endColumn":11},{"ruleId":"1102","severity":1,"message":"1203","line":14,"column":5,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1204","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":13},{"ruleId":"1116","severity":1,"message":"1345","line":133,"column":8,"nodeType":"1118","endLine":133,"endColumn":10,"suggestions":"1346"},{"ruleId":"1116","severity":1,"message":"1124","line":162,"column":8,"nodeType":"1118","endLine":162,"endColumn":34,"suggestions":"1347"},{"ruleId":"1116","severity":1,"message":"1148","line":171,"column":8,"nodeType":"1118","endLine":171,"endColumn":35,"suggestions":"1348"},{"ruleId":"1116","severity":1,"message":"1124","line":182,"column":8,"nodeType":"1118","endLine":182,"endColumn":33,"suggestions":"1349"},{"ruleId":"1116","severity":1,"message":"1148","line":191,"column":8,"nodeType":"1118","endLine":191,"endColumn":34,"suggestions":"1350"},{"ruleId":"1158","severity":1,"message":"1159","line":202,"column":55,"nodeType":"1160","messageId":"1111","endLine":202,"endColumn":57},{"ruleId":"1102","severity":1,"message":"1351","line":35,"column":20,"nodeType":"1104","messageId":"1105","endLine":35,"endColumn":41},{"ruleId":"1116","severity":1,"message":"1352","line":46,"column":6,"nodeType":"1118","endLine":46,"endColumn":28,"suggestions":"1353"},{"ruleId":"1116","severity":1,"message":"1124","line":54,"column":6,"nodeType":"1118","endLine":54,"endColumn":27,"suggestions":"1354"},{"ruleId":"1102","severity":1,"message":"1355","line":56,"column":47,"nodeType":"1104","messageId":"1105","endLine":56,"endColumn":63},{"ruleId":"1116","severity":1,"message":"1356","line":64,"column":6,"nodeType":"1118","endLine":64,"endColumn":8,"suggestions":"1357"},{"ruleId":"1116","severity":1,"message":"1186","line":66,"column":19,"nodeType":"1104","endLine":66,"endColumn":26},{"ruleId":"1250","severity":1,"message":"1251","line":92,"column":13,"nodeType":"1252","endLine":98,"endColumn":15},{"ruleId":"1250","severity":1,"message":"1251","line":119,"column":13,"nodeType":"1252","endLine":125,"endColumn":15},{"ruleId":"1158","severity":1,"message":"1212","line":138,"column":96,"nodeType":"1160","messageId":"1111","endLine":138,"endColumn":98},{"ruleId":"1158","severity":1,"message":"1212","line":138,"column":282,"nodeType":"1160","messageId":"1111","endLine":138,"endColumn":284},{"ruleId":"1158","severity":1,"message":"1159","line":157,"column":61,"nodeType":"1160","messageId":"1111","endLine":157,"endColumn":63},{"ruleId":"1158","severity":1,"message":"1159","line":157,"column":112,"nodeType":"1160","messageId":"1111","endLine":157,"endColumn":114},{"ruleId":"1158","severity":1,"message":"1159","line":169,"column":65,"nodeType":"1160","messageId":"1111","endLine":169,"endColumn":67},{"ruleId":"1158","severity":1,"message":"1159","line":169,"column":120,"nodeType":"1160","messageId":"1111","endLine":169,"endColumn":122},{"ruleId":"1102","severity":1,"message":"1202","line":13,"column":5,"nodeType":"1104","messageId":"1105","endLine":13,"endColumn":11},{"ruleId":"1102","severity":1,"message":"1203","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1330","line":185,"column":51,"nodeType":"1104","messageId":"1105","endLine":185,"endColumn":69},{"ruleId":"1116","severity":1,"message":"1358","line":209,"column":8,"nodeType":"1118","endLine":209,"endColumn":10,"suggestions":"1359"},{"ruleId":"1116","severity":1,"message":"1117","line":264,"column":8,"nodeType":"1118","endLine":264,"endColumn":29,"suggestions":"1360"},{"ruleId":"1116","severity":1,"message":"1124","line":272,"column":8,"nodeType":"1118","endLine":272,"endColumn":27,"suggestions":"1361"},{"ruleId":"1116","severity":1,"message":"1148","line":281,"column":8,"nodeType":"1118","endLine":281,"endColumn":28,"suggestions":"1362"},{"ruleId":"1116","severity":1,"message":"1124","line":292,"column":8,"nodeType":"1118","endLine":292,"endColumn":26,"suggestions":"1363"},{"ruleId":"1116","severity":1,"message":"1148","line":301,"column":8,"nodeType":"1118","endLine":301,"endColumn":27,"suggestions":"1364"},{"ruleId":"1158","severity":1,"message":"1159","line":325,"column":56,"nodeType":"1160","messageId":"1111","endLine":325,"endColumn":58},{"ruleId":"1158","severity":1,"message":"1159","line":329,"column":63,"nodeType":"1160","messageId":"1111","endLine":329,"endColumn":65},{"ruleId":"1158","severity":1,"message":"1159","line":369,"column":121,"nodeType":"1160","messageId":"1111","endLine":369,"endColumn":123},{"ruleId":"1158","severity":1,"message":"1159","line":374,"column":133,"nodeType":"1160","messageId":"1111","endLine":374,"endColumn":135},{"ruleId":"1158","severity":1,"message":"1159","line":406,"column":121,"nodeType":"1160","messageId":"1111","endLine":406,"endColumn":123},{"ruleId":"1158","severity":1,"message":"1159","line":411,"column":133,"nodeType":"1160","messageId":"1111","endLine":411,"endColumn":135},{"ruleId":"1102","severity":1,"message":"1365","line":437,"column":22,"nodeType":"1104","messageId":"1105","endLine":437,"endColumn":38},{"ruleId":"1102","severity":1,"message":"1366","line":437,"column":47,"nodeType":"1104","messageId":"1105","endLine":437,"endColumn":61},{"ruleId":"1158","severity":1,"message":"1159","line":728,"column":36,"nodeType":"1160","messageId":"1111","endLine":728,"endColumn":38},{"ruleId":"1158","severity":1,"message":"1159","line":730,"column":66,"nodeType":"1160","messageId":"1111","endLine":730,"endColumn":68},{"ruleId":"1158","severity":1,"message":"1159","line":742,"column":36,"nodeType":"1160","messageId":"1111","endLine":742,"endColumn":38},{"ruleId":"1250","severity":1,"message":"1251","line":774,"column":61,"nodeType":"1252","endLine":780,"endColumn":63},{"ruleId":"1250","severity":1,"message":"1251","line":887,"column":61,"nodeType":"1252","endLine":893,"endColumn":63},{"ruleId":"1102","severity":1,"message":"1367","line":34,"column":20,"nodeType":"1104","messageId":"1105","endLine":34,"endColumn":39},{"ruleId":"1116","severity":1,"message":"1368","line":45,"column":6,"nodeType":"1118","endLine":45,"endColumn":26,"suggestions":"1369"},{"ruleId":"1116","severity":1,"message":"1124","line":53,"column":6,"nodeType":"1118","endLine":53,"endColumn":25,"suggestions":"1370"},{"ruleId":"1102","severity":1,"message":"1366","line":55,"column":45,"nodeType":"1104","messageId":"1105","endLine":55,"endColumn":59},{"ruleId":"1116","severity":1,"message":"1371","line":63,"column":6,"nodeType":"1118","endLine":63,"endColumn":8,"suggestions":"1372"},{"ruleId":"1116","severity":1,"message":"1186","line":65,"column":19,"nodeType":"1104","endLine":65,"endColumn":26},{"ruleId":"1250","severity":1,"message":"1251","line":92,"column":13,"nodeType":"1252","endLine":98,"endColumn":15},{"ruleId":"1158","severity":1,"message":"1212","line":112,"column":96,"nodeType":"1160","messageId":"1111","endLine":112,"endColumn":98},{"ruleId":"1158","severity":1,"message":"1159","line":112,"column":211,"nodeType":"1160","messageId":"1111","endLine":112,"endColumn":213},{"ruleId":"1158","severity":1,"message":"1159","line":112,"column":284,"nodeType":"1160","messageId":"1111","endLine":112,"endColumn":286},{"ruleId":"1158","severity":1,"message":"1212","line":112,"column":403,"nodeType":"1160","messageId":"1111","endLine":112,"endColumn":405},{"ruleId":"1373","severity":1,"message":"1374","line":132,"column":73,"nodeType":"1375","messageId":"1376","endLine":132,"endColumn":96,"fix":"1377"},{"ruleId":"1102","severity":1,"message":"1202","line":13,"column":5,"nodeType":"1104","messageId":"1105","endLine":13,"endColumn":11},{"ruleId":"1102","severity":1,"message":"1203","line":14,"column":5,"nodeType":"1104","messageId":"1105","endLine":14,"endColumn":21},{"ruleId":"1102","severity":1,"message":"1204","line":15,"column":5,"nodeType":"1104","messageId":"1105","endLine":15,"endColumn":13},{"ruleId":"1102","severity":1,"message":"1378","line":42,"column":8,"nodeType":"1104","messageId":"1105","endLine":42,"endColumn":29},{"ruleId":"1102","severity":1,"message":"1379","line":44,"column":10,"nodeType":"1104","messageId":"1105","endLine":44,"endColumn":15},{"ruleId":"1116","severity":1,"message":"1380","line":133,"column":8,"nodeType":"1118","endLine":133,"endColumn":10,"suggestions":"1381"},{"ruleId":"1116","severity":1,"message":"1124","line":161,"column":8,"nodeType":"1118","endLine":161,"endColumn":25,"suggestions":"1382"},{"ruleId":"1116","severity":1,"message":"1148","line":169,"column":8,"nodeType":"1118","endLine":169,"endColumn":26,"suggestions":"1383"},{"ruleId":"1116","severity":1,"message":"1124","line":177,"column":8,"nodeType":"1118","endLine":177,"endColumn":24,"suggestions":"1384"},{"ruleId":"1116","severity":1,"message":"1148","line":185,"column":8,"nodeType":"1118","endLine":185,"endColumn":25,"suggestions":"1385"},{"ruleId":"1158","severity":1,"message":"1159","line":227,"column":117,"nodeType":"1160","messageId":"1111","endLine":227,"endColumn":119},{"ruleId":"1158","severity":1,"message":"1159","line":232,"column":125,"nodeType":"1160","messageId":"1111","endLine":232,"endColumn":127},{"ruleId":"1158","severity":1,"message":"1159","line":252,"column":117,"nodeType":"1160","messageId":"1111","endLine":252,"endColumn":119},{"ruleId":"1158","severity":1,"message":"1159","line":257,"column":125,"nodeType":"1160","messageId":"1111","endLine":257,"endColumn":127},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":79,"column":13,"nodeType":"1104","messageId":"1105","endLine":79,"endColumn":28},{"ruleId":"1102","severity":1,"message":"1132","line":1,"column":17,"nodeType":"1104","messageId":"1105","endLine":1,"endColumn":26},{"ruleId":"1102","severity":1,"message":"1133","line":100,"column":13,"nodeType":"1104","messageId":"1105","endLine":100,"endColumn":28},{"ruleId":"1158","severity":1,"message":"1159","line":152,"column":139,"nodeType":"1160","messageId":"1111","endLine":152,"endColumn":141},{"ruleId":"1158","severity":1,"message":"1159","line":157,"column":147,"nodeType":"1160","messageId":"1111","endLine":157,"endColumn":149},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'ApolloProvider' is defined but never used.","'setAuthUserPassword' is defined but never used.","no-dupe-keys","Duplicate key 'timeout'.","ObjectExpression","unexpected","'createTheme' is defined but never used.","'Scroll' is defined but never used.","'setLoginIsLoading' is defined but never used.","'clsx' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["1386"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["1387"],"React Hook useEffect has missing dependencies: 'navigate' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1388"],"'MaskedInput' is defined but never used.","React Hook useEffect has a missing dependency: 'validate_'. Either include it or remove the dependency array.",["1389"],["1390"],"'useEffect' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","'navigate' is assigned a value but never used.","'openContextDialog' is assigned a value but never used.","'connect' is defined but never used.","'useSnackbar' is defined but never used.","'Route' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Tooltip' is defined but never used.","'getUserQueryError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUser', 'props.authUserId', and 'props.editProfileModalToggle'. Either include them or remove the dependency array.",["1391"],["1392"],["1393"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar', 'handleClose', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1394"],"'useState' is defined but never used.","'useRef' is defined but never used.","'IconButton' is defined but never used.","'CloseIcon' is defined but never used.","'BaseTextFieldProps' is defined but never used.","'phoneUtil' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'country' and 'isPhoneValid'. Either include them or remove the dependency array.",["1395"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'useContext' is defined but never used.","'useMutation' is defined but never used.","'getFoldersPathQueryLoading' is assigned a value but never used.","'getFoldersPathQueryError' is assigned a value but never used.",["1396"],"React Hook useEffect has a missing dependency: 'getFoldersPath'. Either include it or remove the dependency array.",["1397"],"'useCallback' is defined but never used.","'useMemo' is defined but never used.","'marginleft' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'value'. Either include it or remove the dependency array.",["1398"],["1399"],"'classes' is assigned a value but never used.","'HistoryIcon' is defined but never used.","'SvgIcon' is defined but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","'deleteFolderPathMutationLoading' is assigned a value but never used.",["1400"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getFoldersPath'. Either include them or remove the dependency array.",["1401"],["1402"],"React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'Component' is defined but never used.","'deleteUserLoading' is assigned a value but never used.",["1403"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getUsers'. Either include them or remove the dependency array.",["1404"],"'getUsersQueryError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsers'. Either include it or remove the dependency array.",["1405"],"'getDesignationsQueryError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getDesignations' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1406"],["1407"],["1408"],["1409"],["1410"],"'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.",["1411"],["1412"],["1413"],["1414"],["1415"],["1416"],["1417"],"Expected '!==' and instead saw '!='.","'useTheme' is defined but never used.","React Hook React.useEffect has missing dependencies: 'handleMousemove', 'handleMouseup', and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside React.useEffect.",["1418"],"'createContext' is defined but never used.","React Hook useEffect has a missing dependency: 'updateAppBarHeight'. Either include it or remove the dependency array.",["1419"],"'FormLabel' is defined but never used.","'_' is defined but never used.","React Hook useEffect has missing dependencies: 'getFoldersPath' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1420"],"'isLoading' is assigned a value but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'isMdSmOrXs' is assigned a value but never used.","'location' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateFoldersMenuBottomHeight'. Either include it or remove the dependency array.",["1421"],"React Hook useEffect has a missing dependency: 'updateAppBarHeightAndWindowHeight'. Either include it or remove the dependency array.",["1422"],"'loading' is assigned a value but never used.","'theme' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFoldersFilesFromFolderId' and 'props.filesListAndEditorSelectedFolderId'. Either include them or remove the dependency array.",["1423"],["1424"],"'getFoldersFilesFromFolderIdQueryError' is assigned a value but never used.",["1425"],"'getIdsForQuickSearchQueryError' is assigned a value but never used.",["1426"],"'getFoldersFilesFromFolderIdDbFilterQueryLoading' is assigned a value but never used.","'getFoldersFilesFromFolderIdDbFilterQueryError' is assigned a value but never used.",["1427"],["1428"],"React Hook useEffect has a missing dependency: 'getFoldersFilesFromFolderId'. Either include it or remove the dependency array.",["1429"],["1430"],"React Hook useEffect has missing dependencies: 'selectedFileIsAudio' and 'selectedFileIsVideo'. Either include them or remove the dependency array.",["1431"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Download' is assigned a value but never used.","'EnterFullScreen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'typingTimeout'. Either include it or remove the dependency array.",["1432"],"'Box' is defined but never used.","'getUsersDownloadHistoryQueryError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getUsersDownloadHistory'. Either include it or remove the dependency array.",["1433"],["1434"],"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'deleteDesignationLoading' is assigned a value but never used.",["1435"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getDesignations'. Either include them or remove the dependency array.",["1436"],"React Hook useEffect has a missing dependency: 'getDesignations'. Either include it or remove the dependency array.",["1437"],["1438"],["1439"],["1440"],["1441"],["1442"],"'DialogActions' is defined but never used.","Duplicate key 'padding'.","'textDecorationLine' is assigned a value but never used.",["1443"],["1444"],["1445"],"React Hook useEffect has a missing dependency: 'getModDetailByFileId'. Either include it or remove the dependency array.",["1446"],"'dayjs' is defined but never used.","React Hook useEffect has missing dependencies: 'getUsersDownloadHistory' and 'props.authUserId'. Either include them or remove the dependency array.",["1447"],["1448"],"'getFilesFullDetailsByIdForExportQueryLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'columnsForExport' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1449"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["1450"],["1451"],["1452"],["1453"],["1454"],["1455"],["1456"],"'getUserError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getUser' and 'props.editProfileModalToggle'. Either include them or remove the dependency array.",["1457"],["1458"],["1459"],["1460"],"'Typography' is defined but never used.",["1461"],["1462"],"'moreInfo' is assigned a value but never used.",["1463"],["1464"],"'getUsersError' is assigned a value but never used.",["1465"],["1466"],"'PanelType' is defined but never used.","'resolvesettings' is defined but never used.",["1467"],["1468"],["1469"],["1470"],["1471"],["1472"],["1473"],"no-native-reassign",["1474"],"no-negated-in-lhs",["1475"],"'deleteCategoryLoading' is assigned a value but never used.",["1476"],"React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getCategories'. Either include them or remove the dependency array.",["1477"],"'getCategoriesError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.",["1478"],["1479"],["1480"],["1481"],["1482"],["1483"],"'deleteSlidersSettingsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getSlidersSettings'. Either include them or remove the dependency array.",["1484"],["1485"],"'getSlidersSettingsError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getSlidersSettings'. Either include it or remove the dependency array.",["1486"],"React Hook useEffect has missing dependencies: 'fillDataForEdit', 'props.addEditSlidersModalRowData', and 'props.modalType'. Either include them or remove the dependency array.",["1487"],["1488"],["1489"],["1490"],["1491"],"'deleteProductsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getProducts'. Either include them or remove the dependency array.",["1492"],["1493"],"'getProductsError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getProducts'. Either include it or remove the dependency array.",["1494"],"React Hook useEffect has missing dependencies: 'fillDataForEdit', 'getAddons', 'getCategories', 'props.addEditProductsModalRowData', and 'props.modalType'. Either include them or remove the dependency array.",["1495"],["1496"],["1497"],["1498"],["1499"],["1500"],"'getAddonsLoading' is assigned a value but never used.","'getAddonsError' is assigned a value but never used.","'deleteAddonsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'enqueueSnackbar' and 'getAddons'. Either include them or remove the dependency array.",["1501"],["1502"],"React Hook useEffect has a missing dependency: 'getAddons'. Either include it or remove the dependency array.",["1503"],"no-whitespace-before-property","Unexpected whitespace before property length.","MemberExpression","unexpectedWhitespace",{"range":"1504","text":"1505"},"'ValidationSelectField' is defined but never used.","'parse' is defined but never used.","React Hook useEffect has missing dependencies: 'fillDataForEdit', 'props.addEditAddonsModalRowData', and 'props.modalType'. Either include them or remove the dependency array.",["1506"],["1507"],["1508"],["1509"],["1510"],{"desc":"1511","fix":"1512"},{"desc":"1513","fix":"1514"},{"desc":"1515","fix":"1516"},{"desc":"1517","fix":"1518"},{"desc":"1511","fix":"1519"},{"desc":"1520","fix":"1521"},{"desc":"1522","fix":"1523"},{"desc":"1524","fix":"1525"},{"desc":"1526","fix":"1527"},{"desc":"1528","fix":"1529"},{"desc":"1530","fix":"1531"},{"desc":"1532","fix":"1533"},{"desc":"1534","fix":"1535"},{"desc":"1536","fix":"1537"},{"desc":"1538","fix":"1539"},{"desc":"1540","fix":"1541"},{"desc":"1532","fix":"1542"},{"desc":"1543","fix":"1544"},{"desc":"1545","fix":"1546"},{"desc":"1547","fix":"1548"},{"desc":"1549","fix":"1550"},{"desc":"1551","fix":"1552"},{"desc":"1553","fix":"1554"},{"desc":"1555","fix":"1556"},{"desc":"1557","fix":"1558"},{"desc":"1511","fix":"1559"},{"desc":"1560","fix":"1561"},{"desc":"1562","fix":"1563"},{"desc":"1564","fix":"1565"},{"desc":"1566","fix":"1567"},{"desc":"1568","fix":"1569"},{"desc":"1570","fix":"1571"},{"desc":"1572","fix":"1573"},{"desc":"1574","fix":"1575"},{"desc":"1576","fix":"1577"},{"desc":"1578","fix":"1579"},{"desc":"1580","fix":"1581"},{"desc":"1582","fix":"1583"},{"desc":"1584","fix":"1585"},{"desc":"1586","fix":"1587"},{"desc":"1588","fix":"1589"},{"desc":"1590","fix":"1591"},{"desc":"1511","fix":"1592"},{"desc":"1593","fix":"1594"},{"desc":"1595","fix":"1596"},{"desc":"1597","fix":"1598"},{"desc":"1599","fix":"1600"},{"desc":"1601","fix":"1602"},{"desc":"1603","fix":"1604"},{"desc":"1605","fix":"1606"},{"desc":"1607","fix":"1608"},{"desc":"1609","fix":"1610"},{"desc":"1511","fix":"1611"},{"desc":"1612","fix":"1613"},{"desc":"1614","fix":"1615"},{"desc":"1616","fix":"1617"},{"desc":"1618","fix":"1619"},{"desc":"1620","fix":"1621"},{"desc":"1622","fix":"1623"},{"desc":"1624","fix":"1625"},{"desc":"1626","fix":"1627"},{"desc":"1628","fix":"1629"},{"desc":"1603","fix":"1630"},{"desc":"1631","fix":"1632"},{"desc":"1633","fix":"1634"},{"desc":"1511","fix":"1635"},{"desc":"1636","fix":"1637"},{"desc":"1638","fix":"1639"},{"desc":"1517","fix":"1640"},{"desc":"1511","fix":"1641"},{"desc":"1574","fix":"1642"},{"desc":"1643","fix":"1644"},{"desc":"1645","fix":"1646"},{"desc":"1647","fix":"1648"},{"desc":"1649","fix":"1650"},{"desc":"1601","fix":"1651"},{"desc":"1603","fix":"1652"},{"desc":"1653","fix":"1654"},{"desc":"1655","fix":"1656"},{"desc":"1547","fix":"1657"},{"desc":"1528","fix":"1658"},{"desc":"1511","fix":"1659"},{"desc":"1647","fix":"1660"},{"desc":"1649","fix":"1661"},{"desc":"1662","fix":"1663"},{"desc":"1664","fix":"1665"},{"desc":"1534","fix":"1666"},{"desc":"1536","fix":"1667"},"no-global-assign","no-unsafe-negation",{"desc":"1668","fix":"1669"},{"desc":"1670","fix":"1671"},{"desc":"1672","fix":"1673"},{"desc":"1511","fix":"1674"},{"desc":"1675","fix":"1676"},{"desc":"1677","fix":"1678"},{"desc":"1679","fix":"1680"},{"desc":"1681","fix":"1682"},{"desc":"1683","fix":"1684"},{"desc":"1685","fix":"1686"},{"desc":"1687","fix":"1688"},{"desc":"1689","fix":"1690"},{"desc":"1691","fix":"1692"},{"desc":"1693","fix":"1694"},{"desc":"1695","fix":"1696"},{"desc":"1697","fix":"1698"},{"desc":"1699","fix":"1700"},{"desc":"1701","fix":"1702"},{"desc":"1703","fix":"1704"},{"desc":"1705","fix":"1706"},{"desc":"1707","fix":"1708"},{"desc":"1709","fix":"1710"},{"desc":"1711","fix":"1712"},{"desc":"1713","fix":"1714"},{"desc":"1715","fix":"1716"},{"desc":"1717","fix":"1718"},{"desc":"1719","fix":"1720"},{"desc":"1721","fix":"1722"},[4391,4393],".",{"desc":"1723","fix":"1724"},{"desc":"1725","fix":"1726"},{"desc":"1727","fix":"1728"},{"desc":"1729","fix":"1730"},{"desc":"1731","fix":"1732"},"Update the dependencies array to be: [props]",{"range":"1733","text":"1734"},"Update the dependencies array to be: [enqueueSnackbar, loginMutationError]",{"range":"1735","text":"1736"},"Update the dependencies array to be: [loginMutationResult, navigate, props]",{"range":"1737","text":"1738"},"Update the dependencies array to be: [refProp, validate_, value]",{"range":"1739","text":"1740"},{"range":"1741","text":"1734"},"Update the dependencies array to be: [getUser, props.authUserId, props.editProfileModalToggle]",{"range":"1742","text":"1743"},"Update the dependencies array to be: [getUserQueryResult, props]",{"range":"1744","text":"1745"},"Update the dependencies array to be: [enqueueSnackbar, updateLoggedinUserMeMutationError]",{"range":"1746","text":"1747"},"Update the dependencies array to be: [enqueueSnackbar, handleClose, props, updateLoggedinUserMeMutationResult]",{"range":"1748","text":"1749"},"Update the dependencies array to be: [refProp, phone, isPhoneValid, country]",{"range":"1750","text":"1751"},"Update the dependencies array to be: [getFoldersPathQueryResult, props]",{"range":"1752","text":"1753"},"Update the dependencies array to be: [getFoldersPath]",{"range":"1754","text":"1755"},"Update the dependencies array to be: [props.value, value]",{"range":"1756","text":"1757"},"Update the dependencies array to be: [ref, validate_, value]",{"range":"1758","text":"1759"},"Update the dependencies array to be: [deleteFolderPathMutationError, enqueueSnackbar]",{"range":"1760","text":"1761"},"Update the dependencies array to be: [deleteFolderPathMutationResult, enqueueSnackbar, getFoldersPath]",{"range":"1762","text":"1763"},{"range":"1764","text":"1755"},"Update the dependencies array to be: [deleteUserMutationError, enqueueSnackbar]",{"range":"1765","text":"1766"},"Update the dependencies array to be: [deleteUserMutationResult, enqueueSnackbar, getUsers]",{"range":"1767","text":"1768"},"Update the dependencies array to be: [getUsers]",{"range":"1769","text":"1770"},"Update the dependencies array to be: [getDesignations, props]",{"range":"1771","text":"1772"},"Update the dependencies array to be: [enqueueSnackbar, updateUserMutationError]",{"range":"1773","text":"1774"},"Update the dependencies array to be: [enqueueSnackbar, handleClose, props, updateUserMutationResult]",{"range":"1775","text":"1776"},"Update the dependencies array to be: [addUserMutationError, enqueueSnackbar]",{"range":"1777","text":"1778"},"Update the dependencies array to be: [addUserMutationResult, enqueueSnackbar, handleClose, props]",{"range":"1779","text":"1780"},{"range":"1781","text":"1734"},"Update the dependencies array to be: [enqueueSnackbar, getFoldersFilesFromPathQueryError]",{"range":"1782","text":"1783"},"Update the dependencies array to be: [getFoldersFilesFromPathQueryResult, props]",{"range":"1784","text":"1785"},"Update the dependencies array to be: [enqueueSnackbar, updateFolderPathMutationError]",{"range":"1786","text":"1787"},"Update the dependencies array to be: [enqueueSnackbar, handleClose, props, updateFolderPathMutationResult]",{"range":"1788","text":"1789"},"Update the dependencies array to be: [addFolderPathMutationError, enqueueSnackbar]",{"range":"1790","text":"1791"},"Update the dependencies array to be: [addFolderPathMutationResult, enqueueSnackbar, handleClose, props]",{"range":"1792","text":"1793"},"Update the dependencies array to be: [handleMousemove, handleMouseup, props]",{"range":"1794","text":"1795"},"Update the dependencies array to be: [updateAppBarHeight]",{"range":"1796","text":"1797"},"Update the dependencies array to be: [getFoldersPath, props]",{"range":"1798","text":"1799"},"Update the dependencies array to be: [updateFoldersMenuBottomHeight]",{"range":"1800","text":"1801"},"Update the dependencies array to be: [updateAppBarHeightAndWindowHeight]",{"range":"1802","text":"1803"},"Update the dependencies array to be: [getFoldersFilesFromFolderId, props.filesListAndEditorSelectedFolderId, refreshFolderCallbackAllSubscriptionResult]",{"range":"1804","text":"1805"},"Update the dependencies array to be: [props, refreshFolderCallbackSubscriptionResult]",{"range":"1806","text":"1807"},"Update the dependencies array to be: [getFoldersFilesFromFolderIdQueryResult, props]",{"range":"1808","text":"1809"},"Update the dependencies array to be: [getIdsForQuickSearchQueryResult, props]",{"range":"1810","text":"1811"},"Update the dependencies array to be: [getFoldersFilesFromFolderIdDbFilterQueryResult, props]",{"range":"1812","text":"1813"},{"range":"1814","text":"1734"},"Update the dependencies array to be: [props.subscriptionConnected, props.filesListAndEditorSelectedFolderId, getFoldersFilesFromFolderId]",{"range":"1815","text":"1816"},"Update the dependencies array to be: [props, props.filesListAndEditorSelectedFolderId]",{"range":"1817","text":"1818"},"Update the dependencies array to be: [props.filesListAndEditorSelectedFileItem, selectedFileIsAudio, selectedFileIsVideo]",{"range":"1819","text":"1820"},"Update the dependencies array to be: [typingTimeout]",{"range":"1821","text":"1822"},"Update the dependencies array to be: [getUsersDownloadHistory]",{"range":"1823","text":"1824"},"Update the dependencies array to be: [getUsersDownloadHistoryQueryResult, props]",{"range":"1825","text":"1826"},"Update the dependencies array to be: [deleteDesignationMutationError, enqueueSnackbar]",{"range":"1827","text":"1828"},"Update the dependencies array to be: [deleteDesignationMutationResult, enqueueSnackbar, getDesignations]",{"range":"1829","text":"1830"},"Update the dependencies array to be: [getDesignations]",{"range":"1831","text":"1832"},{"range":"1833","text":"1734"},"Update the dependencies array to be: [enqueueSnackbar, updateDesignationMutationError]",{"range":"1834","text":"1835"},"Update the dependencies array to be: [enqueueSnackbar, handleClose, props, updateDesignationMutationResult]",{"range":"1836","text":"1837"},"Update the dependencies array to be: [addDesignationMutationError, enqueueSnackbar]",{"range":"1838","text":"1839"},"Update the dependencies array to be: [addDesignationMutationResult, enqueueSnackbar, handleClose, props]",{"range":"1840","text":"1841"},"Update the dependencies array to be: [props.modDetailsModalNextPreviousIndex, props.modDetailsModalData, props]",{"range":"1842","text":"1843"},"Update the dependencies array to be: [enqueueSnackbar, getModDetailByFileIdQueryError]",{"range":"1844","text":"1845"},"Update the dependencies array to be: [getModDetailByFileIdQueryResult, props]",{"range":"1846","text":"1847"},"Update the dependencies array to be: [getModDetailByFileId, props.fileId]",{"range":"1848","text":"1849"},"Update the dependencies array to be: [getUsersDownloadHistory, props.authUserId]",{"range":"1850","text":"1851"},{"range":"1852","text":"1826"},"Update the dependencies array to be: [columnsForExport, getFilesFullDetailsByIdForExportQueryResult, props]",{"range":"1853","text":"1854"},"Update the dependencies array to be: [enqueueSnackbar, getFilesFullDetailsByIdForExportQueryError, props]",{"range":"1855","text":"1856"},{"range":"1857","text":"1734"},"Update the dependencies array to be: [enqueueSnackbar, loginError]",{"range":"1858","text":"1859"},"Update the dependencies array to be: [loginDataResult, navigate, props]",{"range":"1860","text":"1861"},{"range":"1862","text":"1740"},{"range":"1863","text":"1734"},{"range":"1864","text":"1797"},"Update the dependencies array to be: [getUser, props.editProfileModalToggle]",{"range":"1865","text":"1866"},"Update the dependencies array to be: [getUserResult, props]",{"range":"1867","text":"1868"},"Update the dependencies array to be: [editUserError, enqueueSnackbar]",{"range":"1869","text":"1870"},"Update the dependencies array to be: [editUserResult, enqueueSnackbar, handleClose, props]",{"range":"1871","text":"1872"},{"range":"1873","text":"1824"},{"range":"1874","text":"1826"},"Update the dependencies array to be: [deleteUserResult, enqueueSnackbar, getUsers]",{"range":"1875","text":"1876"},"Update the dependencies array to be: [deleteUserError, enqueueSnackbar]",{"range":"1877","text":"1878"},{"range":"1879","text":"1770"},{"range":"1880","text":"1751"},{"range":"1881","text":"1734"},{"range":"1882","text":"1870"},{"range":"1883","text":"1872"},"Update the dependencies array to be: [addUserError, enqueueSnackbar]",{"range":"1884","text":"1885"},"Update the dependencies array to be: [addUserResult, enqueueSnackbar, handleClose, props]",{"range":"1886","text":"1887"},{"range":"1888","text":"1757"},{"range":"1889","text":"1759"},"Update the dependencies array to be: [deleteCategoryError, enqueueSnackbar]",{"range":"1890","text":"1891"},"Update the dependencies array to be: [deleteCategoryResult, enqueueSnackbar, getCategories]",{"range":"1892","text":"1893"},"Update the dependencies array to be: [getCategories]",{"range":"1894","text":"1895"},{"range":"1896","text":"1734"},"Update the dependencies array to be: [editCategoryError, enqueueSnackbar]",{"range":"1897","text":"1898"},"Update the dependencies array to be: [editCategoryResult, enqueueSnackbar, handleClose, props]",{"range":"1899","text":"1900"},"Update the dependencies array to be: [addCategoryError, enqueueSnackbar]",{"range":"1901","text":"1902"},"Update the dependencies array to be: [addCategoryResult, enqueueSnackbar, handleClose, props]",{"range":"1903","text":"1904"},"Update the dependencies array to be: [deleteSlidersSettingsResult, enqueueSnackbar, getSlidersSettings]",{"range":"1905","text":"1906"},"Update the dependencies array to be: [deleteSlidersSettingsError, enqueueSnackbar]",{"range":"1907","text":"1908"},"Update the dependencies array to be: [getSlidersSettings]",{"range":"1909","text":"1910"},"Update the dependencies array to be: [fillDataForEdit, props.addEditSlidersModalRowData, props.modalType]",{"range":"1911","text":"1912"},"Update the dependencies array to be: [editSlidersSettingsError, enqueueSnackbar]",{"range":"1913","text":"1914"},"Update the dependencies array to be: [editSlidersSettingsResult, enqueueSnackbar, handleClose, props]",{"range":"1915","text":"1916"},"Update the dependencies array to be: [addSlidersSettingsError, enqueueSnackbar]",{"range":"1917","text":"1918"},"Update the dependencies array to be: [addSlidersSettingsResult, enqueueSnackbar, handleClose, props]",{"range":"1919","text":"1920"},"Update the dependencies array to be: [deleteProductsResult, enqueueSnackbar, getProducts]",{"range":"1921","text":"1922"},"Update the dependencies array to be: [deleteProductsError, enqueueSnackbar]",{"range":"1923","text":"1924"},"Update the dependencies array to be: [getProducts]",{"range":"1925","text":"1926"},"Update the dependencies array to be: [fillDataForEdit, getAddons, getCategories, props.addEditProductsModalRowData, props.modalType]",{"range":"1927","text":"1928"},"Update the dependencies array to be: [getCategoriesResult, props]",{"range":"1929","text":"1930"},"Update the dependencies array to be: [editProductsError, enqueueSnackbar]",{"range":"1931","text":"1932"},"Update the dependencies array to be: [editProductsResult, enqueueSnackbar, handleClose, props]",{"range":"1933","text":"1934"},"Update the dependencies array to be: [addProductsError, enqueueSnackbar]",{"range":"1935","text":"1936"},"Update the dependencies array to be: [addProductsResult, enqueueSnackbar, handleClose, props]",{"range":"1937","text":"1938"},"Update the dependencies array to be: [deleteAddonsResult, enqueueSnackbar, getAddons]",{"range":"1939","text":"1940"},"Update the dependencies array to be: [deleteAddonsError, enqueueSnackbar]",{"range":"1941","text":"1942"},"Update the dependencies array to be: [getAddons]",{"range":"1943","text":"1944"},"Update the dependencies array to be: [fillDataForEdit, props.addEditAddonsModalRowData, props.modalType]",{"range":"1945","text":"1946"},"Update the dependencies array to be: [editAddonsError, enqueueSnackbar]",{"range":"1947","text":"1948"},"Update the dependencies array to be: [editAddonsResult, enqueueSnackbar, handleClose, props]",{"range":"1949","text":"1950"},"Update the dependencies array to be: [addAddonsError, enqueueSnackbar]",{"range":"1951","text":"1952"},"Update the dependencies array to be: [addAddonsResult, enqueueSnackbar, handleClose, props]",{"range":"1953","text":"1954"},[3233,3235],"[props]",[4208,4228],"[enqueueSnackbar, loginMutationError]",[5236,5257],"[loginMutationResult, navigate, props]",[1166,1182],"[refProp, validate_, value]",[1598,1600],[4478,4480],"[getUser, props.authUserId, props.editProfileModalToggle]",[5320,5340],"[getUserQueryResult, props]",[6763,6798],"[enqueueSnackbar, updateLoggedinUserMeMutationError]",[7725,7761],"[enqueueSnackbar, handleClose, props, updateLoggedinUserMeMutationResult]",[1240,1256],"[refProp, phone, isPhoneValid, country]",[3610,3637],"[getFoldersPathQueryResult, props]",[3692,3694],"[getFoldersPath]",[826,839],"[props.value, value]",[975,987],"[ref, validate_, value]",[1830,1861],"[deleteFolderPathMutationError, enqueueSnackbar]",[2333,2365],"[deleteFolderPathMutationResult, enqueueSnackbar, getFoldersPath]",[2841,2843],[1710,1735],"[deleteUserMutationError, enqueueSnackbar]",[2149,2175],"[deleteUserMutationResult, enqueueSnackbar, getUsers]",[2764,2766],"[getUsers]",[6379,6381],"[getDesignations, props]",[7937,7962],"[enqueueSnackbar, updateUserMutationError]",[8496,8522],"[enqueueSnackbar, handleClose, props, updateUserMutationResult]",[9986,10008],"[addUserMutationError, enqueueSnackbar]",[10522,10545],"[addUserMutationResult, enqueueSnackbar, handleClose, props]",[3006,3008],[4118,4153],"[enqueueSnackbar, getFoldersFilesFromPathQueryError]",[4485,4521],"[getFoldersFilesFromPathQueryResult, props]",[5476,5507],"[enqueueSnackbar, updateFolderPathMutationError]",[6097,6129],"[enqueueSnackbar, handleClose, props, updateFolderPathMutationResult]",[6933,6961],"[addFolderPathMutationError, enqueueSnackbar]",[7528,7557],"[addFolderPathMutationResult, enqueueSnackbar, handleClose, props]",[3085,3087],"[handleMousemove, handleMouseup, props]",[1133,1135],"[updateAppBarHeight]",[2209,2211],"[getFoldersPath, props]",[1569,1571],"[updateFoldersMenuBottomHeight]",[1275,1277],"[updateAppBarHeightAndWindowHeight]",[5460,5504],"[getFoldersFilesFromFolderId, props.filesListAndEditorSelectedFolderId, refreshFolderCallbackAllSubscriptionResult]",[6694,6735],"[props, refreshFolderCallbackSubscriptionResult]",[8119,8159],"[getFoldersFilesFromFolderIdQueryResult, props]",[9234,9267],"[getIdsForQuickSearchQueryResult, props]",[11999,12047],"[getFoldersFilesFromFolderIdDbFilterQueryResult, props]",[12784,12786],[13150,13221],"[props.subscriptionConnected, props.filesListAndEditorSelectedFolderId, getFoldersFilesFromFolderId]",[13635,13677],"[props, props.filesListAndEditorSelectedFolderId]",[1601,1643],"[props.filesListAndEditorSelectedFileItem, selectedFileIsAudio, selectedFileIsVideo]",[1592,1594],"[typingTimeout]",[2975,2977],"[getUsersDownloadHistory]",[3232,3268],"[getUsersDownloadHistoryQueryResult, props]",[1837,1869],"[deleteDesignationMutationError, enqueueSnackbar]",[2346,2379],"[deleteDesignationMutationResult, enqueueSnackbar, getDesignations]",[2927,2929],"[getDesignations]",[2704,2706],[3579,3611],"[enqueueSnackbar, updateDesignationMutationError]",[4206,4239],"[enqueueSnackbar, handleClose, props, updateDesignationMutationResult]",[4928,4957],"[addDesignationMutationError, enqueueSnackbar]",[5529,5559],"[addDesignationMutationResult, enqueueSnackbar, handleClose, props]",[6972,7039],"[props.modDetailsModalNextPreviousIndex, props.modDetailsModalData, props]",[7969,8001],"[enqueueSnackbar, getModDetailByFileIdQueryError]",[8263,8296],"[getModDetailByFileIdQueryResult, props]",[8458,8472],"[getModDetailByFileId, props.fileId]",[3868,3870],"[getUsersDownloadHistory, props.authUserId]",[4125,4161],[6607,6652],"[columnsForExport, getFilesFullDetailsByIdForExportQueryResult, props]",[7008,7052],"[enqueueSnackbar, getFilesFullDetailsByIdForExportQueryError, props]",[3122,3124],[3545,3557],"[enqueueSnackbar, loginError]",[4484,4501],"[loginDataResult, navigate, props]",[1205,1221],[1637,1639],[1133,1135],[4071,4073],"[getUser, props.editProfileModalToggle]",[4794,4809],"[getUserResult, props]",[5158,5173],"[editUserError, enqueueSnackbar]",[5768,5784],"[editUserResult, enqueueSnackbar, handleClose, props]",[2899,2901],[3156,3192],[1612,1630],"[deleteUserResult, enqueueSnackbar, getUsers]",[1772,1789],"[deleteUserError, enqueueSnackbar]",[2036,2038],[1240,1256],[5421,5423],[5809,5824],[6091,6107],[6428,6442],"[addUserError, enqueueSnackbar]",[6708,6723],"[addUserResult, enqueueSnackbar, handleClose, props]",[826,839],[975,987],[1448,1469],"[deleteCategoryError, enqueueSnackbar]",[1685,1707],"[deleteCategoryResult, enqueueSnackbar, getCategories]",[1966,1968],"[getCategories]",[2640,2642],[3044,3063],"[editCategoryError, enqueueSnackbar]",[3345,3365],"[editCategoryResult, enqueueSnackbar, handleClose, props]",[3715,3733],"[addCategoryError, enqueueSnackbar]",[4011,4030],"[addCategoryResult, enqueueSnackbar, handleClose, props]",[1659,1688],"[deleteSlidersSettingsResult, enqueueSnackbar, getSlidersSettings]",[1852,1880],"[deleteSlidersSettingsError, enqueueSnackbar]",[2167,2169],"[getSlidersSettings]",[3477,3479],"[fillDataForEdit, props.addEditSlidersModalRowData, props.modalType]",[4647,4673],"[editSlidersSettingsError, enqueueSnackbar]",[4926,4953],"[editSlidersSettingsResult, enqueueSnackbar, handleClose, props]",[5351,5376],"[addSlidersSettingsError, enqueueSnackbar]",[5626,5652],"[addSlidersSettingsResult, enqueueSnackbar, handleClose, props]",[1627,1649],"[deleteProductsResult, enqueueSnackbar, getProducts]",[1799,1820],"[deleteProductsError, enqueueSnackbar]",[2079,2081],"[getProducts]",[6281,6283],"[fillDataForEdit, getAddons, getCategories, props.addEditProductsModalRowData, props.modalType]",[9224,9245],"[getCategoriesResult, props]",[9644,9663],"[editProductsError, enqueueSnackbar]",[9904,9924],"[editProductsResult, enqueueSnackbar, handleClose, props]",[10281,10299],"[addProductsError, enqueueSnackbar]",[10537,10556],"[addProductsResult, enqueueSnackbar, handleClose, props]",[1595,1615],"[deleteAddonsResult, enqueueSnackbar, getAddons]",[1761,1780],"[deleteAddonsError, enqueueSnackbar]",[2015,2017],"[getAddons]",[3557,3559],"[fillDataForEdit, props.addEditAddonsModalRowData, props.modalType]",[4931,4948],"[editAddonsError, enqueueSnackbar]",[5181,5199],"[editAddonsResult, enqueueSnackbar, handleClose, props]",[5536,5552],"[addAddonsError, enqueueSnackbar]",[5782,5799],"[addAddonsResult, enqueueSnackbar, handleClose, props]"]